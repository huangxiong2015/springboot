<?xml version="1.0" encoding="UTF-8" ?>
<!-- 增加向redis批量发送日志记录的appender -->
<included>
    <appender name="REDIS_APPENDER" class="net.logstash.logback.appender.LoggingEventAsyncDisruptorAppender">
        <ringBufferSize>262144</ringBufferSize>
        <!-- <waitStrategyType>sleeping</waitStrategyType> -->
        <appender class="de.idealo.logback.appender.RedisBatchAppender">
            <connectionConfig>
                <!-- redis sentinel: -->
                <!-- <scheme>SENTINEL</scheme>
                <sentinelMasterName>mymaster</sentinelMasterName>
                <sentinels>server:26379</sentinels> -->
                <!-- redis node: -->
                <scheme>NODE</scheme>
                <host>${spring.redis.host}</host>
                <port>${spring.redis.port}</port>
                <key>logstash-redis</key>
                <password>${spring.redis.password}</password>
                <database>10</database>
            </connectionConfig>
            <maxBatchMessages>1000</maxBatchMessages>
            <maxBatchSeconds>5</maxBatchSeconds>
            <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
                <providers>
                    <mdc/>
                    <pattern>
                        <pattern>
	                    {
	                    "appname": "${appName}",                            
	                    "logtime": "%d{yyyy-MM-dd'T'HH:mm:ss.SSSZZ}",
	                    "message": "%message",
	                    "logger": "%logger",
	                    "thread": "%thread",
	                    "level": "%-5level",
	                    "host": "${HOSTNAME}",
	                    "type": "application"
	                    }
                        </pattern>
                    </pattern>
                    <stackTrace>
                        <throwableConverter class="net.logstash.logback.stacktrace.ShortenedThrowableConverter">
                            <maxDepthPerThrowable>30</maxDepthPerThrowable>
                            <maxLength>4096</maxLength>
                            <shortenedClassNameLength>36</shortenedClassNameLength>
                            <rootCauseFirst>true</rootCauseFirst>
                        </throwableConverter>
                   </stackTrace>
                </providers>
            </encoder>		            
        </appender>
   		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>INFO</level>
		</filter>
    </appender>
    <!-- <logger name="de.idealo.logback.appender" level="DEBUG">
		<appender-ref ref="STDOUT" />		
		<appender-ref ref="ASYNC_DEBUG"/>
		<appender-ref ref="ASYNC_INFO"/>
		<appender-ref ref="ASYNC_WARN"/>
		<appender-ref ref="ASYNC_ERROR"/>
	</logger> -->
</included>