<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yikuyi.product.rule.common.dao.ProductPriceRuleDao">
  <resultMap id="BaseResultMap" type="com.yikuyi.rule.price.ProductPriceRule" >
    <id column="PRODUCT_PRICE_RULE_ID" property="priceRuleId" />
    <result column="PRODUCT_PRICE_PURPOSE_TYPE_ID" property="pricePurposeType" />
    <result column="RULE_NAME" property="ruleName" />
    <result column="DESCRIPTION" property="description" />
    <result column="STATUS_ID" property="ruleStatus" />
    <result column="CREATOR" property="creator" />
    <result column="CREATED_DATE" property="createdDate" />
    <result column="LAST_UPDATE_USER" property="lastUpdateUser" />
    <result column="LAST_UPDATE_DATE" property="lastUpdateDate" />
    <collection property="conds" ofType="com.yikuyi.rule.price.ProductPriceCond">
	      <id column="PRODUCT_PRICE_COND_SEQ_ID" property="productPriceCondSeqId" />
	      <id column="INPUT_PARAM_ENUM_ID" property="inputParamEnumId" />
	      <result column="OPERATOR_ENUM_ID" property="operatorEnumId" />
	      <result column="COND_VALUE" property="condValue" />    
    </collection>
    <collection property="actions" ofType="com.yikuyi.rule.price.ProductPriceAction">
          <id column="PRODUCT_PRICE_ACTION_SEQ_ID" property="productPriceActionSeqId" />
          <id column="action_cond_id" property="productPriceCondSeqId" />
	      <result column="PRODUCT_PRICE_ACTION_TYPE_ID" property="productPriceActionTypeId" />
	      <result column="UOM_ID" property="uomId" />
	      <result column="AMOUNT" property="amount" />
	      <result column="EXTEND_AMOUNT" property="extendAmount" />
	      <result column="PRODUCT_PRICE_PURPOSE_ID" property="productPricePurposeId" />
    </collection>
  </resultMap>
  
	<insert id="insert" parameterType="com.yikuyi.rule.price.ProductPriceRule">
		insert into PRODUCT_PRICE_RULE
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="priceRuleId != null">
				PRODUCT_PRICE_RULE_ID,
			</if>
			<if test="pricePurposeType != null">
				PRODUCT_PRICE_PURPOSE_TYPE_ID,
			</if>
			<if test="ruleName != null">
				RULE_NAME,
			</if>
			<if test="description != null">
				DESCRIPTION,
			</if>
			<if test="ruleStatus != null">
				STATUS_ID,
			</if>
			<if test="creator != null">
				CREATOR,
			</if>
			<if test="createdDate != null">
				CREATED_DATE,
			</if>
			<if test="lastUpdateUser != null">
				LAST_UPDATE_USER,
			</if>
				LAST_UPDATE_DATE,
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="priceRuleId != null">
				#{priceRuleId,jdbcType=VARCHAR},
			</if>
			<if test="pricePurposeType != null">
				#{pricePurposeType,jdbcType=VARCHAR},
			</if>
			<if test="ruleName != null">
				#{ruleName,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				#{description,jdbcType=VARCHAR},
			</if>
			<if test="ruleStatus != null">
				#{ruleStatus,jdbcType=VARCHAR},
			</if>
			<if test="creator != null">
				#{creator,jdbcType=VARCHAR},
			</if>
			<if test="createdDate != null">
				#{createdDate,jdbcType=TIMESTAMP},
			</if>
			<if test="lastUpdateUser != null">
				#{lastUpdateUser,jdbcType=VARCHAR},
			</if>
				SYSDATE(),
		</trim>
	</insert>
	<select id="findList" resultMap="BaseResultMap">
	select r.PRODUCT_PRICE_RULE_ID ,
		r.PRODUCT_PRICE_PURPOSE_TYPE_ID ,
		r.RULE_NAME ,
		r.DESCRIPTION ,
		r.STATUS_ID ,
		r.LAST_UPDATE_DATE,
		r.CREATED_DATE,
		c.PRODUCT_PRICE_COND_SEQ_ID ,
		c.INPUT_PARAM_ENUM_ID ,
		c.OPERATOR_ENUM_ID ,
		c.COND_VALUE,
		a.PRODUCT_PRICE_ACTION_SEQ_ID ,
		a.PRODUCT_PRICE_COND_SEQ_ID as action_cond_id,
		a.PRODUCT_PRICE_ACTION_TYPE_ID ,
		a.UOM_ID ,
		a.AMOUNT ,
		a.EXTEND_AMOUNT ,
		a.PRODUCT_PRICE_PURPOSE_ID 
	from 
		( SELECT 
			r1.PRODUCT_PRICE_RULE_ID,
			r1.PRODUCT_PRICE_PURPOSE_TYPE_ID,
			r1.RULE_NAME,
			r1.DESCRIPTION,
			r1.STATUS_ID,
			r1.LAST_UPDATE_DATE,
			r1.CREATED_DATE
		 FROM
			PRODUCT_PRICE_RULE r1
	 	WHERE  1= 1  AND r1.STATUS_ID <![CDATA[ <> ]]> 'DELETED'
		<if test="pricePurposeType != null">
				 AND r1.PRODUCT_PRICE_PURPOSE_TYPE_ID = #{pricePurposeType,jdbcType=VARCHAR}
		</if>
		<if test="startDate !=null">
  				and STR_TO_DATE(r1.CREATED_DATE,'%Y-%m-%d') &gt;= #{startDate} 
		</if>
		<if test="endDate !=null">
			and STR_TO_DATE(r1.CREATED_DATE,'%Y-%m-%d') &lt;= #{endDate}
		</if>
		
		<if test="ruleStatus != null">
				 AND r1.STATUS_ID = #{ruleStatus,jdbcType=VARCHAR}
		</if>
		<if test="vendorId != null and ruleName != null">
				 AND( EXISTS (SELECT 1 from PRODUCT_PRICE_COND c1 where c1.COND_VALUE = #{vendorId,jdbcType=VARCHAR} and
				 			 c1.INPUT_PARAM_ENUM_ID='VENDOR_ID' and c1.PRODUCT_PRICE_RULE_ID = r1.PRODUCT_PRICE_RULE_ID)
		 			  OR replace(r1.RULE_NAME,' ','') like concat('%',replace(#{ruleName,jdbcType=VARCHAR},' ',''),'%')
		 			  )
		</if>
		<if test="vendorId != null and ruleName == null">
				 AND EXISTS (SELECT 1 from PRODUCT_PRICE_COND c1 where c1.COND_VALUE = #{vendorId,jdbcType=VARCHAR} and
				 			 c1.INPUT_PARAM_ENUM_ID='VENDOR_ID' and c1.PRODUCT_PRICE_RULE_ID = r1.PRODUCT_PRICE_RULE_ID)
				 			 
		</if>
		<if test="ruleName != null and vendorId == null">
				 AND replace(r1.RULE_NAME,' ','') like concat('%',replace(#{ruleName,jdbcType=VARCHAR},' ',''),'%')
		</if>
		order by r1.CREATED_DATE desc	
		LIMIT #{offset,jdbcType=INTEGER},#{limit,jdbcType=INTEGER} 
		)  r 
				INNER JOIN PRODUCT_PRICE_COND c ON r.PRODUCT_PRICE_RULE_ID = c.PRODUCT_PRICE_RULE_ID
				LEFT JOIN PRODUCT_PRICE_ACTION a ON c.PRODUCT_PRICE_COND_SEQ_ID = a.PRODUCT_PRICE_COND_SEQ_ID AND r.PRODUCT_PRICE_RULE_ID = a.PRODUCT_PRICE_RULE_ID 
		
	</select>
	
	<update id="update" parameterType="com.yikuyi.rule.price.ProductPriceRule">
		UPDATE PRODUCT_PRICE_RULE r
		<set>
			<if test="ruleStatus != null">
				r.STATUS_ID= #{ruleStatus,jdbcType=VARCHAR},
			</if>
			<if test="lastUpdateUser != null">
				r.LAST_UPDATE_USER= #{lastUpdateUser,jdbcType=VARCHAR},
			</if>
			r.LAST_UPDATE_DATE=SYSDATE()
		</set>
		WHERE r.PRODUCT_PRICE_RULE_ID= #{priceRuleId,jdbcType=VARCHAR};
	</update>

    <select id="getDetailById" parameterType="java.lang.String" resultMap="BaseResultMap">
	    select r.PRODUCT_PRICE_RULE_ID ,
			   r.PRODUCT_PRICE_PURPOSE_TYPE_ID ,
			   r.RULE_NAME ,
			   r.DESCRIPTION ,
			   r.STATUS_ID ,
			   r.LAST_UPDATE_DATE,
			   r.CREATED_DATE,
			   c.PRODUCT_PRICE_COND_SEQ_ID ,
			   c.INPUT_PARAM_ENUM_ID ,
			   c.OPERATOR_ENUM_ID ,
			   c.COND_VALUE,
			   a.PRODUCT_PRICE_COND_SEQ_ID as action_cond_id,
			   a.PRODUCT_PRICE_ACTION_SEQ_ID ,
			   a.PRODUCT_PRICE_ACTION_TYPE_ID ,
			   a.UOM_ID ,
			   a.AMOUNT ,
			   a.EXTEND_AMOUNT ,
			   a.PRODUCT_PRICE_PURPOSE_ID 
		from PRODUCT_PRICE_RULE r 
					INNER JOIN PRODUCT_PRICE_COND c ON r.PRODUCT_PRICE_RULE_ID = c.PRODUCT_PRICE_RULE_ID
					LEFT JOIN PRODUCT_PRICE_ACTION a ON c.PRODUCT_PRICE_COND_SEQ_ID = a.PRODUCT_PRICE_COND_SEQ_ID AND r.PRODUCT_PRICE_RULE_ID  = a.PRODUCT_PRICE_RULE_ID 
		where r.PRODUCT_PRICE_RULE_ID = #{priceRuleId,jdbcType=VARCHAR}
	</select>
	
	<select id="findSameRule" resultType="java.util.Map" parameterType="java.util.Map">
	     SELECT tab.RULE_NAME AS RULENAME,
	            tab.PRODUCT_PRICE_RULE_ID AS RULEID,
	            tab.concatValue AS CONCATVALUE FROM (
	            SELECT r.PRODUCT_PRICE_RULE_ID,
	                   GROUP_CONCAT(c.COND_VALUE SEPARATOR '-') AS concatValue,
	                   r.RULE_NAME
		        FROM PRODUCT_PRICE_RULE r 
		        INNER JOIN PRODUCT_PRICE_COND c ON r.PRODUCT_PRICE_RULE_ID = c.PRODUCT_PRICE_RULE_ID
		        WHERE r.STATUS_ID  =  'ENABLED'
		          AND r.PRODUCT_PRICE_PURPOSE_TYPE_ID = #{purposeType,jdbcType=VARCHAR}
		          AND c.INPUT_PARAM_ENUM_ID != 'IS_SHOW_LEADTIME'
		        GROUP BY r.PRODUCT_PRICE_RULE_ID,
		                 r.RULE_NAME) tab 
		                 
		 WHERE 1=1 
		 <if test="concatValue != null">
		    and tab.concatValue = #{concatValue,jdbcType=VARCHAR}
		 </if>
	</select>
	
	<select id="checkRuleNameIsExist" parameterType="com.yikuyi.rule.price.ProductPriceRule" resultType="int">
	     SELECT COUNT(1) FROM PRODUCT_PRICE_RULE t 
	     WHERE t.STATUS_ID <![CDATA[ <> ]]> 'DELETED' 
	       AND t.PRODUCT_PRICE_PURPOSE_TYPE_ID = #{pricePurposeType,jdbcType=VARCHAR}
	       AND t.RULE_NAME = #{ruleName,jdbcType=VARCHAR} 
	       <if test="priceRuleId != null">
				 AND t.PRODUCT_PRICE_RULE_ID <![CDATA[ <> ]]> #{priceRuleId,jdbcType=VARCHAR}
			</if>
	</select>
	
	<select id="findListCount" resultType="java.lang.Long">
	     SELECT COUNT(DISTINCT r.PRODUCT_PRICE_RULE_ID) FROM (
	      SELECT 
			r1.PRODUCT_PRICE_RULE_ID,
			r1.PRODUCT_PRICE_PURPOSE_TYPE_ID,
			r1.RULE_NAME,
			r1.DESCRIPTION,
			r1.STATUS_ID,
			r1.LAST_UPDATE_DATE,
			r1.CREATED_DATE
	      FROM PRODUCT_PRICE_RULE r1
	 	  WHERE r1.STATUS_ID  <![CDATA[ <> ]]> 'DELETED'
	 	  <if test="pricePurposeType != null">
				 AND r1.PRODUCT_PRICE_PURPOSE_TYPE_ID = #{pricePurposeType,jdbcType=VARCHAR}
		  </if>
		  <if test="startDate !=null">
  				AND STR_TO_DATE(r1.CREATED_DATE,'%Y-%m-%d') &gt;= #{startDate} 
		</if>
		<if test="endDate !=null">
				AND STR_TO_DATE(r1.CREATED_DATE,'%Y-%m-%d') &lt;= #{endDate}
		</if>
		
		<if test="ruleStatus != null">
				AND r1.STATUS_ID = #{ruleStatus,jdbcType=VARCHAR}
		</if>
		<if test="vendorId != null and ruleName != null">
				 AND( EXISTS (SELECT 1 from PRODUCT_PRICE_COND c1 where c1.COND_VALUE = #{vendorId,jdbcType=VARCHAR} and
				 			 c1.INPUT_PARAM_ENUM_ID='VENDOR_ID' and c1.PRODUCT_PRICE_RULE_ID = r1.PRODUCT_PRICE_RULE_ID)
		 			  OR replace(r1.RULE_NAME,' ','') like concat('%',replace(#{ruleName,jdbcType=VARCHAR},' ',''),'%')
		 			  )
		</if>
		<if test="vendorId != null and ruleName == null">
				 AND EXISTS (SELECT 1 from PRODUCT_PRICE_COND c1 where c1.COND_VALUE = #{vendorId,jdbcType=VARCHAR} and
				 			 c1.INPUT_PARAM_ENUM_ID='VENDOR_ID' and c1.PRODUCT_PRICE_RULE_ID = r1.PRODUCT_PRICE_RULE_ID)
				 			 
		</if>
		<if test="ruleName != null and vendorId == null">
				 AND replace(r1.RULE_NAME,' ','') like concat('%',replace(#{ruleName,jdbcType=VARCHAR},' ',''),'%')
		</if>
		) r
			INNER JOIN PRODUCT_PRICE_COND c ON r.PRODUCT_PRICE_RULE_ID = c.PRODUCT_PRICE_RULE_ID
				LEFT JOIN PRODUCT_PRICE_ACTION a ON c.PRODUCT_PRICE_COND_SEQ_ID = a.PRODUCT_PRICE_COND_SEQ_ID AND r.PRODUCT_PRICE_RULE_ID = a.PRODUCT_PRICE_RULE_ID 
	</select>
	
	<select id="getVendorRuleInfo" parameterType="java.util.Map" resultType="int">
	      SELECT COUNT(1) FROM PRODUCT_PRICE_COND t1 
	       WHERE t1.PRODUCT_PRICE_RULE_ID IN (
                                SELECT t.PRODUCT_PRICE_RULE_ID FROM PRODUCT_PRICE_RULE t 
                                 WHERE t.PRODUCT_PRICE_PURPOSE_TYPE_ID= #{pricePurposeType,jdbcType=VARCHAR}
                                   AND t.STATUS_ID = 'ENABLED') 
                                   AND t1.COND_VALUE = #{condValue,jdbcType=VARCHAR}
	</select>
</mapper>