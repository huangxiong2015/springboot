package com.yikuyi.product.goods.manager;

import java.util.concurrent.Future;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.MockitoAnnotations;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import com.yikuyi.brand.model.ProductBrand;
import com.yikuyi.category.model.ProductCategory;
import com.yikuyi.party.vo.PartyVo;

@RunWith(SpringJUnit4ClassRunner.class)
public class SearchManagerV2Test{
	
	@InjectMocks
	private SearchManagerV2 searchManagerV2;
	
	@Mock
	private SearchAsyncManager searchAsyncManager;

	public SearchManagerV2Test() {
		MockitoAnnotations.initMocks(this);
	}
	
	@SuppressWarnings("unchecked")
	@Test
	public void testKeywordMatch() throws Exception{
		Future<ProductCategory> catFuture = Mockito.mock(Future.class);
		Future<ProductBrand> brandFuture = Mockito.mock(Future.class);
		Future<PartyVo> vendorFuture = Mockito.mock(Future.class);
		Mockito.when(catFuture.get()).thenReturn(null);
		Mockito.when(brandFuture.get()).thenReturn(null);
		Mockito.when(vendorFuture.get()).thenReturn(null);
		Mockito.when(searchAsyncManager.keywordMatchBrand(Mockito.anyString())).thenReturn(brandFuture);
		Mockito.when(searchAsyncManager.keywordMatchCate(Mockito.anyString())).thenReturn(catFuture);
		Mockito.when(searchAsyncManager.keywordMatchVendor(Mockito.anyString())).thenReturn(vendorFuture);
		searchManagerV2.keywordMatch("123123", "123", "123", "232");
	}
}
