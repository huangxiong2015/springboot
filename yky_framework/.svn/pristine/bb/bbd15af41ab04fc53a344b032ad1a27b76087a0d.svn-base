<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
	default-lazy-init="false">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven validator="validator" />

	<!-- 配置静态资源，直接映射到对应的文件夹，不被DispatcherServlet处理 -->
	<mvc:resources mapping="/images/**" location="/images/" />
	<mvc:resources mapping="/css/**" location="/css/" />
	<mvc:resources mapping="/js/**" location="/js/" />
	<mvc:resources mapping="/html/**" location="/html/" />
	<mvc:resources mapping="/common/**" location="/common/" />
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
		<property name="contentType">
			<value>text/html;charset=UTF-8</value>
		</property>
		<!-- 暴露 context:property-placeholder 给jsp，参见http://stackoverflow.com/questions/3933862/how-to-use-property-from-property-file-specified-in-propertyplaceholderconfigure -->
		<property name="exposeContextBeansAsAttributes" value="true" />
		<property name="exposedContextBeanNames">
			<list>
				<value>appProps</value>
			</list>
		</property>
	</bean>

	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<!-- <property name="basename" value="classpath:messages/messages" /> -->
		<property name="basenames">
			<list>
				<value>classpath:messages/messages</value>
				<value>classpath:messages/ValidationMessages</value>
				<value>classpath:org/hibernate/validator/ValidationMessages</value>
				<value>classpath:messages/exceptions</value>
			</list>
		</property>
		<property name="fallbackToSystemLocale" value="false" /> <!-- 很重要的属性，防止使用客户端默认的locale -->
		<property name="defaultEncoding" value="UTF-8" />
		<property name="cacheSeconds" value="3600" />
		<property name="useCodeAsDefaultMessage" value="false" />
	</bean>

	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
		<property name="validationMessageSource" ref="messageSource" />
	</bean>

	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<property name="defaultLocale" value="zh" />
		<property name="cookieName" value="_site_language_"></property>
		<property name="cookieMaxAge" value="3600"></property>
	</bean>

	<mvc:interceptors>
		<!-- 单个拦截器可以简单配置如下 -->
		<!-- <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"> -->
		<!-- <property name="paramName" value="locale" /> -->
		<!-- </bean> -->
		<!-- 多个拦截器 具体可以参见：http://stackoverflow.com/questions/12062690/spring-mvc-doesnt-change-locale-from-a-link -->
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
				<property name="paramName" value="locale" />
			</bean>
		</mvc:interceptor>

		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.ykyframework.interceptor.SubmissionTokenInterceptor">
				<property name="tokenExpirePage" value="/common/jsp/submission_token_expire.jsp"/>
			</bean>
		</mvc:interceptor>

		<!-- jsp页面缓存设置的拦截器，默认没有缓存 -->
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="/cache/**" /> <!-- 不需要拦截的，这是一个示例，根据需要放置 -->
			<bean id="webContentInterceptor" class="org.springframework.web.servlet.mvc.WebContentInterceptor">
				<property name="cacheSeconds" value="0" />
				<property name="useExpiresHeader" value="true" />
				<property name="useCacheControlHeader" value="true" />
				<property name="useCacheControlNoStore" value="true" />
				<property name="cacheMappings">
					<props>
						<!-- cache for one month -->
						<prop key="/cache/me/**">2592000</prop>
						<!-- don't set cache headers -->
						<prop key="/cache/agnostic/**">-1</prop>
					</props>
				</property>
			</bean>
		</mvc:interceptor>
	</mvc:interceptors>


	<!-- <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"> 定义默认的异常处理页面，当该异常类型的注册时使用 <property 
		name="defaultErrorView" value="errors/error"></property> 默认HTTP状态码 <property name="defaultStatusCode" value="200"></property> 
		定义异常处理页面用来获取异常信息的变量名，默认名为exception <property name="exceptionAttribute" value="ex"></property> 定义需要特殊处理的异常，用类名或完全路径名作为key，异常以页名作为值 
		<property name="exceptionMappings"> <props> 创建自己所要自定义的异常类 <prop key="com.ykyframework.exception.DataNotFoundException">errors/404</prop> 
		<prop key="com.ykyframework.exception.BusinessException">errors/biz</prop> <prop key="org.apache.shiro.authz.UnauthorizedException">errors/401</prop> 
		还可以继续扩展对不同异常类型的处理 </props> </property> <property name="statusCodes"> <props> <prop key="errors/error">500</prop> <prop key="errors/404">404</prop> 
		<prop key="errors/401">401</prop> </props> </property> </bean> -->

	<!-- 自定义错误码的处理器，替代之前的 SimpleMappingExceptionResolver <bean class="com.ykyframework.web.aop.BaseControllerAdvice"/> -->

	<context:component-scan base-package="com.ykyframework">
		<!-- 只扫描加载@Controller的web控制层代码 -->
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />
		<context:exclude-filter type="annotation" expression="org.springframework.scheduling.annotation.Async" />
	</context:component-scan>


	<!-- guowenyao begin add 20160121 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="1024000" />
		<property name="defaultEncoding" value="utf-8" />
	</bean>
	<!-- end -->

</beans>
