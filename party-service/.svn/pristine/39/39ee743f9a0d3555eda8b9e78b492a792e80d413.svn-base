package com.yikuyi.party.userLogin.api.impl;


import javax.validation.Valid;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.alibaba.druid.util.StringUtils;
import com.framework.springboot.utils.AuthorizationUtil;
import com.yikuyi.party.contact.vo.UserVo;
import com.yikuyi.party.exception.PartyBusiErrorCode;
import com.yikuyi.party.register.bll.RegisterManager;
import com.yikuyi.party.userLogin.api.IUserLoginResourceV8;
import com.yikuyi.party.userLogin.bll.UserLoginManager;
import com.yikuyi.party.v8.message.vo.MessageCodeVo;
import com.yikuyi.party.v8.message.vo.RegisterVo;
import com.yikuyi.pay.PayClientBuilder;
import com.yikuyi.quotationtool.inquiry.vo.InquiryCustomerMqVo;
import com.ykyframework.exception.BusinessException;
import com.ykyframework.mqservice.sender.MsgSender;

/**
 * 定义收货地址的相关接口
 * 
 * @author zr.aoxianbing@yikuyi.com
 *
 */

@RestController
@RequestMapping("v8/accounts")
public class UserLoginResourceV8 implements IUserLoginResourceV8 {
	private static final Logger logger = LoggerFactory.getLogger(UserLoginResourceV8.class);

	@Autowired
	private UserLoginManager userLoginManager;
	
	@Autowired
	private RegisterManager registerManager;
	
	@Autowired
	private MsgSender msgSender;
	
	@Value("${mqConsumeConfig.inquiryCustomerUpdate.topicName}")
	private String inquiryUpdateTopicName;
	@Autowired
	private PayClientBuilder payClientbuilder;
	
	@Autowired
	private AuthorizationUtil authorizationUtil;
	
	public static final String PERSON_REG = "PERSON_REG";
	public static final String COMPANY_REG = "COMPANY_REG";
	
	/**
	 * 根据账号判断是否存在（手机、邮箱）
	 * @param loginName
	 * @return
	 * @since 2018年1月3日
	 * @author zr.helinmei@yikuyi.com
	 */
	@Override
	@RequestMapping(value = "/exist", method = RequestMethod.GET)
	public MessageCodeVo isExist(@RequestParam(value = "loginName", required = true)String loginName) {
		MessageCodeVo msg = new MessageCodeVo();
		Boolean flag =	userLoginManager.isExist(loginName);
		msg.setStatus(flag);
		return msg;
	}
	/**
	 * 用户手机注册
	 * @param loginName
	 * @return
	 * @since 2018年1月3日
	 * @author zr.helinmei@yikuyi.com
	 */
	@Override
	@RequestMapping(value = "/register/phone", method = RequestMethod.POST)
	public RegisterVo registerMobile(@RequestBody RegisterVo registerVo) throws BusinessException{
		if(null ==registerVo){
			return null;
		}
		if(userLoginManager.getAccount(registerVo.getPhoneNumber())){
			throw new BusinessException(PartyBusiErrorCode.ACCOUNT_EXIST);
		}
		UserVo userVo = new UserVo();
		userVo.setMobile(registerVo.getPhoneNumber());
		userVo.setPassword(registerVo.getPassWord());
		userVo.setImgCode(registerVo.getRegisterCode());
		String userId = registerManager.savePhone(userVo);
		registerVo.setId(userId);
		//发送优惠卷
		try{
			payClientbuilder.couponResource().regOrUpSendCoupon(PERSON_REG, userId, authorizationUtil.getMockAuthorization());
		}catch(Exception e){
			logger.error("手机端发送个人注册优惠卷失败PERSON_REG：{}, userId ：{},Authorization ：{}",e,userId,authorizationUtil.getMockAuthorization());
		}
		//发送mq
		if(!StringUtils.isEmpty(userId)){
			try{
				logger.info("手机端mq调用询报价服务参数----userId ：{},Mobile：{}",userId,userVo.getMobile());
				InquiryCustomerMqVo vo = new InquiryCustomerMqVo();
				vo.setMobileOrEmail(userVo.getMobile());
				vo.setUserId(userId);
				msgSender.sendMsg(inquiryUpdateTopicName, vo, null);
			}catch(Exception e){
				logger.error("手机端调用TOPIC_ORIGINAL_MESSAGES_PROD失败:{}",e);
			}
			
		}
		return registerVo;
	}
	
	/**
	 * 重置密码
	 * @param userVo
	 * @return
	 * @since 2018年1月5日
	 * @author zr.helinmei@yikuyi.com
	 * @throws BusinessException 
	 */
	@Override
	@RequestMapping(value="/password/reset",method=RequestMethod.POST)
	public void updatePwd(@Valid @RequestBody RegisterVo registerVo) throws BusinessException {
		userLoginManager.updatePhoneAccountPwd(registerVo);
	}

}
