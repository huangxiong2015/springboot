package com.yikuyi.party.vendors.api.impl;

import java.util.List;

import org.apache.ibatis.session.RowBounds;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.framewrok.springboot.web.RequestHelper;
import com.github.pagehelper.PageInfo;
import com.yikuyi.party.contact.vo.UserVo;
import com.yikuyi.party.exception.PartyBusiErrorCode;
import com.yikuyi.party.group.vo.PartyGroupVo;
import com.yikuyi.party.model.Party;
import com.yikuyi.party.model.Party.PartyStatus;
import com.yikuyi.party.model.PartyRelationship;
import com.yikuyi.party.model.PartyRelationship.PartyRelationshipTypeEnum;
import com.yikuyi.party.partygroup.bll.PartyGroupManager;
import com.yikuyi.party.role.model.RoleTypeEnum;
import com.yikuyi.party.vendor.vo.PartyProductLine;
import com.yikuyi.party.vendor.vo.VendorCreditVo;
import com.yikuyi.party.vendor.vo.VendorInfoVo;
import com.yikuyi.party.vendor.vo.VendorSaleInfoVo;
import com.yikuyi.party.vendors.api.IVendorResource;
import com.yikuyi.party.vendors.bll.PartyProductLineManager;
import com.yikuyi.party.vendors.bll.VendorManager;
import com.yikuyi.party.vendors.bll.VendorsManager;
import com.yikuyi.party.vo.PartyVo;
import com.yikuyi.party.vo.SupplierVo;
import com.yikuyi.party.vo.VendorVo;
import com.ykyframework.exception.BusinessException;
import com.ykyframework.model.IdGen;

@RestController
@RequestMapping("v1/vendors")
public class VendorsResource implements IVendorResource {

	
	@Autowired
	private VendorsManager vendorsManager;
	
	@Autowired
	private VendorManager vendorManager;
	
	@Autowired
	private PartyGroupManager partyGroupManager;
	@Autowired
	private PartyProductLineManager partyProductLineManager;
	
	/**
	 * 查看供应商列表
	 */
	@Override
	@RequestMapping(method = RequestMethod.GET)
	public PageInfo<PartyVo> getPartyList(@RequestParam(value = "page", required = false, defaultValue = "1") int page,
			@RequestParam(value = "size", required = false, defaultValue = "10") int size) {
		PartyGroupVo param = new PartyGroupVo();
		String partyId = RequestHelper.getLoginUserId();
		param.setPartyIdFrom(partyId);
		param.setStatus(PartyStatus.PARTY_ENABLED);//默认启用
		param.setRoleTypeIdTo(RoleTypeEnum.SUPPLIER.toString());
		RowBounds rowBounds = new RowBounds((page - 1) * size, size);
		return vendorsManager.getPartyList(param, rowBounds);
		
	}

	/**
	 * 获取单个供应商信息
	 */
	@Override
	@RequestMapping(value = "/{id}", method = RequestMethod.GET)
	public Party getPartyByPartyId(@PathVariable("id") String id) {
		String partyId = RequestHelper.getLoginUserId();
		return vendorsManager.getPartyByPartyId(id, partyId);
	}
	
	/**
	 * 根据供应商id获取单条供应商详情
	 */
	@Override
	@RequestMapping(value = "/name/batch", method = RequestMethod.POST)
	public List<PartyVo> getVendorNameListByIds(@RequestBody List<String> partyIds) {
		return vendorsManager.getVendorNameListByIds(partyIds);
	}

	/**
	 * 查询供应商
	 */
	@Override
	@RequestMapping(value = "/detail", method = RequestMethod.GET)
	public Party getVendorDetail(@RequestParam(value = "id" , required = true) String id) {
		return vendorsManager.getVendorDetail(id);
	}

	/**
	 * 保存供应商信息
	 * @throws BusinessException 
	 */
	@Override
	@RequestMapping(method = RequestMethod.POST)
	public void save(@RequestBody VendorVo vendorVo) throws BusinessException {
		Long vendorId = IdGen.getInstance().nextId();
		 // 当前登录用户
	    String partyId = RequestHelper.getLoginUserId();
	    vendorVo.setVendorId(vendorId.toString());	
	    vendorsManager.save(vendorVo,partyId);
	}

	/**
	 * 根据id修改供应商信息
	 */
	@Override
	@RequestMapping(method = RequestMethod.PUT)
	public void update(@RequestBody VendorVo vendorVo) throws BusinessException {
		//查找需要修改的供应商的信息
		Party party = partyGroupManager.getPartyGroupByGroupId(vendorVo.getVendorId());
		if(null == party){
			throw new BusinessException(PartyBusiErrorCode.SUPPLIER_IS_EMPTY);
		}
		// 当前登录用户
	    String partyId = RequestHelper.getLoginUserId();
	    vendorsManager.update(vendorVo, partyId);
	}

	/**
	 * 删除供应商信息
	 */
	@Override
	@RequestMapping(value = "del", method = RequestMethod.PUT)
	public void delete(@RequestBody List<String> ids) {
	}

	@Override
	@RequestMapping(value = "/{id}/save" , method = RequestMethod.POST)
	public String saveSupplierShare(@PathVariable(value = "id" , required=true)String id,@RequestBody UserVo userVo) {
		return vendorsManager.saveSupplierShare(id,userVo);
	}

	@Override
	@RequestMapping(value = "/{id}/relation" ,method = RequestMethod.GET)
	public List<PartyRelationship> findSupplierShare(@PathVariable(value = "id" , required=true)String id) {
		return vendorsManager.findSupplierShare(id);
	}

	/**
	 * 根据条件查询供应商列表
	 */
	@Override
	@RequestMapping(value = "/list" ,method = RequestMethod.GET)
	public PageInfo<SupplierVo> getVendorList(@RequestParam(value="id",required=true)String id, 
			@RequestParam(value="vendorName",required=false)String vendorName,
			@RequestParam(value="vendorCode",required=false)String vendorCode,
			@RequestParam(value="page",required=false,defaultValue="1")int page,
			@RequestParam(value="size",required=false,defaultValue="10") int size) {
		return vendorsManager.getVendorList(id, vendorName, vendorCode, page, size);
	}
	
	
	@Override
	@RequestMapping(value = "/vendorInfo/{partyId}", method = RequestMethod.GET)
	public VendorInfoVo vendorInfo(@PathVariable("partyId") String partyId) {
		return vendorManager.getVendorInfo(partyId);

//		VendorInfoVo vendorInfoVo = new VendorInfoVo();
//		vendorInfoVo.setPartyId("999999999");
//		vendorInfoVo.setGroupNameFull("深圳旗舰店");
//		vendorInfoVo.setGroupName("旗舰店");
//		vendorInfoVo.setPartyCode("BA7001");
//		vendorInfoVo.setCategory("CATALOG_DISTRIBUTOR");
//		vendorInfoVo.setCategoryName("目录分销商");
//		vendorInfoVo.setIsCore("Y");
//		vendorInfoVo.setLogoImageUrl("http://ictrade-private-hz-uat.oss-cn-hangzhou.aliyuncs.com/sit/coupon/voucher/201703/23/ec2d55cc92166611cf0cc823ec323b37.png");
//		vendorInfoVo.setWebsite("www.baidu.com");
//		vendorInfoVo.setRegion("100000");
//		vendorInfoVo.setGeneralHeadquarters("易库易集团有限公司");
//
//		vendorInfoVo.setGenre("外商投资企业");
//
//		vendorInfoVo.setGenreName("电商平台");
//		vendorInfoVo.setListed("Y");
//		
//		vendorInfoVo.setStockCode("000001");
//		vendorInfoVo.setLegalPerson("陈总裁");
//		//vendorInfoVo.setGroupNameFull("陈总裁");
//		vendorInfoVo.setRegPrice("1000万人民币");
//		vendorInfoVo.setRegAddress("深圳市南山区科技园");
//		vendorInfoVo.setEmployeeNum("10000万人");
//		vendorInfoVo.setDeptId("001");
//		vendorInfoVo.setDeptName("销售部");
//		vendorInfoVo.setPrincipalId("0001");
//		vendorInfoVo.setPrincipalName("张员外") ;
//		vendorInfoVo.setEnquiryId("0011");
//		vendorInfoVo.setEnquiryName("张三");
//		return vendorInfoVo;
	}

	@Override
	@RequestMapping(value = "/productLine/{partyId}", method = RequestMethod.GET)
	public  List<PartyProductLine> productLine(@PathVariable("partyId") String partyId) {
		PartyProductLine partyProductLine= new PartyProductLine();
		partyProductLine.setPartyId(partyId);
		return partyProductLineManager.findByEntity(partyProductLine);
		 
//		List<PartyProductLine> list= new ArrayList<>();
//		PartyProductLine productLineInfo= new PartyProductLine();
//		productLineInfo.setPartyProductLineId("123456");
//		productLineInfo.setPartyId("9999999901");
//		productLineInfo.setBrandId("1407");
//		productLineInfo.setBrandName("AIM");
//		productLineInfo.setCategory1Id("1");
//		productLineInfo.setCategory1Name("大类");
//		productLineInfo.setCategory2Id("2");
//		productLineInfo.setCategory2Name("小类");
//		productLineInfo.setCategory3Id("3");
//		productLineInfo.setCategory3Name("次小类");
//		productLineInfo.setStatus(Status.ENABLE);
//		list.add(productLineInfo);
//		
//		PartyProductLine productLineInfo1= new PartyProductLine();
//		productLineInfo1.setPartyProductLineId("1234567");
//		productLineInfo1.setPartyId("9999999901");
//		productLineInfo1.setBrandId("1407");
//		productLineInfo1.setBrandName("AIM");
//		productLineInfo1.setCategory1Id("11");
//		productLineInfo1.setCategory1Name("大类1");
//		productLineInfo1.setCategory2Id("21");
//		productLineInfo1.setCategory2Name("小类1");
//		productLineInfo1.setCategory3Id("31");
//		productLineInfo1.setCategory3Name("次小类1");
//		productLineInfo.setStatus(Status.ENABLE);
//		list.add(productLineInfo1);
//		
//		PartyProductLine productLineInfo2= new PartyProductLine();
//		productLineInfo2.setPartyProductLineId("12345678");
//		productLineInfo2.setPartyId("9999999901");
//		productLineInfo1.setBrandId("1407");
//		productLineInfo2.setBrandName("AIM");
//		productLineInfo2.setCategory1Id("112");
//		productLineInfo2.setCategory1Name("大类12");
//		productLineInfo2.setCategory2Id("212");
//		productLineInfo2.setCategory2Name("小类12");
//		productLineInfo2.setCategory3Id("312");
//		productLineInfo2.setCategory3Name("次小类12");
//		productLineInfo.setStatus(Status.ENABLE);
//		list.add(productLineInfo2);
//		return list;
	}

	@Override
	@RequestMapping(value = "/vendorCredit/{partyId}", method = RequestMethod.GET)
	public VendorCreditVo vendorCredit(@PathVariable("partyId") String partyId) {
		
		return vendorManager.getVendorCredit(partyId);
		
//		VendorCreditVo vendorCreditVo=new VendorCreditVo();
//		vendorCreditVo.setPartyCreditId("1111");
//		vendorCreditVo.setPartyId("9999999901");
//		vendorCreditVo.setCurrency(Currency.CNY);
//		vendorCreditVo.setCreditQuota(10000);
//		vendorCreditVo.setRealtimeCreditQuota(800);
//		vendorCreditVo.setCreditDeadline("10");
//		vendorCreditVo.setCheckDate("0701");
//		vendorCreditVo.setCheckCycle("2");
//		vendorCreditVo.setPayDate("20141212");
//		vendorCreditVo.setCommon("月结30天");
//		vendorCreditVo.setPaymentTerms("付款方式");
//		vendorCreditVo.setSettlementMethod("结算方式");
//		PartyCreditAttachment partyCreditAttachment= new PartyCreditAttachment();
//		partyCreditAttachment.setAttachmentName("账期资料.xls ");
//		partyCreditAttachment.setAttachmentUrl("http//aaaa");
//		List<PartyCreditAttachment> partyCreditAttachmentList = new ArrayList<>();
//		partyCreditAttachmentList.add(partyCreditAttachment);
//		vendorCreditVo.setCreditAttachmentList(partyCreditAttachmentList);
//
//		vendorCreditVo.setPurchaseDeal("ALREADY_SIGN");
//		vendorCreditVo.setPurchaseDealDate("2014-10-10");
//		vendorCreditVo.setSecrecyProtocol("ALREADY_SIGN");
//		vendorCreditVo.setSecrecyProtocolDate("2014-10-10");
//		
//		List<PartyBankAccount> partyBankAccountList= new ArrayList<>();
//		PartyBankAccount partyBankAccount= new PartyBankAccount();
//		partyBankAccount.setPartyBankAccountId("111");
//		partyBankAccount.setPartyId("9999999901");
//		partyBankAccount.setCurrency(Currency.CNY);
//		partyBankAccount.setBankAccount("123456789");
//		partyBankAccount.setBankName("张三");
//		partyBankAccount.setTaxNumber("10000");
//		partyBankAccount.setAddresss("深圳市南山区");
//		partyBankAccount.setContactNumber("1536418752");
//		partyBankAccount.setIsDefault("Y");
//		partyBankAccount.setStatus(Status.ENABLE);
//		partyBankAccountList.add(partyBankAccount);
//		
//		PartyBankAccount partyBankAccount1= new PartyBankAccount();
//		partyBankAccount1.setPartyBankAccountId("111");
//		partyBankAccount1.setPartyId("9999999901");
//		partyBankAccount1.setCurrency(Currency.USD);
//		partyBankAccount1.setBankAccount("123456789");
//		partyBankAccount1.setBankName("李四");
//		partyBankAccount1.setTaxNumber("10000");
//		partyBankAccount1.setAddresss("深圳市南山区");
//		partyBankAccount1.setContactNumber("1536418752");
//		partyBankAccount1.setIsDefault("N");
//		partyBankAccount1.setStatus(Status.ENABLE);
//		partyBankAccountList.add(partyBankAccount1);
//		
//		PartyBankAccount partyBankAccount2= new PartyBankAccount();
//		partyBankAccount2.setPartyBankAccountId("111");
//		partyBankAccount2.setPartyId("9999999901");
//		partyBankAccount2.setCurrency(Currency.USD);
//		partyBankAccount2.setBankAccount("123456789");
//		partyBankAccount2.setBankName("王五");
//		partyBankAccount2.setTaxNumber("10000");
//		partyBankAccount2.setAddresss("深圳市南山区");
//		partyBankAccount2.setContactNumber("1536418752");
//		partyBankAccount2.setIsDefault("N");
//		partyBankAccount2.setStatus(Status.ENABLE);
//		partyBankAccountList.add(partyBankAccount2);
//		vendorCreditVo.setPartyBankAccount(partyBankAccountList);
//		return vendorCreditVo;
	}

	@Override
	@RequestMapping(value = "/vendorSaleInfo/{partyId}", method = RequestMethod.GET)
	public VendorSaleInfoVo vendorSaleInfo(@PathVariable("partyId") String partyId) {

		return vendorManager.getVendorSaleInfoVo(partyId);
//
//		VendorSaleInfoVo vendorSaleInfoVo = new VendorSaleInfoVo();
//		List<Facility> facilityList =new ArrayList<>();
//		Facility facility=new Facility();
//		facility.setId("101");
//		facility.setFacilityName("仓库1");
//		facility.setOwnerPartyId("sdgk");
//		facilityList.add(facility);
//		Facility facility1=new Facility();
//		facility1.setId("102");
//		facility1.setFacilityName("仓库2");
//		facility1.setOwnerPartyId("sdgk");
//		facilityList.add(facility1);
//		vendorSaleInfoVo.setFacilityList(facilityList);
//		
//		vendorSaleInfoVo.setPartyId("9999999901");
//		vendorSaleInfoVo.setVendorMovStatus("Y");
//		vendorSaleInfoVo.setSkuMovStatus("Y");
//		vendorSaleInfoVo.setOrderVerify("Y");
//		vendorSaleInfoVo.setIsShowName("Y");
//		vendorSaleInfoVo.setMinOrderPriceCNY(new BigDecimal(100));
//		vendorSaleInfoVo.setMinOrderPriceUSD(new BigDecimal(100));
//		vendorSaleInfoVo.setSupportCurrency("CNY,USD");
//
//		vendorSaleInfoVo.setDescription("条款条款510");
//		vendorSaleInfoVo.setBalanceDue(new BigDecimal(100));
//		vendorSaleInfoVo.setSurplusQuota(new BigDecimal(100));
//		vendorSaleInfoVo.setLastPayDate("2017-10-10");
//		vendorSaleInfoVo.setLastPaymPrice(new BigDecimal(100));
//		vendorSaleInfoVo.setLastTransactionDate("2017-10-10");
//		vendorSaleInfoVo.setLastTransactionPrice(new BigDecimal(200));
//		vendorSaleInfoVo.setFocusFields("通讯电子,工业电子,无人机,消费电子,智能家居");
//		vendorSaleInfoVo.setProductCategorys("PANASONIC-MOSFET,ROHM-分立式半导体,ROHM-无源元件");
//		vendorSaleInfoVo.setMajorClients("中兴科技,大疆创新,华为通讯,上海贝尔");
//		
//		
//		List<ContactPersonInfo> contactPersonInfoList =new ArrayList<>();
//		ContactPersonInfo contactPersonInfo= new ContactPersonInfo();
//		contactPersonInfo.setVendorID("2");
//		contactPersonInfo.setPartyId("3");
//		contactPersonInfo.setLastNameLocal("张三");
//		contactPersonInfo.setMail("zr.chenxuemin@yikuyi.com");
//		contactPersonInfo.setFixedtel("0755-26875498");
//		contactPersonInfo.setTel("18888888888");
//		contactPersonInfo.setAddress("深圳市南山区易库易有限公司");
//		contactPersonInfo.setIsDefault("Y");
//		
//		List<PartyProductLine> list= new ArrayList<>();
//		PartyProductLine productLineInfo= new PartyProductLine();
//		productLineInfo.setPartyProductLineId("123456");
//		productLineInfo.setPartyId("9999999901");
//		productLineInfo.setBrandId("1407");
//		productLineInfo.setBrandName("AIM");
//		productLineInfo.setCategory1Id("1");
//		productLineInfo.setCategory1Name("大类");
//		productLineInfo.setCategory2Id("2");
//		productLineInfo.setCategory2Name("小类");
//		productLineInfo.setCategory3Id("3");
//		productLineInfo.setCategory3Name("次小类");
//		productLineInfo.setStatus(Status.ENABLE);
//		list.add(productLineInfo);
//		
//		PartyProductLine productLineInfo1= new PartyProductLine();
//		productLineInfo1.setPartyProductLineId("1234567");
//		productLineInfo1.setPartyId("9999999901");
//		productLineInfo1.setBrandId("1407");
//		productLineInfo1.setBrandName("AIM");
//		productLineInfo1.setCategory1Id("11");
//		productLineInfo1.setCategory1Name("大类1");
//		productLineInfo1.setCategory2Id("21");
//		productLineInfo1.setCategory2Name("小类1");
//		productLineInfo1.setCategory3Id("31");
//		productLineInfo1.setCategory3Name("次小类1");
//		productLineInfo.setStatus(Status.ENABLE);
//		list.add(productLineInfo1);
//		
//		PartyProductLine productLineInfo2= new PartyProductLine();
//		productLineInfo2.setPartyProductLineId("12345678");
//		productLineInfo2.setPartyId("9999999901");
//		productLineInfo1.setBrandId("1407");
//		productLineInfo2.setBrandName("AIM");
//		productLineInfo2.setCategory1Id("112");
//		productLineInfo2.setCategory1Name("大类12");
//		productLineInfo2.setCategory2Id("212");
//		productLineInfo2.setCategory2Name("小类12");
//		productLineInfo2.setCategory3Id("312");
//		productLineInfo2.setCategory3Name("次小类12");
//		productLineInfo.setStatus(Status.ENABLE);
//		list.add(productLineInfo2);
//		contactPersonInfo.setPartyProductLineList(list);
//		
//		contactPersonInfoList.add(contactPersonInfo);
//		contactPersonInfo.setLastNameLocal("李四");
//		contactPersonInfoList.add(contactPersonInfo);
//		contactPersonInfo.setLastNameLocal("王五");
//		contactPersonInfoList.add(contactPersonInfo);
//		vendorSaleInfoVo.setContactPersonInfoList(contactPersonInfoList);
//		return vendorSaleInfoVo;

	}
	/**
	 * 查询分销商的父子关系
	 * @param id
	 * @param relationshipType
	 * @return
	 * @since 2017年8月11日
	 * @author zr.helinmei@yikuyi.com
	 */
	@Override
	@RequestMapping(value = "/getParentRelationInfo/{id}/{relationshipType}", method = RequestMethod.GET)
	public PartyRelationship getParentRelationInfo(@PathVariable(value = "id")String id, @PathVariable(value = "relationshipType")PartyRelationshipTypeEnum relationshipType) {
		return vendorsManager.getParentRelationInfo(id, relationshipType);
	}



}
