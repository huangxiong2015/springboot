/*
 * Created: 2017年4月1日
 *
 * Shenzhen Yikuyi Co., Ltd. All rights reserved. 
 * Copyright (c) 2015-2017 
 * License, Version 1.0. Published by Yikuyi IT department.
 *
 * For the convenience of communicating and reusing of codes,
 * any java names, variables as well as comments should be written according to the regulations strictly.
 */
package com.yikuyi.party.person.api.impl;

import java.util.ArrayList;
import java.util.List;

import org.junit.Before;
import org.junit.Test;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.web.client.TestRestTemplate;
import org.springframework.core.ParameterizedTypeReference;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpMethod;
import org.springframework.http.ResponseEntity;

import com.github.pagehelper.PageInfo;
import com.yikuyi.party.base.PartyApplicationTestBase;
import com.yikuyi.party.contact.vo.UserExtendVo;
import com.yikuyi.party.contact.vo.UserVo;
import com.yikuyi.party.person.model.Person;

public class PersonResourceTest extends PartyApplicationTestBase{
	private static final Logger logger = LoggerFactory.getLogger(PersonResourceTest.class);
	private String host;

	@Autowired
	private TestRestTemplate restTemplate; 
	
	@Before
	public void setUpBefore() throws Exception {
		this.host = "http://localhost" + ":" + this.getPort();
	}
	
	@Test
	public void testSearch() {
		String url = host + "/v1/person/search";
		ResponseEntity<PageInfo<UserVo>> responseEntity = restTemplate.exchange(url, HttpMethod.GET, null, new ParameterizedTypeReference<PageInfo<UserVo>>(){});
		responseEntity.getBody();
	}
	@Test
	public void testGetEmailListByRoleType() {
		String url = host + "/v1/person/all?roleType=ADMIN";
		restTemplate.exchange(url, HttpMethod.GET, null, new ParameterizedTypeReference<List<Person>>(){});
	}
	
	@Test
	public void testGetReportsTo() {
		String url = host + "/v1/person/reportsto?partyId=9999999901";
		restTemplate.exchange(url, HttpMethod.GET, null, new ParameterizedTypeReference<List<UserExtendVo>>(){});
	}
	@Test
	public void testGetPerson() {
		String url = host + "/v1/person/9999999901";
		restTemplate.exchange(url, HttpMethod.GET, null, new ParameterizedTypeReference<UserVo>(){});
	}
	
	@Test
	public void testUpdatePwd() {
		String url = host + "/v1/person/9999999901?passWord=123456";
		try{
			ResponseEntity<String> responseEntity = restTemplate.exchange(url, HttpMethod.PUT, null, String.class);
			@SuppressWarnings("unused")
			String falg = responseEntity.getBody();
		}catch(Exception e){
			logger.error("错误信息{}",e);
		}
	}
	
	@Test
	public void testSave() {
		String url = host + "/v1/person/user";
		UserVo userVo = new UserVo();
		userVo.setMail("test@yikuyi.com");
		userVo.setName("test");
		userVo.setPassword("123456");
		try{
			HttpEntity<UserVo> requestEntity = new HttpEntity<>(userVo);
			ResponseEntity<String> rosponse = restTemplate.exchange(url, HttpMethod.POST, requestEntity, String.class);
			@SuppressWarnings("unused")
			String falg = rosponse.getBody();
		}catch(Exception e){
			logger.error("错误信息{}",e);
		}

	}
	@Test
	public void testUpdate() {
		String url = host + "/v1/person/user";
		UserVo userVo = new UserVo();
		userVo.setMail("test@yikuyi.com");
		userVo.setName("test");
		userVo.setPassword("123456");
		try{
			HttpEntity<UserVo> requestEntity = new HttpEntity<>(userVo);
			ResponseEntity<String> rosponse = restTemplate.exchange(url, HttpMethod.PUT, requestEntity, String.class);
			@SuppressWarnings("unused")
			String falg = rosponse.getBody();
		}catch(Exception e){
			logger.error("错误信息{}",e);
		}

	}
	
	@Test
	public void addUserTest(){
		UserVo userVo = new UserVo();
		userVo.setMail("1234561@yikuyi.com");
		userVo.setPassword("123456");
		userVo.setName("张三丰");
		userVo.setSex("0");
		userVo.setDeptId("1001");
		userVo.setManager(false);
		userVo.setTelNumber("13652365236");
		List<String> roleList = new ArrayList<>();
		roleList.add("1001");
		userVo.setRoleList(roleList);
		String url = host + "/v1/person/adduser";
		HttpEntity<UserVo> requestEntity = new HttpEntity<>(userVo);
		restTemplate.exchange(url, HttpMethod.POST, requestEntity, Void.class);
	}
	
	@Test
	public void getUserDetailTest(){
		String url = host + "/v1/person/detail?partyId=863203580700524544";
		restTemplate.exchange(url, HttpMethod.GET, null, new ParameterizedTypeReference<UserVo>(){});
	}
	
	@Test
	public void updateUserTest(){
		UserVo userVo = new UserVo();
		userVo.setId("9999999902");
		userVo.setMail("159852147@qq.com");
		userVo.setPassword("123456");
		userVo.setName("张三丰");
		userVo.setSex("0");
		userVo.setDeptId("1001");
		userVo.setManager(true);
		userVo.setTelNumber("13652365236");
		List<String> roleList = new ArrayList<>();
		roleList.add("1001");
		userVo.setRoleList(roleList);
		HttpEntity<UserVo> requestEntity = new HttpEntity<>(userVo);
		String url = host + "/v1/person/updateuser";
		restTemplate.exchange(url, HttpMethod.PUT, requestEntity, Void.class);
		
	}
	
}
