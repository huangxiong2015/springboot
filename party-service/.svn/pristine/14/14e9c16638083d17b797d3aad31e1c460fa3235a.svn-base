<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yikuyi.party.partygroup.dao.PartyGroupDao">
	<resultMap id="BaseResultMap" type="com.yikuyi.party.model.Party">
		<id column="PARTY_ID" property="id" />
		<association property="partyGroup"
			javaType="com.yikuyi.party.group.model.PartyGroup">
			<result column="GROUP_NAME" property="groupName" />
			<result column="DESCRIPTION" property="description" />
			<result column="COMMENTS" property="comments" />
			<result column="LOGO_IMAGE_URL" property="logoImageUrl" />
			<result column="VERIFY_STATUS_ID" property="activeStatus" />
		</association>
		<association property="partyAttributes"
			javaType="com.yikuyi.party.model.PartyAttributes">
			<association property="isShowName"
				javaType="com.yikuyi.party.model.PartyAttribute">
				<result column="ATTR_NAME" property="key" />
				<result column="ATTR_VALUE" property="value" />
			</association>
		</association>
	</resultMap>
	
	<resultMap id="AllBaseResultMap" type="com.yikuyi.party.model.Party">
<!-- 	party -->
		    <id column="PARTY_ID" jdbcType="VARCHAR" property="id" />
		    <result column="PARTY_TYPE_ID" jdbcType="VARCHAR" property="partyType" />
		    <result column="PARTY_CODE" jdbcType="VARCHAR" property="partyCode" />
		    <result column="EXTERNAL_ID" jdbcType="VARCHAR" property="externalId" />
		    <result column="DESCRIPTION" jdbcType="LONGVARCHAR" property="description" />
		    <result column="STATUS_ID" jdbcType="VARCHAR" property="partyStatus" />
		    <result column="IS_SYSTEM" jdbcType="CHAR" property="isSystem" />
		    <result column="CREATED_DATE" jdbcType="TIMESTAMP" property="createdDate" />
		    <result column="CREATED_BY_USER_LOGIN" jdbcType="VARCHAR" property="createdByUserLogin" />
		    <result column="CREATOR" jdbcType="VARCHAR" property="creator" />
		    <result column="LAST_UPDATE_USER" jdbcType="VARCHAR" property="lastUpdateUser" />
		    <result column="LAST_UPDATE_DATE" jdbcType="TIMESTAMP" property="lastUpdateDate" />
		<!-- partygroup -->
		<association property="partyGroup"
			javaType="com.yikuyi.party.group.model.PartyGroup">
			    <result column="GROUP_NAME" jdbcType="VARCHAR" property="groupName" />
			    <result column="VERIFY_STATUS_ID" jdbcType="VARCHAR" property="activeStatus" />
			    <result column="DESCRIPTION" jdbcType="VARCHAR" property="description" />
			    <result column="COMMENTS" jdbcType="VARCHAR" property="comments" />
			    <result column="LOGO_IMAGE_URL" jdbcType="VARCHAR" property="logoImageUrl" />
			    <result column="LOGO_IMAGE_URL_SMALL" jdbcType="VARCHAR" property="logoImageUrlSmall" />
		</association>
		<!--person -->
		<association property="person" javaType="com.yikuyi.party.person.model.Person"> 
          <result column="GENDER" property="gender" jdbcType="VARCHAR" />
          <result column="RELATION_STATUS_ID" property="relationSratus"/>
          <result column="LAST_NAME_LOCAL" property="lastNameLocal" jdbcType="VARCHAR" />
       </association>
		<!--角色 -->
		  <collection property="roleTypeList" ofType="com.yikuyi.party.role.model.RoleType">
	       		<result column="ROLE_TYPE_ID" property="com.yikuyi.party.role.model.RoleType"/>
	      </collection>
	</resultMap>
	
	<resultMap id="vendorBaseResultMap" type="com.yikuyi.party.vo.SupplierVo">
     <id column="PARTY_ID" jdbcType="VARCHAR" property="id" />
	 <result column="PARTY_CODE" property="vendorCode" />
	 <result column="GROUP_NAME" property="vendorName" />
	 <result column="CREATOR" property="createor" />
	 <result column="RELATIONSHIP_NAME" property="relacionshipName" />
	 <result column="LOGO_IMAGE_URL" property="vendorLogo" />
	</resultMap>

<!--     根据条件查询party详细信息 -->
	<select id="getAllPartyGroupList" resultMap="AllBaseResultMap" parameterType="com.yikuyi.party.group.vo.PartyGroupVo">
			SELECT 
				  a.PARTY_ID,
				  a.PARTY_TYPE_ID,
				  a.PARTY_CODE,
				  a.EXTERNAL_ID,
				  a.DESCRIPTION,
				  a.STATUS_ID,
				  a.IS_SYSTEM,
				  a.CREATED_DATE,
				  a.CREATED_BY_USER_LOGIN,
				  a.CREATOR,
				  a.LAST_UPDATE_USER,
				  a.LAST_UPDATE_DATE,
				  b.ROLE_TYPE_ID,
				  c.GROUP_NAME,
				  c.VERIFY_STATUS_ID,
				  c.DESCRIPTION,
				  c.COMMENTS,
				  c.LOGO_IMAGE_URL,
				  c.LOGO_IMAGE_URL_SMALL,
				  e.`PARTY_ID_FROM`,
				  e.`PARTY_ID_TO`,
				  e.`ROLE_TYPE_ID_FROM`,
				  e.`ROLE_TYPE_ID_TO`,
				  e.RELATIONSHIP_NAME,
				  
				  f.`GENDER`,
				  f.`RELATION_STATUS_ID`,
				  f.`LAST_NAME_LOCAL`
				  
				FROM
				  PARTY a 
				  LEFT JOIN PARTY_ROLE b 
				    ON a.`PARTY_ID` = b.`PARTY_ID` 
				  LEFT JOIN PARTY_GROUP c 
				    ON a.`PARTY_ID` = c.`PARTY_ID` 
				  LEFT JOIN PARTY_RELATIONSHIP e 
				    ON a.`PARTY_ID` = e.`PARTY_ID_TO` 
				  LEFT JOIN PERSON f 
				    ON a.`PARTY_ID`=f.`PARTY_ID` 
				  WHERE <![CDATA[ (e.`THRU_DATE` IS NULL OR e.`THRU_DATE` > NOW()) ]]> 
					  <if test="partyId != null">
					     AND a.`PARTY_ID` = #{partyId}
				      </if>
					  <if test="groupName != null">
					      AND c.`GROUP_NAME` like #{groupName}
				      </if>
					   <if test="roleType != null">
					     AND b.ROLE_TYPE_ID = #{roleType}
				      </if>
					   <if test="partyType != null">
					      AND a.`PARTY_TYPE_ID` = #{partyType}
				      </if>
					   <if test="status != null">
					     AND a.`STATUS_ID` = #{status}
				      </if>
					   <if test="partyIdFrom != null">
					     AND e.`PARTY_ID_FROM` = #{partyIdFrom}
				       </if>
				        <if test="partyIdTo != null">
					     AND  e.`PARTY_ID_TO`= #{partyIdTo}
				       </if>
					   <if test="roleTypeIdFrom != null">
					    AND e.`ROLE_TYPE_ID_FROM` = #{roleTypeIdFrom}
				      </if>
					   <if test="roleTypeIdTo != null">
					      AND e.`ROLE_TYPE_ID_TO` = #{roleTypeIdTo}
				      </if>
			   ORDER BY a.`CREATED_DATE` DESC
		</select>


	<insert id="insert" parameterType="com.yikuyi.party.model.Party">
		insert into PARTY_GROUP
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				PARTY_ID,
			</if>
			<if test="partyGroup.groupName != null">
				GROUP_NAME,
			</if>
			<if test="partyGroup.description != null">
				DESCRIPTION,
			</if>
			<if test="partyGroup.comments != null">
				COMMENTS,
			</if>
			<if test="partyGroup.logoImageUrl != null">
				LOGO_IMAGE_URL,
			</if>
			<if test="partyGroup.logoImageUrlSmall != null">
		        LOGO_IMAGE_URL_SMALL,
		    </if>
			<if test="partyGroup.creator != null">
				CREATOR,
			</if>
			<if test="partyGroup.createdDate != null">
				CREATED_DATE,
			</if>
			<if test="partyGroup.lastUpdateUser != null">
				LAST_UPDATE_USER,
			</if>
			<if test="partyGroup.lastUpdateDate != null">
				LAST_UPDATE_DATE,
			</if>
			<if test="partyGroup.activeStatus != null">
				VERIFY_STATUS_ID,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="partyGroup.groupName != null">
				#{partyGroup.groupName,jdbcType=VARCHAR},
			</if>
			<if test="partyGroup.description != null">
				#{partyGroup.description,jdbcType=VARCHAR},
			</if>
			<if test="partyGroup.comments != null">
				#{partyGroup.comments,jdbcType=VARCHAR},
			</if>
			<if test="partyGroup.logoImageUrl != null">
				#{partyGroup.logoImageUrl,jdbcType=VARCHAR},
			</if>
			<if test="partyGroup.logoImageUrlSmall != null">
		        #{partyGroup.logoImageUrlSmall,jdbcType=VARCHAR},
		    </if>
			<if test="partyGroup.creator != null">
				#{partyGroup.creator,jdbcType=VARCHAR},
			</if>
			<if test="partyGroup.createdDate != null">
				#{partyGroup.createdDate,jdbcType=TIMESTAMP},
			</if>
			<if test="partyGroup.lastUpdateUser != null">
				#{partyGroup.lastUpdateUser,jdbcType=VARCHAR},
			</if>
			<if test="partyGroup.lastUpdateDate != null">
				#{partyGroup.lastUpdateDate,jdbcType=TIMESTAMP},
			</if>
			<if test="partyGroup.activeStatus != null">
				#{partyGroup.activeStatus,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	
	<update id="updatePartyGroup" parameterType="com.yikuyi.party.model.Party" >
     update PARTY_GROUP 
     <set >
      <if test="partyGroup.groupName != null">
		 GROUP_NAME = #{partyGroup.groupName,jdbcType=VARCHAR},
		</if>
		<if test="partyGroup.description != null">
		 DESCRIPTION = #{partyGroup.description,jdbcType=VARCHAR},
		</if>
		<if test="partyGroup.comments != null">
		 COMMENTS = #{partyGroup.comments,jdbcType=VARCHAR},
		</if>
		<if test="partyGroup.logoImageUrl != null">
		 LOGO_IMAGE_URL = #{partyGroup.logoImageUrl,jdbcType=VARCHAR},
		</if>
		<if test="partyGroup.creator != null">
		 CREATOR = #{partyGroup.creator,jdbcType=VARCHAR},
		</if>
		<if test="partyGroup.createdDate != null">
			CREATED_DATE = #{partyGroup.createdDate,jdbcType=TIMESTAMP},
		</if>
		<if test="partyGroup.lastUpdateUser != null">
			LAST_UPDATE_USER = #{partyGroup.lastUpdateUser,jdbcType=VARCHAR},
		</if>
		<if test="partyGroup.lastUpdateDate != null">
		  LAST_UPDATE_DATE = #{partyGroup.lastUpdateDate,jdbcType=TIMESTAMP},
		</if>
		<if test="partyGroup.activeStatus != null">
		  VERIFY_STATUS_ID = #{partyGroup.activeStatus,jdbcType=VARCHAR},
		</if>
    </set>
       where PARTY_ID = #{id,jdbcType=VARCHAR}
  </update>
  
	<select id="associateEnterpriseList" resultMap="BaseResultMap">
		SELECT t.PARTY_ID,t.GROUP_NAME,t.LOGO_IMAGE_URL FROM PARTY_GROUP t
		WHERE t.GROUP_NAME LIKE CONCAT('%',#{name},'%')
		LIMIT #{page},#{size}
	</select>
	
	<select id="findPartyGroupByPartyId" resultMap="BaseResultMap">
		SELECT 
		  PARTY_ID,
		  GROUP_NAME,
		  DESCRIPTION,
		  COMMENTS,
		  LOGO_IMAGE_URL,
		  LOGO_IMAGE_URL_SMALL,
		  VERIFY_STATUS_ID,
		  CREATOR,
		  CREATED_DATE,
		  LAST_UPDATE_USER,
		  LAST_UPDATE_DATE
		FROM
		PARTY_GROUP
		WHERE PARTY_ID=#{partyId}
	</select>
	
	<select id="findPartyGroupByName" resultMap="BaseResultMap">
		SELECT 
			  b.PARTY_ID,
			  b.GROUP_NAME,
			  b.DESCRIPTION,
			  b.COMMENTS,
			  b.LOGO_IMAGE_URL,
			  b.LOGO_IMAGE_URL_SMALL,
			  b.CREATOR,
			  b.CREATED_DATE,
			  b.LAST_UPDATE_USER,
			  b.LAST_UPDATE_DATE 
			FROM
			  PARTY a,
			  PARTY_GROUP b 
			WHERE a.`PARTY_ID` = b.`PARTY_ID` 
			   AND a.`STATUS_ID`='PARTY_ENABLED' 
			  AND b.GROUP_NAME = #{groupName} 
	</select>
	
	<select id="getPartyGroupByGroupId"  resultMap="BaseResultMap">
	    SELECT 
		  PARTY_ID,
		  GROUP_NAME,
		  DESCRIPTION,
		  COMMENTS,
		  LOGO_IMAGE_URL,
		  LOGO_IMAGE_URL_SMALL,
		  CREATOR,
		  CREATED_DATE,
		  LAST_UPDATE_USER,
		  LAST_UPDATE_DATE
		FROM
		PARTY_GROUP
		WHERE PARTY_ID = #{partyGroupId}
	</select>
	
	<select id="getGroupNameByUserPartyId" resultMap="BaseResultMap">
		SELECT t.GROUP_NAME,t.PARTY_ID,t.LOGO_IMAGE_URL FROM `PARTY_GROUP` t 
		WHERE t.party_id=(SELECT CORPORATION_ID FROM PARTY WHERE party_id=#{partyId})
	</select>
	
	<select id="getVendorList" resultMap="vendorBaseResultMap">
		SELECT
			`PARTY_CODE`,
			`PARTY_ID`,
			`GROUP_NAME` ,
			`CREATOR`,
			`LOGO_IMAGE_URL`,
			`RELATIONSHIP_NAME`,
			`CREATED_DATE` FROM
		(SELECT DISTINCT
			t1.`PARTY_CODE`,
			t1.`PARTY_ID`,
			t2.`GROUP_NAME` ,
			t2.`CREATOR`,
			t2.`LOGO_IMAGE_URL`,
			t3.`RELATIONSHIP_NAME`,
			t1.`CREATED_DATE`
		FROM 
		PARTY t1 LEFT JOIN PARTY_GROUP t2 ON t1.`PARTY_ID`=t2.`PARTY_ID`
		LEFT JOIN PARTY_RELATIONSHIP t3 ON t1.`PARTY_ID`=t3.`PARTY_ID_TO`
		WHERE t3.`PARTY_ID_FROM` IN (SELECT PARTY_ID_FROM FROM PARTY_RELATIONSHIP  WHERE PARTY_ID_TO=#{partyId} AND PARTY_RELATIONSHIP_TYPE_ID='REPORTS_TO')
		AND t3.`RELATIONSHIP_NAME`='DEVELOPMENT_BY'
		AND (t3.`THRU_DATE`>NOW() OR t3.`THRU_DATE` IS NULL)
		AND t3.`ROLE_TYPE_ID_TO`='SUPPLIER'
		UNION ALL
		SELECT DISTINCT
			t1.`PARTY_CODE`,
			t1.`PARTY_ID`,
			t2.`GROUP_NAME` ,
			t2.`CREATOR`,
			t2.`LOGO_IMAGE_URL`,
			t3.`RELATIONSHIP_NAME`,
			t1.`CREATED_DATE`
		FROM 
		PARTY t1 LEFT JOIN PARTY_GROUP t2 ON t1.`PARTY_ID`=t2.`PARTY_ID`
		LEFT JOIN PARTY_RELATIONSHIP t3 ON t1.`PARTY_ID`=t3.`PARTY_ID_TO`
		WHERE t3.`PARTY_ID_FROM` =#{partyId}
		AND(t3.`THRU_DATE`>NOW() OR t3.`THRU_DATE` IS NULL)
		AND t3.`ROLE_TYPE_ID_TO`='SUPPLIER'
		) t_vendor
		ORDER BY CREATED_DATE DESC
	</select>
	<select id="getVendorDetail" resultMap="BaseResultMap">
		SELECT t1.`PARTY_ID` , t1.`GROUP_NAME`,t1.`LOGO_IMAGE_URL` ,t2.`PARTY_CODE`
		FROM PARTY_GROUP t1 
		INNER JOIN PARTY t2 ON t1.`PARTY_ID`=t2.`PARTY_ID`
		AND t1.`PARTY_ID`=#{partyId};
	</select>
</mapper>