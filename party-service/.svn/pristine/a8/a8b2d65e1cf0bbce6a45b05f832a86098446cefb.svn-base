/*
 * Created: 2017年1月19日
 *
 * Shenzhen Yikuyi Co., Ltd. All rights reserved. 
 * Copyright (c) 2015-2017 
 * License, Version 1.0. Published by Yikuyi IT department.
 *
 * For the convenience of communicating and reusing of codes,
 * any java names, variables as well as comments should be written according to the regulations strictly.
 */
package com.yikuyi.party.enterprise.api.impl;

import java.io.IOException;
import java.util.List;

import javax.servlet.http.HttpServletResponse;

import org.apache.ibatis.session.RowBounds;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.alibaba.druid.util.StringUtils;
import com.alibaba.fastjson.JSONObject;
import com.framewrok.springboot.web.RequestHelper;
import com.github.pagehelper.PageInfo;
import com.yikuyi.party.contact.vo.EnterpriseCertificatesVo;
import com.yikuyi.party.contact.vo.EnterpriseParamVo;
import com.yikuyi.party.contact.vo.EnterpriseVo;
import com.yikuyi.party.contact.vo.MsgResultVo;
import com.yikuyi.party.contact.vo.UserExtendVo;
import com.yikuyi.party.contact.vo.UserVo;
import com.yikuyi.party.enterprise.api.IEnterpriseResource;
import com.yikuyi.party.enterprise.bll.EnterpriseCertManager;
import com.yikuyi.party.enterprise.bll.EnterpriseManager;
import com.yikuyi.party.group.model.PartyGroup;
import com.yikuyi.party.model.Party;
import com.yikuyi.party.person.model.Person;
import com.yikuyi.workflow.Apply;

/**
 * 企业信息类
 * 
 * @author helinmei
 *
 */


@RestController
@RequestMapping("v1/enterprises")
public  class EnterpriseResource implements IEnterpriseResource{
	
	private static final Logger logger = LoggerFactory.getLogger(EnterpriseResource.class);
	
	@Autowired
	private EnterpriseManager enterpriseManager;
	
	//公司资质
	@Autowired
	private EnterpriseCertManager entCertManager;
	
	/**
	 * 获取企业详情
	 * @param id
	 * @return EnterpriseVo
	 * @since 2016年1月19日
	 * @author zr.helinmei@yikuyi.com
	 * @throws IOException 
	 */
	@Override
	@RequestMapping(value = "/{id}", method = RequestMethod.GET)
	public EnterpriseVo getEnterprise(@PathVariable(value = "id")String id){
		return enterpriseManager.getPartyDetail(id);
	}
	/**
	 * 获取企业基本信息
	 * @param partyId
	 * @return
	 * @since 2017年5月3日
	 * @author zr.aoxianbing@yikuyi.com
	 */
	@Override
	@RequestMapping(value = "/baseInfo", method = RequestMethod.GET)
	public PartyGroup getEntBaseInfo(@RequestParam(value = "partyId" , required = false)String partyId){
		
		if(StringUtils.isEmpty(partyId)){
			String userId = RequestHelper.getLoginUserId();
			partyId = userId;
		}
		return enterpriseManager.getEntBaseInfo(partyId);
	}
	@Override
	@RequestMapping(value = "/admin/{id}", method = RequestMethod.GET)
	public EnterpriseVo getEnterpriseDetailByEntId(@PathVariable(value = "id")String id) {
		return enterpriseManager.getPartyDetailByEntId(id, new EnterpriseVo());
	}

	@Override
	@RequestMapping(method = RequestMethod.POST)
	public void save(@RequestBody JSONObject jsonObject) {
		enterpriseManager.save(jsonObject);
	}

	/**
	 * 导出企业会员列表
	 * @param vo
	 * @return
	 * @since 2017年4月13日
	 * @author zr.aoxianbing@yikuyi.com
	 */
	@Override
	@RequestMapping(value = "/excel",method = RequestMethod.GET)
	public void exportEnt(@RequestParam(value = "mail" , required = false)String mail, 
			@RequestParam(value = "name" , required = false)String name, 
			@RequestParam(value = "status" , required = false)String status,
			@RequestParam(value = "verifyStatus" , required = false)String verifyStatus, 
			@RequestParam(value = "registerStart" , required = false)String registerStart, 
			@RequestParam(value = "registerEnd" , required = false)String registerEnd, 
			@RequestParam(value = "lastLoginStart" , required = false)String lastLoginStart, 
			@RequestParam(value = "lastLoginEnd" , required = false)String lastLoginEnd,HttpServletResponse response) throws IOException {
		String userId = RequestHelper.getLoginUserId();
		if(userId == null || "".equals(userId)){
			logger.error("无法获取用户的id");
			return;
		}
		EnterpriseParamVo param = new EnterpriseParamVo();
		param.setMail(mail);
		param.setName(name);
		param.setStatus(status);
		param.setVerifyStatus(verifyStatus);
		param.setRegisterStart(registerStart);
		param.setRegisterEnd(registerEnd);
		param.setLastLoginStart(lastLoginStart);
		param.setLastLoginEnd(lastLoginEnd);
		enterpriseManager.exportEnt(param,response);
	}
	@Override
	@RequestMapping(method = RequestMethod.GET)
	public PageInfo<EnterpriseVo> enterpriseList(@RequestParam(value = "mail" , required = false)String mail, 
			@RequestParam(value = "name" , required = false)String name, 
			@RequestParam(value = "status" , required = false)String status,
			@RequestParam(value = "verifyStatus" , required = false)String verifyStatus, 
			@RequestParam(value = "registerStart" , required = false)String registerStart, 
			@RequestParam(value = "registerEnd" , required = false)String registerEnd, 
			@RequestParam(value = "lastLoginStart" , required = false)String lastLoginStart, 
			@RequestParam(value = "lastLoginEnd" , required = false)String lastLoginEnd, 
			@RequestParam(value = "page" , defaultValue = "1")int page, 
			@RequestParam(value = "size" , defaultValue = "10")int size) {
		EnterpriseParamVo param = new EnterpriseParamVo();
		param.setMail(mail);
		param.setName(name);
		param.setStatus(status);
		param.setVerifyStatus(verifyStatus);
		param.setRegisterStart(registerStart);
		param.setRegisterEnd(registerEnd);
		param.setLastLoginStart(lastLoginStart);
		param.setLastLoginEnd(lastLoginEnd);
		RowBounds rowBounds = new RowBounds((page-1)*size, size);
		return enterpriseManager.getEnterpriseList(param, rowBounds);
		
	}

	@Override
	@RequestMapping(value="{id}/accounts" , method = RequestMethod.GET)
	public List<UserExtendVo> enterpriseAccountsList(@PathVariable(value = "id" , required = true)String id) {
		return enterpriseManager.getEnterpriseAccountsList(id);
	}


	/**
	 * 企业账号关联成功之后的回调服务
	 */
	@Override
	@RequestMapping(value = "/relation" , method = RequestMethod.POST)
	public MsgResultVo addEnterPriserelation(@RequestBody JSONObject jsonObject) {
//		String loginId = RequestHelper.getLoginUserId();loginId, id
		return enterpriseManager.addEnterPriserelation(jsonObject);
	}
	
	@Override
	@RequestMapping(value = "/relation/{id}" , method = RequestMethod.PUT)
	public MsgResultVo editRelationStatus(@PathVariable(value="id",required = true)String id, @RequestBody Apply apply) {
		return enterpriseManager.editRelationStatus(id, apply);
	}

	/**
	 * 根据公司名字联想企业名称
	 */
	@Override
	@RequestMapping(value = "/associate" , method = RequestMethod.GET)
	public List<EnterpriseVo> associateEnterpriseList(@RequestParam(value = "name" , required = true)String name) {
		return enterpriseManager.associateEnterpriseList(name);
	}

	/**
	 * 根据账号查询管理员信息
	 * 
	 * @param id
	 * @param role
	 * @return
	 * @since 2017年1月20日
	 * @author zr.aoxianbing@yikuyi.com
	 */
	@Override
	@RequestMapping(value="/accounts/{id}",method=RequestMethod.GET)
	public UserVo getAdmin(@PathVariable("id") String id, @RequestParam(value="role",required=true) String role) {
		return enterpriseManager.getAdmin(id,role);
	}
	/**
	 * 根据用户的id判断是否为管理员
	 * 
	 * @param id
	 * @return
	 * @since 2017年1月20日
	 * @author zr.aoxianbing@yikuyi.com
	 */
	@Override
	@RequestMapping(value="/accounts/admin",method=RequestMethod.GET)
	public Boolean isAdmin() {
		String id = RequestHelper.getLoginUserId();
		return enterpriseManager.isAdmin(id);
	}
	/**
	 * 根据用户的id判断是否为首次去激活或者关联
	 * 
	 * @param id
	 * @return
	 * @since 2017年1月20日
	 * @author zr.aoxianbing@yikuyi.com
	 */
	@Override
	@RequestMapping(value="/accounts/isFristActive",method=RequestMethod.GET)
	public Boolean isFristActive() {
		String id = RequestHelper.getLoginUserId();
		return enterpriseManager.isFristActive(id);
	}
	
	/**
	 * 根据用户的id判断是否为激活或者关联，返回true：已经激活或者关联，fail：未激活或者未关联
	 * 
	 * @param id
	 * @return
	 * @since 2017年1月20日
	 * @author zr.aoxianbing@yikuyi.com
	 */
	@Override
	@RequestMapping(value="/accounts/isActivedOrRelationed",method=RequestMethod.GET)
	public String isActivedOrRelationed() {
		String id = RequestHelper.getLoginUserId();
		return enterpriseManager.isActivedOrRelationed(id);
	}
	
	/**
	 * 根据id更新状态
	 * @param id
	 * @param status
	 * @return
	 * @since 2017年1月20日
	 * @author zr.aoxianbing@yikuyi.com
	 */
	@Override
	@RequestMapping(value="/{id}",params="action=updateStatus",method=RequestMethod.PUT)
	public void updateStatus(@PathVariable("id") String id,@RequestParam(value="status",required=true)Party.PartyStatus status) {
		Party party = new Party();
		party.setId(id);
		party.setPartyStatus(status);
		UserVo userVo = enterpriseManager.getUser(id);
		if(userVo != null){
			Person p = new Person();
			p.setMail(userVo.getMail());
			party.setPerson(p);
		}
		enterpriseManager.updateStatus(party);
	}

	/**
	 * 修改公司信息
	 * @param EnterpriseVo
	 * @return
	 * @since 2017年1月20日
	 * @author zr.helinmei@yikuyi.com
	 */
	@Override
	@RequestMapping(value="/comapny",method = RequestMethod.POST)
	public void editCompany(@RequestBody EnterpriseVo enterpriseVo) {
		enterpriseManager.editCompany(enterpriseVo);
	}
	


	/**
	 * 修改公司信息
	 * @param EnterpriseVo
	 * @return
	 * @since 2017年1月20日
	 * @author zr.helinmei@yikuyi.com
	 */
	@Override
	@RequestMapping(value="/activeAccountSave",method = RequestMethod.POST)
	public void activeAccountSave(@RequestBody Apply apply) {
		 enterpriseManager.activeAccountSave(apply);
	}

	/**
	 * 根据名字查询是否激活或者关联
	 * @param id
	 * @return EnterpriseVo
	 * @since 2016年1月19日
	 * @author zr.helinmei@yikuyi.com
	 * @throws IOException 
	 */
	@Override
	@RequestMapping(value = "/actived", method = RequestMethod.GET)
	public Party actived(@RequestParam(value = "name", required = false) String name) {
		try {
			return enterpriseManager.actived(name);
		} catch (IOException e) {
			logger.error(e.getMessage(),e);
		}
		return null;
	}

	/**
	 * 保存资质信息
	 * @param id
	 * @return EnterpriseVo
	 * @since 2016年1月19日
	 * @author zr.helinmei@yikuyi.com
	 * @throws IOException 
	 */
	@Override
	@RequestMapping(value = "/saveCertificate", method = RequestMethod.POST)
	public void saveCetrificate(@RequestBody EnterpriseCertificatesVo entVo) {
		 entCertManager.saveCertificate(entVo);
		
	}

	/**
	 * 获取资质详情
	 * @param id
	 * @return EnterpriseVo
	 * @since 2016年1月19日
	 * @author zr.helinmei@yikuyi.com
	 * @throws IOException 
	 */
	@Override
	@RequestMapping(value = "/certificate/{id}", method = RequestMethod.GET)
	public EnterpriseCertificatesVo getCetrificate(@PathVariable(value = "id")String id) {
		return entCertManager.getCertificate(id);
	}
	/**
	 * 获取资质私有图片地址
	 * @param id
	 * @return EnterpriseVo
	 * @since 2016年1月19日
	 * @author zr.helinmei@yikuyi.com
	 * @throws IOException 
	 */
	@Override
	@RequestMapping(value = "/getImgUrl", method = RequestMethod.POST)
	public String getImgUrl(@RequestBody JSONObject jsonObject) {
		String url=jsonObject.getString("id");
		return enterpriseManager.getImagUrl(url);
	}

	/**
	 * 后台企业管理修改公司信息
	 * @param EnterpriseVo
	 * @return
	 * @since 2017年4月13日
	 * @author zr.helinmei@yikuyi.com
	 */
	@Override
	@RequestMapping(value="/editEntApply",method = RequestMethod.POST)
	public void editEntApply(@RequestBody Apply apply) {
		 enterpriseManager.editEntApply(apply);
	}
	/**
	 * 后台管理企业账户修改审核成功调用方法
	 * @param EnterpriseVo
	 * @return
	 * @since 2017年4月13日
	 * @author zr.helinmei@yikuyi.com
	 */
	@Override
	@RequestMapping(value="/editEntApplySave",method = RequestMethod.POST)
	public void editEntApplySave(@RequestBody JSONObject jsonObject) {
		enterpriseManager.editEntApplySave(jsonObject);
	}

	/**
	 * 企业授权委托书审核接口
	 * 
	 * @param id
	 * @return EnterpriseVo
	 * @since 2017年5月2日
	 * @author zr.helinmei@yikuyi.com
	 * @throws IOException  
	 */
	@Override
	@RequestMapping(value="/entAuthorize",method = RequestMethod.POST)
	public void entAuthorize(@RequestBody JSONObject jsonObject) {
		enterpriseManager.entAuthorize(jsonObject);
	}
}
