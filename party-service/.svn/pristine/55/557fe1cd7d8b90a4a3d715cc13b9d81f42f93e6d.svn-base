package com.yikuyi.party.v8.message.vo;

import org.apache.commons.lang.StringUtils;
import org.hibernate.validator.constraints.NotEmpty;
import org.springframework.security.crypto.bcrypt.BCrypt;

import io.swagger.annotations.ApiModelProperty;

/**
 * 注册，修改密码相关vo
 * @author jik.shu@yikuyi.com
 * @version 1.0.0
 */
public class RegisterVo {

	private static final java.util.regex.Pattern BCRYPT_PATTERN = java.util.regex.Pattern.compile("\\A\\$2a?\\$\\d\\d\\$[./0-9A-Za-z]{53}");

	@ApiModelProperty(value = "手机号码")
	@NotEmpty
	private String phoneNumber;

	@ApiModelProperty(value = "验证码")
	@NotEmpty
	private String registerCode;

	@ApiModelProperty(value = "密码")
	@NotEmpty
	private String passWord;

	@ApiModelProperty(value = "用户id")
	private String id;

	public String getId() {
		return id;
	}

	public void setId(String id) {
		this.id = id;
	}

	public String getPhoneNumber() {
		return phoneNumber;
	}

	public void setPhoneNumber(String phoneNumber) {
		this.phoneNumber = phoneNumber;
	}

	public String getRegisterCode() {
		return registerCode;
	}

	public void setRegisterCode(String registerCode) {
		this.registerCode = registerCode;
	}

	public String getPassWord() {
		return this.passWord;
	}

	public void setPassWord(String passWord) {
		if (StringUtils.isNotEmpty(passWord) && !BCRYPT_PATTERN.matcher(passWord).matches()) {
			// 如果密码非空，且为原文状态，则使用Bcrypt方式加密
			this.passWord = BCrypt.hashpw(passWord, BCrypt.gensalt());
		} else if(StringUtils.isNotEmpty(passWord)) {
			this.passWord = passWord;
		}
	}
}
