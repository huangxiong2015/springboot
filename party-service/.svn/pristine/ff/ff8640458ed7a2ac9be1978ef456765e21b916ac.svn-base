<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yikuyi.party.party.dao.PartyDao">
   <resultMap id="BaseResultMap" type="com.yikuyi.party.model.Party">
		<id column="PARTY_ID" property="id" jdbcType="VARCHAR" />
		<result column="PARTY_TYPE_ID" property="partyType" jdbcType="VARCHAR" />
		<result column="PARTY_CODE" property="partyCode" jdbcType="VARCHAR" />
		<result column="EXTERNAL_ID" property="externalId" jdbcType="VARCHAR" />
		<result column="STATUS_ID" property="partyStatus" jdbcType="VARCHAR" />
		<result column="IS_SYSTEM" property="isSystem" jdbcType="CHAR" />
		<result column="CREATED_DATE" property="createdDate" jdbcType="TIMESTAMP" />
		<result column="CREATOR" property="creator" jdbcType="VARCHAR" />
		<result column="CORPORATION_ID" property="corporationId" />
		<result column="LAST_UPDATE_USER" property="lastUpdateUser" jdbcType="VARCHAR" />
		<result column="LAST_UPDATE_DATE" property="lastUpdateDate" jdbcType="TIMESTAMP" />
		<association property="partyGroup" javaType="com.yikuyi.party.group.model.PartyGroup">
			<result column="GROUP_NAME" property="groupName" jdbcType="VARCHAR" />
			<result column="LOGO_IMAGE_URL" property="logoImageUrl" jdbcType="VARCHAR" />
			<result column="VERIFY_STATUS_ID" property="activeStatus" jdbcType="VARCHAR" />
			<result column="ACCOUNT_STATUS" property="accountStatus" jdbcType="VARCHAR" />
			<result column="APPLY_DATE" property="applyDate" jdbcType="TIMESTAMP" />
			<result column="APPROVED_DATE" property="approvedDate" jdbcType="TIMESTAMP" />
			<result column="COMMENTS" property="comments" jdbcType="VARCHAR" />
			<result column="CREDIT_COMMENTS" property="creditComments" jdbcType="VARCHAR" />
			<result column="ACCOUNT_PERIOD_STATUS" property="accountPeriodStatus" jdbcType="VARCHAR"/>
		</association>
		<association property="person" javaType="com.yikuyi.party.person.model.Person">
			<result column="LAST_NAME_LOCAL" property="lastNameLocal" />
			<result column="MAIL" property="mail" />
			<result column="TEL" property="tel" />
			<result column="ACCOUNT_TYPE" property="personTypeStatus" jdbcType="VARCHAR"/>
		</association>
	</resultMap>
  
   	<resultMap id="enterpriseExpiredMap" type="com.yikuyi.party.vo.EnterpriseExpiredVo">
		<id column="PARTY_ID" property="partyId" jdbcType="VARCHAR" />
		<result column="PARTY_CODE" property="partyCode" jdbcType="VARCHAR" />
		<result column="GROUP_NAME" property="name" jdbcType="VARCHAR" />
		<result column="ORG_LIMIT" property="orgLimit" jdbcType="VARCHAR" />
		<result column="HK_EFFECTIVE_DATE" property="hkEffectiveDate" jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap id="PartyCarrierMap" type="com.yikuyi.party.vo.PartyCarrierVo">
		<id column="PARTY_ID" property="partyId" jdbcType="VARCHAR" />
		<result column="GROUP_NAME" property="groupName" jdbcType="VARCHAR" />
		<result column="STATUS_ID" property="partyStatus" jdbcType="VARCHAR" />
		<result column="CREATOR" property="creator" jdbcType="VARCHAR" />
		<result column="CREATED_DATE" property="createDate" jdbcType="TIMESTAMP" />
		<result column="LAST_UPDATE_DATE" property="lastUpdateDate" jdbcType="TIMESTAMP" />
	</resultMap>
  
<!--   添加供应商信息 -->
  <insert id="insert" parameterType="com.yikuyi.party.model.Party" >
    insert into PARTY
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        PARTY_ID,
      </if>
      <if test="partyType != null" >
        PARTY_TYPE_ID,
      </if>
      <if test="partyCode != null" >
        PARTY_CODE,
      </if>
      <if test="externalId != null" >
        EXTERNAL_ID,
      </if>
      <if test="partyStatus != null" >
        STATUS_ID,
      </if>
      <if test="isSystem != null" >
        IS_SYSTEM,
      </if>
<!--       <if test="createdDate != null" > -->
        CREATED_DATE,
<!--       </if> -->
      <!--<if test="createdByUserLogin != null" >
        CREATED_BY_USER_LOGIN,
      </if>
       <if test="lastModifiedDate != null" >
        LAST_MODIFIED_DATE,
      </if>
      <if test="lastModifiedByUserLogin != null" >
        LAST_MODIFIED_BY_USER_LOGIN,
      </if> -->
      <if test="creator != null" >
        CREATOR,
      </if>
      <if test="lastUpdateUser != null" >
        LAST_UPDATE_USER,
      </if>
<!--       <if test="lastUpdateDate != null" > -->
        LAST_UPDATE_DATE,
<!--       </if> -->
      <if test="description != null" >
        DESCRIPTION,
      </if>
      <if test="corporationId != null" >
        CORPORATION_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="partyType != null" >
        #{partyType,jdbcType=VARCHAR},
      </if>
      <if test="partyCode != null" >
        #{partyCode,jdbcType=VARCHAR},
      </if>
      <if test="externalId != null" >
        #{externalId,jdbcType=VARCHAR},
      </if>
      <if test="partyStatus != null" >
        #{partyStatus,jdbcType=VARCHAR},
      </if>
      <if test="isSystem != null" >
        #{isSystem,jdbcType=CHAR},
      </if>
        NOW(),
<!--       <if test="createdDate != null" > -->
<!--         #{createdDate,jdbcType=TIMESTAMP}, -->
<!--       </if> -->
      <!--<if test="createdByUserLogin != null" >
        #{createdByUserLogin,jdbcType=VARCHAR},
      </if>
       <if test="lastModifiedDate != null" >
        #{lastModifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifiedByUserLogin != null" >
        #{lastModifiedByUserLogin,jdbcType=VARCHAR},
      </if> -->
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateUser != null" >
        #{lastUpdateUser,jdbcType=VARCHAR},
      </if>
       NOW(),
<!--       <if test="lastUpdateDate != null" > -->
<!--         #{lastUpdateDate,jdbcType=TIMESTAMP}, -->
<!--       </if> -->
      <if test="description != null" >
        #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="corporationId != null" >
        #{corporationId},
      </if>
    </trim>
  </insert>
  
   <update id="updateParty" parameterType="com.yikuyi.party.model.Party" >
    update PARTY 
     <set >
      <if test="partyType != null" >
        PARTY_TYPE_ID = #{partyType,jdbcType=VARCHAR},
      </if>
      <if test="partyCode != null" >
       PARTY_CODE = #{partyCode,jdbcType=VARCHAR},
      </if>
      <if test="externalId != null" >
       EXTERNAL_ID = #{externalId,jdbcType=VARCHAR},
      </if>
      <if test="partyStatus != null" >
       STATUS_ID = #{partyStatus,jdbcType=VARCHAR},
      </if>
      <if test="isSystem != null" >
      IS_SYSTEM =  #{isSystem,jdbcType=CHAR},
      </if>
      <if test="createdDate != null" >
       CREATED_DATE = #{createdDate,jdbcType=TIMESTAMP},
      </if>
     <!-- <if test="createdByUserLogin != null" >
       CREATED_BY_USER_LOGIN = #{createdByUserLogin,jdbcType=VARCHAR},
      </if>
       <if test="lastModifiedDate != null" >
       LAST_MODIFIED_DATE = #{lastModifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifiedByUserLogin != null" >
       LAST_MODIFIED_BY_USER_LOGIN = #{lastModifiedByUserLogin,jdbcType=VARCHAR},
      </if> -->
      <if test="creator != null" >
       CREATOR = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateUser != null" >
       LAST_UPDATE_USER = #{lastUpdateUser,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateDate != null" >
       LAST_UPDATE_DATE =  #{lastUpdateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null" >
       DESCRIPTION =  #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="corporationId != null" >
        CORPORATION_ID =  #{corporationId},
      </if>
    </set>
    where  PARTY_ID = #{id,jdbcType=VARCHAR}
  </update>
  
  
  <select id="getPartyDetail" resultMap="BaseResultMap">
     SELECT t.`PARTY_ID`,t.`STATUS_ID`,t.`CORPORATION_ID`,t1.`GROUP_NAME`,t1.`LOGO_IMAGE_URL`,
     t1.`VERIFY_STATUS_ID`,t1.`ACCOUNT_STATUS`,t1.`COMMENTS`,t.`PARTY_CODE`,  IFNULL(t1.`ACCOUNT_PERIOD_STATUS`,'PERIOD_NOT_VERIFIED') as ACCOUNT_PERIOD_STATUS,t1.`CREDIT_COMMENTS`
     FROM  `PARTY` t LEFT JOIN `PARTY_GROUP` t1 ON t.`PARTY_ID` = t1.`PARTY_ID` 
     <where>
       <if test="id != null and id != ''" >
        AND  t.PARTY_ID = #{id,jdbcType=VARCHAR}
       </if>
        <if test="partyType != null" >
          AND t.`PARTY_TYPE_ID`=#{partyType}
       </if>
      </where>
  </select>
  
  <select id="getPartyPersonDetail" resultMap="BaseResultMap" parameterType="java.lang.String">
	SELECT 
	  t.PARTY_ID,
	  t.`STATUS_ID`,
	  t1.`LAST_NAME_LOCAL`,
	  t1.`TEL`,
	  t.`CORPORATION_ID`,
	  t.PARTY_TYPE_ID,
	  IFNULL(t1.`ACCOUNT_TYPE`,'COMMON') as ACCOUNT_TYPE
	FROM
	  `PARTY` t 
	  LEFT JOIN `PERSON` t1 
	    ON t.`PARTY_ID` = t1.`PARTY_ID` 
	    AND t.`PARTY_TYPE_ID` = 'PERSON' 
	WHERE t.PARTY_ID = #{id}
  </select>
  
  <resultMap id="getEnterpriseList" type="com.yikuyi.party.contact.vo.EnterpriseVo" >
    <id column="PARTY_ID" property="id" jdbcType="VARCHAR" />
    <result column="MAIL" property="mail" jdbcType="VARCHAR" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="COR_CATEGORY" property="corCategory" jdbcType="VARCHAR" />
    <result column="CONTACT_USER_NAME" property="contactUserName" jdbcType="VARCHAR" />
    <result column="CONTACT_USER_TEL" property="contactUserTel" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="VARCHAR" />
    <result column="VERIFY_STATUS" property="verifyStatus" jdbcType="VARCHAR" />
    <result column="REG_TIME" property="regTime" jdbcType="TIMESTAMP" />
    <result column="LAST_LOGIN_TIME" property="lastLoginTime" jdbcType="TIMESTAMP" />
  </resultMap>
  
  
  <select id="getEnterpriseList" resultMap="getEnterpriseList" parameterType="com.yikuyi.party.contact.vo.EnterpriseParamVo">
	SELECT DISTINCT 
	  (a.`PARTY_ID`),
	  c.`PARTY_ID_FROM` AS `USER_ID`,
	  i.`USER_LOGIN_ID` AS `MAIL`,
	  b.`GROUP_NAME` AS `NAME`,
	  d.`ATTR_VALUE` AS `COR_CATEGORY`,
	  h.`ASK_FOR_NAME` AS `CONTACT_USER_NAME`,
	  h.`CONTACT_NUMBER` AS `CONTACT_USER_TEL`,
	  a.`STATUS_ID` AS `STATUS`,
	  b.`VERIFY_STATUS_ID` AS `VERIFY_STATUS`,
	  a.`CREATED_DATE` AS `REG_TIME`,
	  i.`LAST_UPDATE_DATE` AS 'LAST_LOGIN_TIME' 
	FROM
	  PARTY a 
	  INNER JOIN PARTY_GROUP b 
	    ON a.`PARTY_ID` = b.`PARTY_ID` 
	  INNER JOIN PARTY_RELATIONSHIP c 
	    ON a.`PARTY_ID` = c.`PARTY_ID_TO` 
	    AND c.`ROLE_TYPE_ID_FROM` = 'MAIN_ROLE' 
	    AND c.`ROLE_TYPE_ID_TO` = 'CORPORATION' 
	  LEFT JOIN PARTY_ATTRIBUTE d 
	    ON a.`PARTY_ID` = d.`PARTY_ID` 
	    AND d.`ATTR_NAME` = 'CORPORATION_CATEGORY_ID' 
	  LEFT JOIN PARTY_CONTACT_MECH e 
	    ON a.PARTY_ID = e.PARTY_ID 
	    AND e.CONTACT_MECH_PURPOSE_TYPE_ID = 'REGISTER_LOCATION' 
	    AND e.THRU_DATE IS NULL 
	  LEFT JOIN CONTACT_MECH f 
	    ON e.CONTACT_MECH_ID = f.CONTACT_MECH_ID 
	  LEFT JOIN POSTAL_ADDRESS g 
	    ON e.CONTACT_MECH_ID = g.CONTACT_MECH_ID 
	  LEFT JOIN TELECOM_NUMBER h 
	    ON e.CONTACT_MECH_ID = h.CONTACT_MECH_ID 
	    AND h.CONTACT_MECH_TYPE_ID = 'TELEPHONE' 
	  LEFT JOIN USER_LOGIN i 
	    ON c.`PARTY_ID_FROM` = i.`PARTY_ID`
	    AND i.`USER_LOGIN_METHOD` = 'EMAIL'
	WHERE a.`PARTY_TYPE_ID` = 'CORPORATION' 
	  AND b.`VERIFY_STATUS_ID` = 'PARTY_VERIFIED'
	<if test="entId != null" >
	   And a.`PARTY_ID`=#{entId}
	</if>
	<if test="mail != null" >
	   And i.`USER_LOGIN_ID`=#{mail}
	</if>
	<if test="name != null" >
	   And b.`GROUP_NAME` LIKE CONCAT(#{name}, '%')
	</if>
	<if test="status != null" >
	   And a.`STATUS_ID`=#{status}
	</if>
	<if test="registerStart != null" >
	   And a.`CREATED_DATE` >= DATE_FORMAT(#{registerStart},'%Y-%m-%d %H:%i:%s')
	</if>
	<if test="registerEnd != null" >
	   <![CDATA[ And a.`CREATED_DATE` <= DATE_FORMAT(#{registerEnd},'%Y-%m-%d %H:%i:%s')]]> 
	</if>
	<if test="lastLoginStart != null" >
		And i.`LAST_UPDATE_DATE` >= DATE_FORMAT(#{lastLoginStart},'%Y-%m-%d %H:%i:%s')
	</if>
	<if test="lastLoginEnd != null" >
		<![CDATA[ And i.`LAST_UPDATE_DATE` <= DATE_FORMAT(#{lastLoginEnd},'%Y-%m-%d %H:%i:%s')]]> 
	</if> 
	ORDER BY a.`CREATED_DATE` DESC
  </select>
  
  <select id="getEntList" resultType="com.yikuyi.party.contact.vo.EnterpriseVo"  parameterType="com.yikuyi.party.contact.vo.EnterpriseParamVo"  >
	SELECT
	    t.`PARTY_ID` AS id,
		t2.`MAIL` AS mail,
		t2.`LAST_NAME_LOCAL` AS contactUserName,
		t2.`TEL` AS contactUserTel,
		t1.`GROUP_NAME` AS NAME,
		t.`STATUS_ID` AS STATUS,
		t6.`ROLE_TYPE_ID` AS roleType,
		t1.`VERIFY_STATUS_ID` AS activeStatus,
		IFNULL(t1.`ACCOUNT_STATUS`,'ACCOUNT_NOT_VERIFIED') AS accountStatus,
		t.`CREATED_DATE` AS regTime, 
		tt.lastLoginTime AS lastLoginTime
		
	FROM PARTY t  LEFT JOIN PARTY_GROUP t1 ON t.`CORPORATION_ID` = t1.`PARTY_ID`  
	              INNER JOIN `PERSON` t2 ON t.`PARTY_ID` = t2.`PARTY_ID`
	              LEFT JOIN PARTY t5 ON t5.PARTY_ID = t.CORPORATION_ID
	  LEFT JOIN (SELECT t8.`PARTY_ID` ,MAX(t8.`LAST_UPDATE_DATE` ) AS lastLoginTime FROM `USER_LOGIN` t8 WHERE t8.`ENABLED` ='Y' GROUP BY t8.`PARTY_ID` ) AS tt ON t.party_id = tt.party_id
	              INNER JOIN `PARTY_ROLE` t6 ON t6.`PARTY_ID` = t.`PARTY_ID` AND t6.`ROLE_TYPE_ID` ='ENTERPRISE_CUST'
	    WHERE (t.`CORPORATION_ID` IS NOT NULL OR t.`PARTY_TYPE_ID`='PERSON')
	    AND t.`CORPORATION_ID` != '99999999'
	
	<if test="verifyStatus != null" >
	   And t1.`VERIFY_STATUS_ID` =#{verifyStatus}
	</if>
	<if test="registerStart != null and registerStart !=''" >
	   And t.`CREATED_DATE` >= DATE_FORMAT(concat(#{registerStart},' 00:00:00'),'%Y-%m-%d %H:%i:%s')
	</if>
	<if test="registerEnd != null and registerEnd !=''" >
	   <![CDATA[ And t.`CREATED_DATE` <= DATE_FORMAT(concat(#{registerEnd},' 23:59:59'),'%Y-%m-%d %H:%i:%s')]]> 
	</if>
	
	<if test="activeTypeList != null and activeTypeList.size !=0">
			AND t1.VERIFY_STATUS_ID IN
	        <foreach collection="activeTypeList" item="ids" index="index" open="(" close=")" separator=",">
	            #{ids}
	        </foreach>
     </if>
         GROUP BY t.`PARTY_ID`
         ORDER BY t.`CREATED_DATE` DESC
  </select>  
  
   <select id="getPartyByCompanyName" resultMap="BaseResultMap" parameterType="java.lang.String">
     SELECT t.PARTY_ID FROM  `PARTY` t LEFT JOIN `PARTY_GROUP` t1 ON t.`PARTY_ID` = t1.`PARTY_ID` AND t.`PARTY_TYPE_ID`='CORPORATION'
     where t1.PARTY_ID != #{id,jdbcType=VARCHAR}
       <if test="name != null and name != ''" >
          AND t1.`GROUP_NAME` = RTRIM(LTRIM(#{name,jdbcType=VARCHAR}))
       </if>
       
  </select>
  
    <resultMap id="getEnterpriseAccountsList" type="com.yikuyi.party.contact.vo.UserExtendVo" >
    <id column="PARTY_ID" property="id" jdbcType="VARCHAR" />
    <result column="MAIL" property="mail" jdbcType="VARCHAR" />
    <result column="MAIL_VERIFIED" property="mailStatus" jdbcType="VARCHAR" />
    <result column="ROLE_TYPE" property="roleType" jdbcType="VARCHAR" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="VARCHAR" />
    <result column="RELATION_STATUS" property="relationStatus" jdbcType="VARCHAR" />
    <result column="REG_TIME" property="regTime" jdbcType="TIMESTAMP" />
    <result column="LAST_LOGIN_TIME" property="lastLoginTime" jdbcType="TIMESTAMP" />
    <result column="LOGIN_COUNT" property="loginCount" jdbcType="VARCHAR" />
     <result column="TEL" property="tel" jdbcType="VARCHAR" />
     <result column="PERSON_TYPE" property="personTypeStatus" jdbcType="VARCHAR" />
     <result column="VERIFY_STATUS_ID" property="activeStatus" jdbcType="VARCHAR" />
  </resultMap>
  <select id="getEnterpriseAccountsList" resultMap="getEnterpriseAccountsList" parameterType="java.lang.String">
	SELECT  t1.`TEL` AS `TEL`,
	          t1.`MAIL` AS MAIL,
	          t1.`MAIL_VERIFIED` AS `MAIL_VERIFIED`,
	          t1.`LAST_NAME_LOCAL` AS NAME,
	          IFNULL(t1.`ACCOUNT_TYPE`,'COMMON') AS `PERSON_TYPE`,
	          (SELECT t8.`LAST_UPDATE_DATE` FROM `USER_LOGIN` t8 WHERE t8.`PARTY_ID`= t.`PARTY_ID_FROM` ORDER BY t8.`LAST_UPDATE_DATE` DESC LIMIT 1) AS `LAST_LOGIN_TIME`,
			  (SELECT t8.`SUCCEED_LOGINS` FROM `USER_LOGIN` t8 WHERE t8.`PARTY_ID`= t.`PARTY_ID_FROM` ORDER BY t8.`LAST_UPDATE_DATE` DESC LIMIT 1) AS `LOGIN_COUNT`,
		      t3.`STATUS_ID` AS `STATUS`,
			  t3.`CREATED_DATE` AS `REG_TIME`,
			  t3.`PARTY_ID`,
			  t4.`VERIFY_STATUS_ID` AS `VERIFY_STATUS_ID`
		      FROM PARTY_RELATIONSHIP t
		LEFT JOIN `PERSON` t1 ON t.`PARTY_ID_FROM` = t1.`PARTY_ID`
		LEFT JOIN `PARTY` t3 ON t.`PARTY_ID_FROM` =t3.`PARTY_ID`
		LEFT JOIN `PARTY_GROUP` t4 ON t3.`CORPORATION_ID` = t4.`PARTY_ID`
		 WHERE t.`PARTY_ID_TO` IN (SELECT `PARTY_ID_FROM`  FROM `PARTY_RELATIONSHIP` 
		 WHERE `PARTY_ID_TO`  =#{0} AND (`THRU_DATE` IS NULL OR `THRU_DATE` >=NOW()))
		 AND t.`THRU_DATE` IS NULL
		AND t.`ROLE_TYPE_ID_FROM` IN ('EMPLOYEE') AND t.`PARTY_RELATIONSHIP_TYPE_ID` IN ('REPORTS_TO','COS_PLAY','EMPLOYMENT')
		ORDER BY t.ROLE_TYPE_ID_FROM DESC
		
  </select>
  
   <select id="listAccountByEntId" resultMap="getEnterpriseAccountsList" parameterType="java.lang.String">
	  SELECT  t1.`TEL` AS `TEL`,
	          t1.`MAIL` AS MAIL,
	          t1.`MAIL_VERIFIED` AS `MAIL_VERIFIED`,
	          t1.`LAST_NAME_LOCAL` AS NAME,
	          IFNULL(t1.`ACCOUNT_TYPE`,'COMMON') AS `PERSON_TYPE`,
	            t3.`STATUS_ID` AS `STATUS`,
			  t3.`CREATED_DATE` AS `REG_TIME`,
			  t3.`PARTY_ID`,
			  t4.`VERIFY_STATUS_ID` AS `VERIFY_STATUS_ID`
		      FROM PARTY_RELATIONSHIP t
		LEFT JOIN `PERSON` t1 ON t.`PARTY_ID_FROM` = t1.`PARTY_ID`
		LEFT JOIN `PARTY` t3 ON t.`PARTY_ID_FROM` =t3.`PARTY_ID`
		LEFT JOIN `PARTY_GROUP` t4 ON t3.`CORPORATION_ID` = t4.`PARTY_ID`
		WHERE t.`PARTY_ID_TO` =#{0}
	          AND t.`THRU_DATE` IS NULL
		      AND t.`ROLE_TYPE_ID_FROM` IN ('EMPLOYEE') AND t.`PARTY_RELATIONSHIP_TYPE_ID` IN ('REPORTS_TO','COS_PLAY','EMPLOYMENT')
		ORDER BY t.ROLE_TYPE_ID_FROM DESC
		
  </select>
  
  
 <!-- 认证企业列表 -->
  <select id="entCertificationList" resultType="com.yikuyi.party.contact.vo.EnterpriseVo"  parameterType="com.yikuyi.party.contact.vo.EnterpriseParamVo"  >
    SELECT t.`PARTY_ID` AS id,
	       t.`PARTY_CODE` AS partyCode,
	       pc.`CREDIT_QUOTA` AS creditQuota,
		   t2.`GROUP_NAME` AS NAME, 
		   t2.`CREDIT_COMMENTS` AS creditComments,
		   t2.`ACCOUNT_PERIOD_STATUS` AS accountPeriodStatus,
		   IFNULL(t2.`ACCOUNT_STATUS`,'ACCOUNT_NOT_VERIFIED') AS accountStatus,
		   t2.`VERIFY_STATUS_ID`AS activeStatus,
		   t2.APPROVED_DATE AS approvedDate,
           a.`ATTR_VALUE` AS corCategory,
           b.`ATTR_VALUE` AS industryCategory,
	       c.`ATTR_VALUE` AS otherAttr,
	     (CASE
		        WHEN g.`ATTR_VALUE` = '0' THEN d.`ATTR_VALUE`
		        WHEN g.`ATTR_VALUE` = '1' THEN e.`ATTR_VALUE` 
		        WHEN g.`ATTR_VALUE` = '2' THEN f.`ATTR_VALUE` END) AS orgLimit,
	 CONCAT(addr.`PROVINCE_GEO_NAME`,addr.`CITY_GEO_NAME`,addr.`COUNTY_GEO_NAME`) AS address,
	      aa.`ATTR_VALUE` AS corCategoryOther
	 FROM  `PARTY` t LEFT JOIN `PARTY_GROUP` t2 ON t.`PARTY_ID` = t2.`PARTY_ID` 
	 LEFT JOIN `PARTY_CREDIT` pc ON t.`PARTY_ID`=pc.`PARTY_ID` AND pc.`THRU_DATE` IS NULL
	  LEFT JOIN PARTY_ATTRIBUTE a 
		    ON t.`PARTY_ID` = a.`PARTY_ID` 
		    AND a.`ATTR_NAME` = 'CORPORATION_CATEGORY_ID' 
	  LEFT JOIN PARTY_ATTRIBUTE aa
	       ON t.`PARTY_ID` = aa.`PARTY_ID` 
	       AND aa.`ATTR_NAME` = 'CORPORATION_CATEGORY_ID_OTHER' 
	 LEFT JOIN PARTY_ATTRIBUTE b 
		    ON t.`PARTY_ID` = b.`PARTY_ID` 
		    AND b.`ATTR_NAME` = 'INDUSTRY_CATEGORY_ID' 
	 LEFT JOIN PARTY_ATTRIBUTE c 
		    ON t.`PARTY_ID` = c.`PARTY_ID` 
		    AND c.`ATTR_NAME` = 'INDUSTRY_CATEGORY_ID_OTHER' 
	 LEFT JOIN PARTY_ATTRIBUTE d 
		    ON t.`PARTY_ID` = d.`PARTY_ID` 
		    AND d.`ATTR_NAME` = 'ORG_LIMIT'
		 
	 LEFT JOIN PARTY_ATTRIBUTE e 
	    ON t.`PARTY_ID` = e.`PARTY_ID` 
	    AND e.`ATTR_NAME` = 'HK_EFFECTIVE_DATE'
	    
	 LEFT JOIN PARTY_ATTRIBUTE f
	    ON t.`PARTY_ID` = f.`PARTY_ID` 
	    AND f.`ATTR_NAME` = 'TW_FAX_SIGN_CDATE'
	    
	   LEFT JOIN PARTY_ATTRIBUTE g
	    ON t.`PARTY_ID` = g.`PARTY_ID` 
	    AND g.`ATTR_NAME` = 'REG_ADDR'  
	    
	LEFT JOIN PARTY_CONTACT_MECH m 
		    ON t.`PARTY_ID` = m.`PARTY_ID` 
		    AND m.`CONTACT_MECH_PURPOSE_TYPE_ID` = 'REGISTER_LOCATION' 
		    AND (m.`THRU_DATE` > NOW() OR m.THRU_DATE IS NULL)
	LEFT JOIN POSTAL_ADDRESS addr 
		    ON m.`CONTACT_MECH_ID` = addr.`CONTACT_MECH_ID` 	    
	 WHERE t.`PARTY_TYPE_ID`='VIP_CORPORATION' 
	<if test="entId != null and entId !='' " >
	   And t.`PARTY_ID`=#{entId}
	</if>
	<if test="partyCode != null and partyCode !='' " >
	   And t.`PARTY_CODE`=#{partyCode}
	</if>
	<if test="name != null and name !='' " >
	   AND t2.`GROUP_NAME` LIKE CONCAT('%',#{name},'%')
	</if>
	<if test="accountPeriodStatus != null " >
	   And t2.`ACCOUNT_PERIOD_STATUS` = #{accountPeriodStatus}
	</if>
	 <if test="corCategory != null and corCategory !='' " >
	   And a.`ATTR_VALUE` =#{corCategory}
	</if> 
	<if test="corCategoryOther != null and corCategoryOther !='' " >
	   And aa.`ATTR_VALUE` =#{corCategoryOther}
	</if> 
	<if test="province != null and province !='' " >
	   And addr.`PROVINCE_GEO_ID`=#{province}
	</if>
	<if test="city != null and city !='' " >
	   And addr.`CITY_GEO_ID`=#{city}
	</if>
	<if test="county != null and county !='' " >
	   And addr.`COUNTY_GEO_ID`=#{county}
	</if>
	<if test="verifyStatus != null  " >
	   And t2.`VERIFY_STATUS_ID` =#{verifyStatus}
	</if>
	<if test="accountStatus != null " >
	   And t2.`ACCOUNT_STATUS` =#{accountStatus}
	</if>
	<if test="applyDateStart != null and applyDateStart !='' " >
	   And t2.APPROVED_DATE >= DATE_FORMAT(concat(#{applyDateStart},' 00:00:00'),'%Y-%m-%d %H:%i:%s')
	</if>
	<if test="applyDateEnd != null and applyDateEnd !='' " >
	   <![CDATA[ And t2.APPROVED_DATE <= DATE_FORMAT(concat(#{applyDateEnd},' 23:59:59'),'%Y-%m-%d %H:%i:%s')]]> 
	</if>
	<if test="orgLimitStart != null and orgLimitStart !='' " >
		And ((d.`ATTR_VALUE` >= DATE_FORMAT(concat(#{orgLimitStart},' 00:00:00'),'%Y-%m-%d %H:%i:%s'))
		  or(e.`ATTR_VALUE` >= DATE_FORMAT(concat(#{orgLimitStart},' 00:00:00'),'%Y-%m-%d %H:%i:%s'))
		   or(f.`ATTR_VALUE` >= DATE_FORMAT(concat(#{orgLimitStart},' 00:00:00'),'%Y-%m-%d %H:%i:%s'))
		  )
		
	</if>
	<if test="orgLimitEnd != null and orgLimitEnd !='' " >
		<![CDATA[ And ((d.`ATTR_VALUE` <= DATE_FORMAT(concat(#{orgLimitEnd},' 00:00:00'),'%Y-%m-%d %H:%i:%s'))
		or(e.`ATTR_VALUE` <= DATE_FORMAT(concat(#{orgLimitEnd},' 23:59:59'),'%Y-%m-%d %H:%i:%s'))
		or(f.`ATTR_VALUE` <= DATE_FORMAT(concat(#{orgLimitEnd},' 23:59:59'),'%Y-%m-%d %H:%i:%s'))
		)
		]]> 
	</if> 
	 <if test="activeTypeList != null and activeTypeList.size !=0">
	         AND 
	        <foreach collection="activeTypeList" item="ids" index="index" open="(" close=")" separator="or">
	           FIND_IN_SET(#{ids},b.ATTR_VALUE)
	           <if test="ids == 1008" >
				   AND c.`ATTR_VALUE` LIKE CONCAT(#{industryOther}, '%')
	           </if>
	        </foreach>
      </if>
	
	ORDER BY t2.`CREATED_DATE` DESC
  </select>  
  <!-- 企业账户审核列表 -->
  <select id="getAccountApplyList" resultType="com.yikuyi.party.contact.vo.EnterpriseVo" parameterType="com.yikuyi.party.contact.vo.EnterpriseParamVo">
	SELECT
	    t.`PARTY_ID` AS id,
	    t.`CORPORATION_ID` AS corporationId,
		t5.`PARTY_CODE` AS partyCode,
		t1.`GROUP_NAME` AS NAME,
		t.`STATUS_ID` AS STATUS,
		t1.`VERIFY_STATUS_ID` AS activeStatus,
		IFNULL(t1.`ACCOUNT_STATUS`,'ACCOUNT_NOT_VERIFIED') AS accountStatus,
		IFNULL(t2.`ACCOUNT_TYPE`,'COMMON') AS accountsStatus,
		t2.`MAIL` AS mail,
		t2.`LAST_NAME_LOCAL` AS contactUserName,
		t1.`APPLY_DATE` AS applyDate,
		t1.`APPROVED_DATE` AS approvedDate, 
		t.`CREATED_DATE` AS regTime, 
		t2.`TEL` AS contactUserTel,
		tt.lastLoginTime AS lastLoginTime,
		t9.`PARTY_ID_TO` as vipId
		
	FROM PARTY t  LEFT JOIN PARTY_GROUP t1 ON t.`CORPORATION_ID` = t1.`PARTY_ID`  
	              INNER JOIN `PERSON` t2 ON t.`PARTY_ID` = t2.`PARTY_ID`
		          
	              LEFT JOIN PARTY t5 ON t5.PARTY_ID = t.CORPORATION_ID
	              
	              LEFT JOIN PARTY_RELATIONSHIP t9 ON t9.`PARTY_ID_FROM` = t.`CORPORATION_ID` 
	                AND (t9.`THRU_DATE` > NOW() OR t9.THRU_DATE IS NULL) AND
	                 t9.`PARTY_RELATIONSHIP_TYPE_ID`='ENTERPRISE_CERTIFIED'
	  LEFT JOIN (SELECT t8.`PARTY_ID` ,MAX(t8.`LAST_UPDATE_DATE` ) AS lastLoginTime FROM `USER_LOGIN` t8 WHERE t8.`ENABLED` ='Y' GROUP BY t8.`PARTY_ID` ) AS tt ON t.party_id = tt.party_id
	              INNER JOIN `PARTY_ROLE` t6 ON t6.`PARTY_ID` = t.`PARTY_ID` AND t6.`ROLE_TYPE_ID` ='ENTERPRISE_CUST'
	    WHERE (t.`CORPORATION_ID` IS NOT NULL OR t.`PARTY_TYPE_ID`='PERSON')
	    AND t.`CORPORATION_ID` != '99999999'
	<if test="partyCode != null and partyCode !=''" >
	   And t5.`PARTY_CODE`=#{partyCode}
	</if>
	<if test="name != null and name !=''" >
	   And t1.`GROUP_NAME` LIKE CONCAT('%',#{name},'%')
	</if>
	<if test="contactUserName != null and contactUserName !=''" >
	   And t2.`LAST_NAME_LOCAL` LIKE CONCAT(#{contactUserName}, '%')
	</if>
	<if test="status != null" >
	   And t.`STATUS_ID` =#{status}
	</if>
	<if test="contactUserTel != null and contactUserTel !=''" >
	   And t2.`TEL` =#{contactUserTel}
	</if>
	<if test="mail != null and mail !=''" >
	   And t2.`MAIL`=#{mail}
	</if>
	<if test="verifyStatus != null" >
	   And t1.`VERIFY_STATUS_ID` =#{verifyStatus}
	</if>
	<if test="accountsStatus != null" >
	   And t2.`ACCOUNT_TYPE` =#{accountsStatus}
	</if>
	<if test="accountStatus != null" >
	   And t1.`ACCOUNT_STATUS` =#{accountStatus}
	</if>
	<if test="applyDateStart != null and applyDateStart !=''" >
	   And t1.`APPLY_DATE` >= DATE_FORMAT(concat(#{applyDateStart},' 00:00:00'),'%Y-%m-%d %H:%i:%s')
	</if>
	<if test="applyDateEnd != null and applyDateEnd !=''" >
	   <![CDATA[ And t1.`APPLY_DATE` <= DATE_FORMAT(concat(#{applyDateEnd},' 23:59:59'),'%Y-%m-%d %H:%i:%s')]]> 
	</if>
	<if test="approvedDateStart != null and approvedDateStart !=''" >
	   And t1.`APPROVED_DATE` >= DATE_FORMAT(concat(#{approvedDateStart},' 00:00:00'),'%Y-%m-%d %H:%i:%s')
	</if>
	<if test="approvedDateEnd != null and approvedDateEnd !=''" >
	   <![CDATA[ And t1.`APPROVED_DATE` <= DATE_FORMAT(concat(#{approvedDateEnd},' 23:59:59'),'%Y-%m-%d %H:%i:%s')]]> 
	</if>
	<if test="registerStart != null and registerStart !=''" >
	   And t.`CREATED_DATE` >= DATE_FORMAT(concat(#{registerStart},' 00:00:00'),'%Y-%m-%d %H:%i:%s')
	</if>
	<if test="registerEnd != null and registerEnd !=''" >
	   <![CDATA[ And t.`CREATED_DATE` <= DATE_FORMAT(concat(#{registerEnd},' 23:59:59'),'%Y-%m-%d %H:%i:%s')]]> 
	</if>
	<if test="lastLoginStart != null and lastLoginStart !=''" >
	   And tt.lastLoginTime >= DATE_FORMAT(concat(#{lastLoginStart},' 00:00:00'),'%Y-%m-%d %H:%i:%s')
	</if>
	<if test="lastLoginEnd != null and lastLoginEnd !=''" >
	   <![CDATA[ And tt.lastLoginTime <= DATE_FORMAT(concat(#{lastLoginEnd},' 23:59:59'),'%Y-%m-%d %H:%i:%s')]]> 
	</if>
	
	 <if test="activeTypeList != null and activeTypeList.size !=0">
			AND t1.VERIFY_STATUS_ID IN
	        <foreach collection="activeTypeList" item="ids" index="index" open="(" close=")" separator=",">
	            #{ids}
	        </foreach>
        </if>
         GROUP BY t.`PARTY_ID`
         ORDER BY t.`CREATED_DATE` DESC
  </select>
  
  <update id="updateStateId" parameterType="java.lang.String" > 
       UPDATE PARTY SET  STATUS_ID = #{statusId}  WHERE PARTY_ID = #{partyId}
    
  </update>
 
 <select id="getEnterpriseDocumentsExpiredList" resultMap="enterpriseExpiredMap">
  	 SELECT * FROM (
 		SELECT t.`PARTY_ID`, t.PARTY_CODE , t3.GROUP_NAME,
        	(SELECT t2.`ATTR_VALUE` FROM PARTY_ATTRIBUTE t2 WHERE t2.`PARTY_ID` = t.`PARTY_ID` AND t2.ATTR_NAME='ORG_LIMIT') AS ORG_LIMIT,
        	(SELECT t2.ATTR_VALUE FROM PARTY_ATTRIBUTE t2 WHERE t2.`PARTY_ID` = t.`PARTY_ID` AND t2.ATTR_NAME='HK_EFFECTIVE_DATE') AS HK_EFFECTIVE_DATE
  	    FROM PARTY t LEFT JOIN PARTY_GROUP t3 ON t.`PARTY_ID` = t3.`PARTY_ID` WHERE t.`PARTY_TYPE_ID` = 'VIP_CORPORATION' ) b
  	 WHERE (STR_TO_DATE(b.ORG_LIMIT,'%Y-%m-%d') = ADDDATE(DATE_FORMAT(NOW(),'%Y-%m-%d'),INTERVAL 7 DAY) OR 
	        STR_TO_DATE(b.HK_EFFECTIVE_DATE,'%Y-%m-%d') = ADDDATE(DATE_FORMAT(NOW(),'%Y-%m-%d'),INTERVAL 7 DAY))
  </select>
  
  
  <!-- 验证YKY客户编码的唯一性 -->
  <select id="getPartyCode" resultType="java.lang.String" parameterType="java.lang.String">
  	SELECT p.`PARTY_CODE` FROM PARTY p WHERE p.`PARTY_TYPE_ID` = 'VIP_CORPORATION' AND p.`PARTY_CODE` =#{partyCode} GROUP BY p.`PARTY_CODE`;
  </select>
  
  <select id="getEntCertificationList" resultType="com.yikuyi.party.contact.vo.EnterpriseVo"  parameterType="com.yikuyi.party.contact.vo.EnterpriseParamVo">
  	SELECT t.`PARTY_ID` AS id,
	       t.`PARTY_CODE` AS partyCode,
		   t2.`GROUP_NAME` AS NAME, 
		   t2.`CREDIT_COMMENTS` AS creditComments,
		   t2.`ACCOUNT_PERIOD_STATUS` AS accountPeriodStatus,
		   IFNULL(t2.`ACCOUNT_STATUS`,'ACCOUNT_NOT_VERIFIED') AS accountStatus,
		   t2.`VERIFY_STATUS_ID`AS activeStatus,
		   t2.APPROVED_DATE AS approvedDate,
           a.`ATTR_VALUE` AS corCategory,
           b.`ATTR_VALUE` AS industryCategory,
	       c.`ATTR_VALUE` AS otherAttr,
	       (CASE
		   WHEN g.`ATTR_VALUE` = '0' THEN d.`ATTR_VALUE`
		   WHEN g.`ATTR_VALUE` = '1' THEN e.`ATTR_VALUE` 
		   WHEN g.`ATTR_VALUE` = '2' THEN f.`ATTR_VALUE` 
		   END) AS orgLimit,
	 CONCAT(addr.`PROVINCE_GEO_NAME`,addr.`CITY_GEO_NAME`,addr.`COUNTY_GEO_NAME`) AS address,
	      aa.`ATTR_VALUE` AS corCategoryOther
	 FROM  `PARTY` t LEFT JOIN `PARTY_GROUP` t2 ON t.`PARTY_ID` = t2.`PARTY_ID` 
	  LEFT JOIN PARTY_ATTRIBUTE a 
		    ON t.`PARTY_ID` = a.`PARTY_ID` 
		    AND a.`ATTR_NAME` = 'CORPORATION_CATEGORY_ID' 
	  LEFT JOIN PARTY_ATTRIBUTE aa
	       ON t.`PARTY_ID` = aa.`PARTY_ID` 
	       AND aa.`ATTR_NAME` = 'CORPORATION_CATEGORY_ID_OTHER' 
	 LEFT JOIN PARTY_ATTRIBUTE b 
		    ON t.`PARTY_ID` = b.`PARTY_ID` 
		    AND b.`ATTR_NAME` = 'INDUSTRY_CATEGORY_ID' 
	 LEFT JOIN PARTY_ATTRIBUTE c 
		    ON t.`PARTY_ID` = c.`PARTY_ID` 
		    AND c.`ATTR_NAME` = 'INDUSTRY_CATEGORY_ID_OTHER' 
	 LEFT JOIN PARTY_ATTRIBUTE d 
		    ON t.`PARTY_ID` = d.`PARTY_ID` 
		    AND d.`ATTR_NAME` = 'ORG_LIMIT'
		 
	 LEFT JOIN PARTY_ATTRIBUTE e 
	    ON t.`PARTY_ID` = e.`PARTY_ID` 
	    AND e.`ATTR_NAME` = 'HK_EFFECTIVE_DATE'
	    
	 LEFT JOIN PARTY_ATTRIBUTE f
	    ON t.`PARTY_ID` = f.`PARTY_ID` 
	    AND f.`ATTR_NAME` = 'TW_FAX_SIGN_CDATE'
	    
	   LEFT JOIN PARTY_ATTRIBUTE g
	    ON t.`PARTY_ID` = g.`PARTY_ID` 
	    AND g.`ATTR_NAME` = 'REG_ADDR'  
	    
	LEFT JOIN PARTY_CONTACT_MECH m 
		    ON t.`PARTY_ID` = m.`PARTY_ID` 
		    AND m.`CONTACT_MECH_PURPOSE_TYPE_ID` = 'REGISTER_LOCATION' 
		    AND (m.`THRU_DATE` > NOW() OR m.THRU_DATE IS NULL)
	LEFT JOIN POSTAL_ADDRESS addr 
		    ON m.`CONTACT_MECH_ID` = addr.`CONTACT_MECH_ID` 	    
	 WHERE t.`PARTY_TYPE_ID`='VIP_CORPORATION' 
	
	 <if test="corCategory != null and corCategory !='' " >
	   And a.`ATTR_VALUE` =#{corCategory}
	</if> 
	<if test="province != null and province !='' " >
	   And addr.`PROVINCE_GEO_ID`=#{province}
	</if>
	ORDER BY t2.`CREATED_DATE` DESC
  </select>
  
  <select id="getPartyCarrierList" resultType="com.yikuyi.party.vo.PartyCarrierVo" parameterType="com.yikuyi.party.vo.PartyCarrierParamVo" >
  		SELECT p.`PARTY_ID` AS partyId,
  		p.`PARTY_TYPE_ID` AS partyTypeId,
  		p.`CREATOR` AS creator,
  		p.`STATUS_ID` AS partyStatus,
  		g.`GROUP_NAME` AS groupName,
  		g.`CREATED_DATE` AS createDate,
  		g.`LAST_UPDATE_DATE` AS lastUpdateDate
  		FROM PARTY p LEFT JOIN PARTY_GROUP g ON p.`PARTY_ID` = g.`PARTY_ID` WHERE p.`PARTY_TYPE_ID`='CARRIER'
  		 <if test="groupName != null and groupName !='' " >
		   And g.`GROUP_NAME` LIKE CONCAT(#{groupName}, '%')
		 </if> 
		 <if test="partyStatus != null " >
		   And p.`STATUS_ID` =#{partyStatus}
		 </if> 
  		 <if test="createDateStart != null and createDateStart !=''" >
		   And g.`CREATED_DATE` >= DATE_FORMAT(concat(#{createDateStart},' 00:00:00'),'%Y-%m-%d %H:%i:%s')
		 </if>
		 <if test="createDateEnd != null and createDateEnd !=''" >
		   <![CDATA[ And g.`CREATED_DATE` <= DATE_FORMAT(concat(#{createDateEnd},' 23:59:59'),'%Y-%m-%d %H:%i:%s')]]> 
		 </if>
		 <if test="lastUpdateDateStart != null and lastUpdateDateStart !=''" >
		   And g.`LAST_UPDATE_DATE` >= DATE_FORMAT(concat(#{lastUpdateDateStart},' 00:00:00'),'%Y-%m-%d %H:%i:%s')
		 </if>
		 <if test="lastUpdateDateStart != null and lastUpdateDateStart !=''" >
		   <![CDATA[ And g.`LAST_UPDATE_DATE` <= DATE_FORMAT(concat(#{lastUpdateDateStart},' 23:59:59'),'%Y-%m-%d %H:%i:%s')]]> 
		 </if>
		 ORDER BY g.`LAST_UPDATE_DATE` DESC
  </select>
  
  
  <select id="getPartyCarriorVoInfo" resultType="com.yikuyi.party.vo.PartyCarrierVo" parameterType="java.lang.String" >
  		SELECT p.`PARTY_ID` AS partyId,
  		p.`PARTY_TYPE_ID` AS partyTypeId,
  		p.`CREATOR` AS creator,
  		p.`STATUS_ID` AS partyStatus,
  		g.`GROUP_NAME` AS groupName,
  		g.`CREATED_DATE` AS createDate,
  		g.`LAST_UPDATE_DATE` AS lastUpdateDate
  		FROM PARTY p LEFT JOIN PARTY_GROUP g ON p.`PARTY_ID` = g.`PARTY_ID` WHERE p.`PARTY_TYPE_ID`='CARRIER'
  		AND p.`PARTY_ID`=#{partyId};
   
  </select>
  
  	
  	<!-- 根据企业Id查询相应的企业信息，包括账期信息 -->
    <select id="getPartyByCorporationId" resultMap="BaseResultMap" >
  	 SELECT t.`PARTY_ID`,
  	 		t.`STATUS_ID`,
  	 		t.`CORPORATION_ID`,
  	 		t1.`GROUP_NAME`,
  	 		t1.`LOGO_IMAGE_URL`,
  	 		t.`PARTY_TYPE_ID`,
     		t1.`VERIFY_STATUS_ID`,
     		t1.`ACCOUNT_STATUS`,
     		t1.`COMMENTS`,
     		t.`PARTY_CODE`,
     		t1.`ACCOUNT_PERIOD_STATUS`,
     		t1.`CREDIT_COMMENTS`
     		FROM  `PARTY` t LEFT JOIN `PARTY_GROUP` t1 ON t.`PARTY_ID` = t1.`PARTY_ID` 
     <where>
       <if test="corporationId != null and corporationId != ''" >
          AND  t.`CORPORATION_ID` = #{corporationId,jdbcType=VARCHAR}
       </if>
       <if test="partyType != null" >
          AND t.`PARTY_TYPE_ID`=#{partyType}
       </if>
       <if test="accountPeriodStatus != null" >
          AND t1.`ACCOUNT_PERIOD_STATUS`=#{accountPeriodStatus}
       </if>
      </where>
   
  </select>
  
  
  <!-- 查询enterpriseVo -->
  <select id="getEnterpriseVoInfo" resultType="com.yikuyi.party.contact.vo.EnterpriseVo" parameterType="java.lang.String"  >
    SELECT 
           a.`ATTR_VALUE` AS corCategory,
           b.`ATTR_VALUE` AS industryCategory
	 FROM  `PARTY` t 
	 LEFT JOIN PARTY_ATTRIBUTE a 
	    ON t.`PARTY_ID` = a.`PARTY_ID` 
		    AND a.`ATTR_NAME` = 'CORPORATION_CATEGORY_ID' 
	 
	 LEFT JOIN PARTY_ATTRIBUTE b 
		    ON t.`PARTY_ID` = b.`PARTY_ID` 
		    AND b.`ATTR_NAME` = 'INDUSTRY_CATEGORY_ID'     
	 WHERE t.`PARTY_TYPE_ID`='VIP_CORPORATION' 
	 AND t.`PARTY_ID` = #{partyId}
	
  </select>  

  <delete id="deleteByPartyId" parameterType="java.lang.String"> 
         DELETE FROM PARTY WHERE PARTY_ID = #{partyId}
  </delete>
   
</mapper>