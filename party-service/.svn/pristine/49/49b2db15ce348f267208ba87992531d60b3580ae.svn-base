package com.yikuyi.party.userLogin.api.impl;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.yikuyi.party.contact.vo.UserVo;
import com.yikuyi.party.login.model.UserLogin;
import com.yikuyi.party.userLogin.api.IUserLoginResource;
import com.yikuyi.party.userLogin.bll.UserLoginManager;

/**
 * 定义收货地址的相关接口
 * 
 * @author zr.aoxianbing@yikuyi.com
 *
 */

@RestController
@RequestMapping("v1/account")
public class UserLoginResource implements IUserLoginResource {

	@Autowired
	private UserLoginManager userLoginManager;

	/**
	 * 根据账号判断是否存在（手机、邮箱）
	 * 
	 * @param account
	 * @return
	 * @since 2017年1月12日
	 * @author zr.aoxianbing@yikuyi.com
	 */
	@Override
	@RequestMapping(value = "/{account}", method = RequestMethod.GET)
	public Boolean isExist(@PathVariable("account") String account) {
		return userLoginManager.isExist(account);
	}

	/**
	 * 根据账号判断是否存在（手机、邮箱）
	 * 
	 * @param account
	 * @return
	 * @since 2017年1月12日
	 * @author zr.aoxianbing@yikuyi.com
	 */
	@Override
	@RequestMapping(value = "/mail", method = RequestMethod.GET)
	public Boolean getAccount(@RequestParam(value = "account", required = true) String account) {
		return userLoginManager.getAccount(account);
	}

	/**
	 * 初始化密码
	 * 
	 * @param account
	 * @return
	 * @since 2017年1月12日
	 * @author zr.aoxianbing@yikuyi.com
	 */
	@Override
	@RequestMapping(value = "/{account}", method = RequestMethod.PUT)
	public UserVo initPassWord(@RequestBody UserVo userVo) {
		return userLoginManager.initPassWord(userVo);
	}

	/**
	 * 根据账号id查询用户
	 * 
	 * @param account
	 * @return
	 * @since 2017年1月12日
	 * @author zr.aoxianbing@yikuyi.com
	 */
	@Override
	@RequestMapping(value = "/id", method = RequestMethod.GET)
	public UserLogin getAccountById(@RequestParam("account") String account) {
		return userLoginManager.getAccountById(account);
	}

	/**
	 * 根据partyid和类型查询用户
	 * 
	 * @param account
	 * @return
	 * @since 2017年1月12日
	 * @author zr.aoxianbing@yikuyi.com
	 */
	@Override
	@RequestMapping(value = "/user", method = RequestMethod.GET)
	public String getAccountByIdAndType(@RequestParam("id") String id, @RequestParam("type") String type) {
		return userLoginManager.getAccountByIdAndType(id, type);
	}

}
