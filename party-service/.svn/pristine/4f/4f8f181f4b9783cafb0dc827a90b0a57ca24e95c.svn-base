package com.yikuyi.party.acl.bll;

import java.util.List;
import java.util.Set;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cache.annotation.Cacheable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.yikuyi.party.enterprise.bll.EnterpriseManager;
import com.yikuyi.party.model.Party;
import com.yikuyi.party.party.dao.PartyPermissionDao;
import com.yikuyi.party.party.dao.PartyRoleDao;
import com.yikuyi.party.role.model.RoleType;
import com.yikuyi.party.vo.RoleTypeVo;

/**
 * @author tangr
 *
 */
@Service
@Transactional
public class ACLManager {

	@Autowired
	private PartyRoleDao partyRoleDao;
	
	@Autowired
	private PartyPermissionDao partyPermissionDao;
	
	@Autowired
	private EnterpriseManager enterpriseManager;
	
    /**
     * 获取当前用户所有的角色数据
     * @param user
     * @return
     * @author tangrong@yikuyi.com
     */
	@Cacheable(value="userShiroAuthorityInfoCache", key="'roles-user-[' + #partyId + ']'")
    public Set<String> getUserRoleList(String partyId){
    	return partyRoleDao.findRoleByPartyId(partyId);
    }
    
    
	/**12
	  * 获取当前用户所有权限数据
	  * @param user
	  * @return
	  * @author tangrong@yikuyi.com
	  */
	@Cacheable(value="userShiroAuthorityInfoCache",key="'permissions-user-[' + #partyId + ']'")
	 public Set<String> getUserPermissionList(String partyId){
		 String partyGroupId = partyId;
		 Party party = enterpriseManager.getPartyGroupByEmployeeId(partyId);
		 if(party!= null && party.getId() !=null){
			 partyGroupId = party.getId();
		 }
		 return partyPermissionDao.findPermissionByPartyId(partyGroupId, partyId);
	 }

	/**
	 * 根据角色id查询用户
	 * @param role
	 * @return
	 * @since 2017年2月28日
	 * @author zr.aoxianbing@yikuyi.com
	 */
	public List<Party> getUserByRole(String role) {
		return partyRoleDao.getUserByRole(role);
	}
	
	/**
	 * 查询用户菜单角色
	 * @param role
	 * @return
	 * @since 2017年4月17日
	 * @author zr.helinmei@yikuyi.com
	 */
	public List<RoleTypeVo> getMenuRole(RoleType roleType) {
		return partyRoleDao.getMenuRole(roleType);
		
	}
}