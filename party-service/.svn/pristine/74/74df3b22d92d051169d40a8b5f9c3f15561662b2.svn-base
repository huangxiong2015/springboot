package com.yikuyi.party.acl.bll;

import static org.junit.Assert.assertTrue;

import java.util.ArrayList;
import java.util.List;
import java.util.Set;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.annotation.Rollback;
import org.springframework.test.context.TestExecutionListeners;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.test.context.support.DependencyInjectionTestExecutionListener;
import org.springframework.test.context.support.DirtiesContextTestExecutionListener;
import org.springframework.transaction.annotation.Transactional;

import com.github.springtestdbunit.TransactionDbUnitTestExecutionListener;
import com.github.springtestdbunit.annotation.DatabaseOperation;
import com.github.springtestdbunit.annotation.DatabaseSetup;
import com.yikuyi.party.model.Party;
import com.yikuyi.party.vo.RoleTypeVo;
import com.yikuyi.party.vo.RoleVo;

@RunWith(SpringRunner.class)
@SpringBootTest
@TestExecutionListeners({ DependencyInjectionTestExecutionListener.class, DirtiesContextTestExecutionListener.class,
		TransactionDbUnitTestExecutionListener.class })
@Transactional
@Rollback
public class ACLManagerTest {

	@Autowired
	private ACLManager aclManager;

	@Test
	@DatabaseSetup(type = DatabaseOperation.REFRESH, value = "party_role_sample.xml")
	public void testGetUserRoleList() {
		Set<String> roles = aclManager.getUserRoleList("123456");
		assertTrue(roles.size() > 0);
	}

	@Test
	@DatabaseSetup(type = DatabaseOperation.REFRESH, value = "party_permission_sample.xml")
	public void testGetUserPermissionList() {
		Set<String> pers = aclManager.getUserPermissionList("123456789-01");
		assertTrue(pers.size() > 0);
	}

	@Test
	@DatabaseSetup(type = DatabaseOperation.REFRESH, value = "party_permission_sample.xml")
	public void testGetUserByRole() {
		List<Party> list = aclManager.getUserByRole("SUPPLIER");
		assertTrue(list.size() > 0);
	}

	@Test
	@DatabaseSetup(type = DatabaseOperation.REFRESH, value = "party_permission_sample.xml")
	public void testGetMenuRole() {
		List<RoleTypeVo> list = aclManager.getMenuRole("SUPPLIER");
		assertTrue(list.size() > 0);
	}

	@Test
	public void testAddRoelMenuRelaction() throws Exception{
		RoleVo vo = new RoleVo();
		vo.setMenuType("1");
		vo.setMenuPower("1");
		vo.setMenuId("1");
		List<String> list = new ArrayList<>();
		list.add("1");
	    vo.setRoleIdList(list);
		aclManager.addRoelMenuRelaction(vo);
	}
}
