<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yikuyi.party.party.dao.PartyDao">
   <resultMap id="BaseResultMap" type="com.yikuyi.party.model.Party" >
    <id column="PARTY_ID" property="id" jdbcType="VARCHAR" />
    <result column="PARTY_TYPE_ID" property="partyType" jdbcType="VARCHAR" />
    <result column="PARTY_CODE" property="partyCode" jdbcType="VARCHAR" />
    <result column="EXTERNAL_ID" property="externalId" jdbcType="VARCHAR" />
    <result column="STATUS_ID" property="partyStatus" jdbcType="VARCHAR" />
    <result column="IS_SYSTEM" property="isSystem" jdbcType="CHAR" />
    <result column="CREATED_DATE" property="createdDate" jdbcType="TIMESTAMP" />
<!--     <result column="CREATED_BY_USER_LOGIN" property="createdByUserLogin" jdbcType="VARCHAR" /> -->
  <!--   <result column="LAST_MODIFIED_DATE" property="lastModifiedDate" jdbcType="TIMESTAMP" />
    <result column="LAST_MODIFIED_BY_USER_LOGIN" property="lastModifiedByUserLogin" jdbcType="VARCHAR" /> -->
    <result column="CREATOR" property="creator" jdbcType="VARCHAR" />
    <result column="CORPORATION_ID" property="corporationId" />
    <result column="LAST_UPDATE_USER" property="lastUpdateUser" jdbcType="VARCHAR" />
    <result column="LAST_UPDATE_DATE" property="lastUpdateDate" jdbcType="TIMESTAMP" />
     <association property="partyGroup" javaType="com.yikuyi.party.group.model.PartyGroup"> 
      <result column="GROUP_NAME" property="groupName" jdbcType="VARCHAR" />
      <result column="LOGO_IMAGE_URL" property="logoImageUrl" jdbcType="VARCHAR" />
       <result column="VERIFY_STATUS_ID" property="activeStatus" jdbcType="VARCHAR" />
        <result column="ACCOUNT_STATUS" property="accountStatus" jdbcType="VARCHAR" />
    </association>
     <association property="person" javaType="com.yikuyi.party.person.model.Person"> 
      <result column="LAST_NAME_LOCAL" property="lastNameLocal"/>
    </association>
    
  </resultMap>
  
<!--   添加供应商信息 -->
  <insert id="insert" parameterType="com.yikuyi.party.model.Party" >
    insert into PARTY
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        PARTY_ID,
      </if>
      <if test="partyType != null" >
        PARTY_TYPE_ID,
      </if>
      <if test="partyCode != null" >
        PARTY_CODE,
      </if>
      <if test="externalId != null" >
        EXTERNAL_ID,
      </if>
      <if test="partyStatus != null" >
        STATUS_ID,
      </if>
      <if test="isSystem != null" >
        IS_SYSTEM,
      </if>
      <if test="createdDate != null" >
        CREATED_DATE,
      </if>
      <!--<if test="createdByUserLogin != null" >
        CREATED_BY_USER_LOGIN,
      </if>
       <if test="lastModifiedDate != null" >
        LAST_MODIFIED_DATE,
      </if>
      <if test="lastModifiedByUserLogin != null" >
        LAST_MODIFIED_BY_USER_LOGIN,
      </if> -->
      <if test="creator != null" >
        CREATOR,
      </if>
      <if test="lastUpdateUser != null" >
        LAST_UPDATE_USER,
      </if>
      <if test="lastUpdateDate != null" >
        LAST_UPDATE_DATE,
      </if>
      <if test="description != null" >
        DESCRIPTION,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="partyType != null" >
        #{partyType,jdbcType=VARCHAR},
      </if>
      <if test="partyCode != null" >
        #{partyCode,jdbcType=VARCHAR},
      </if>
      <if test="externalId != null" >
        #{externalId,jdbcType=VARCHAR},
      </if>
      <if test="partyStatus != null" >
        #{partyStatus,jdbcType=VARCHAR},
      </if>
      <if test="isSystem != null" >
        #{isSystem,jdbcType=CHAR},
      </if>
      <if test="createdDate != null" >
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <!--<if test="createdByUserLogin != null" >
        #{createdByUserLogin,jdbcType=VARCHAR},
      </if>
       <if test="lastModifiedDate != null" >
        #{lastModifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifiedByUserLogin != null" >
        #{lastModifiedByUserLogin,jdbcType=VARCHAR},
      </if> -->
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateUser != null" >
        #{lastUpdateUser,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateDate != null" >
        #{lastUpdateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null" >
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  
   <update id="updateParty" parameterType="com.yikuyi.party.model.Party" >
    update PARTY 
     <set >
      <if test="partyType != null" >
        PARTY_TYPE_ID = #{partyType,jdbcType=VARCHAR},
      </if>
      <if test="partyCode != null" >
       PARTY_CODE = #{partyCode,jdbcType=VARCHAR},
      </if>
      <if test="externalId != null" >
       EXTERNAL_ID = #{externalId,jdbcType=VARCHAR},
      </if>
      <if test="partyStatus != null" >
       STATUS_ID = #{partyStatus,jdbcType=VARCHAR},
      </if>
      <if test="isSystem != null" >
      IS_SYSTEM =  #{isSystem,jdbcType=CHAR},
      </if>
      <if test="createdDate != null" >
       CREATED_DATE = #{createdDate,jdbcType=TIMESTAMP},
      </if>
     <!-- <if test="createdByUserLogin != null" >
       CREATED_BY_USER_LOGIN = #{createdByUserLogin,jdbcType=VARCHAR},
      </if>
       <if test="lastModifiedDate != null" >
       LAST_MODIFIED_DATE = #{lastModifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifiedByUserLogin != null" >
       LAST_MODIFIED_BY_USER_LOGIN = #{lastModifiedByUserLogin,jdbcType=VARCHAR},
      </if> -->
      <if test="creator != null" >
       CREATOR = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateUser != null" >
       LAST_UPDATE_USER = #{lastUpdateUser,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateDate != null" >
       LAST_UPDATE_DATE =  #{lastUpdateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null" >
       DESCRIPTION =  #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="corporationId != null" >
        CORPORATION_ID =  #{corporationId},
      </if>
    </set>
    where  PARTY_ID = #{id,jdbcType=VARCHAR}
  </update>
  
  
  <select id="getPartyDetail" resultMap="BaseResultMap" parameterType="java.lang.String">
     SELECT t.PARTY_ID,t.`STATUS_ID`,t.CORPORATION_ID,t1.`GROUP_NAME`,t1.`LOGO_IMAGE_URL`,t1.VERIFY_STATUS_ID,t1.ACCOUNT_STATUS FROM  `PARTY` t LEFT JOIN `PARTY_GROUP` t1 ON t.`PARTY_ID` = t1.`PARTY_ID` AND t.`PARTY_TYPE_ID`='PARTY_GROUP'
     where 1=1
       <if test="id != null and id != ''" >
        AND  t.PARTY_ID = #{id,jdbcType=VARCHAR}
       </if>
        <if test="name != null and name != ''" >
          AND t1.`GROUP_NAME` = RTRIM(LTRIM(#{name,jdbcType=VARCHAR})) 
          AND t1.VERIFY_STATUS_ID ='PARTY_VERIFIED'
       </if>
  </select>
  
  <select id="getPartyPersonDetail" resultMap="BaseResultMap" parameterType="java.lang.String">
	SELECT 
	  t.PARTY_ID,
	  t.`STATUS_ID`,
	  t1.`LAST_NAME_LOCAL`,
	  t.`CORPORATION_ID`
	FROM
	  `PARTY` t 
	  LEFT JOIN `PERSON` t1 
	    ON t.`PARTY_ID` = t1.`PARTY_ID` 
	    AND t.`PARTY_TYPE_ID` = 'PERSON' 
	WHERE t.PARTY_ID = #{id}
  </select>
  
  <resultMap id="getEnterpriseList" type="com.yikuyi.party.contact.vo.EnterpriseVo" >
    <id column="PARTY_ID" property="id" jdbcType="VARCHAR" />
    <result column="MAIL" property="mail" jdbcType="VARCHAR" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="COR_CATEGORY" property="corCategory" jdbcType="VARCHAR" />
    <result column="CONTACT_USER_NAME" property="contactUserName" jdbcType="VARCHAR" />
    <result column="CONTACT_USER_TEL" property="contactUserTel" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="VARCHAR" />
    <result column="VERIFY_STATUS" property="verifyStatus" jdbcType="VARCHAR" />
    <result column="REG_TIME" property="regTime" jdbcType="TIMESTAMP" />
    <result column="LAST_LOGIN_TIME" property="lastLoginTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <select id="getEnterpriseList" resultMap="getEnterpriseList" parameterType="com.yikuyi.party.contact.vo.EnterpriseParamVo">
	SELECT DISTINCT 
	  (a.`PARTY_ID`),
	  c.`PARTY_ID_FROM` AS `USER_ID`,
	  i.`USER_LOGIN_ID` AS `MAIL`,
	  b.`GROUP_NAME` AS `NAME`,
	  d.`ATTR_VALUE` AS `COR_CATEGORY`,
	  h.`ASK_FOR_NAME` AS `CONTACT_USER_NAME`,
	  h.`CONTACT_NUMBER` AS `CONTACT_USER_TEL`,
	  a.`STATUS_ID` AS `STATUS`,
	  b.`VERIFY_STATUS_ID` AS `VERIFY_STATUS`,
	  a.`CREATED_DATE` AS `REG_TIME`,
	  i.`LAST_UPDATE_DATE` AS 'LAST_LOGIN_TIME' 
	FROM
	  PARTY a 
	  INNER JOIN PARTY_GROUP b 
	    ON a.`PARTY_ID` = b.`PARTY_ID` 
	  INNER JOIN PARTY_RELATIONSHIP c 
	    ON a.`PARTY_ID` = c.`PARTY_ID_TO` 
	    AND c.`ROLE_TYPE_ID_FROM` = 'MAIN_ROLE' 
	    AND c.`ROLE_TYPE_ID_TO` = 'CORPORATION' 
	  LEFT JOIN PARTY_ATTRIBUTE d 
	    ON a.`PARTY_ID` = d.`PARTY_ID` 
	    AND d.`ATTR_NAME` = 'CORPORATION_CATEGORY_ID' 
	  LEFT JOIN PARTY_CONTACT_MECH e 
	    ON a.PARTY_ID = e.PARTY_ID 
	    AND e.CONTACT_MECH_PURPOSE_TYPE_ID = 'REGISTER_LOCATION' 
	    AND e.THRU_DATE IS NULL 
	  LEFT JOIN CONTACT_MECH f 
	    ON e.CONTACT_MECH_ID = f.CONTACT_MECH_ID 
	  LEFT JOIN POSTAL_ADDRESS g 
	    ON e.CONTACT_MECH_ID = g.CONTACT_MECH_ID 
	  LEFT JOIN TELECOM_NUMBER h 
	    ON e.CONTACT_MECH_ID = h.CONTACT_MECH_ID 
	    AND h.CONTACT_MECH_TYPE_ID = 'TELEPHONE' 
	  LEFT JOIN USER_LOGIN i 
	    ON c.`PARTY_ID_FROM` = i.`PARTY_ID`
	    AND i.`USER_LOGIN_METHOD` = 'EMAIL'
	WHERE a.`PARTY_TYPE_ID` = 'PARTY_GROUP' 
	  AND b.`VERIFY_STATUS_ID` = 'PARTY_VERIFIED'
	<if test="entId != null" >
	   And a.`PARTY_ID`=#{entId}
	</if>
	<if test="mail != null" >
	   And i.`USER_LOGIN_ID`=#{mail}
	</if>
	<if test="name != null" >
	   And b.`GROUP_NAME` LIKE CONCAT(#{name}, '%')
	</if>
	<if test="status != null" >
	   And a.`STATUS_ID`=#{status}
	</if>
	<if test="registerStart != null" >
	   And a.`CREATED_DATE` >= DATE_FORMAT(#{registerStart},'%Y-%m-%d %H:%i:%s')
	</if>
	<if test="registerEnd != null" >
	   <![CDATA[ And a.`CREATED_DATE` <= DATE_FORMAT(#{registerEnd},'%Y-%m-%d %H:%i:%s')]]> 
	</if>
	<if test="lastLoginStart != null" >
		And i.`LAST_UPDATE_DATE` >= DATE_FORMAT(#{lastLoginStart},'%Y-%m-%d %H:%i:%s')
	</if>
	<if test="lastLoginEnd != null" >
		<![CDATA[ And i.`LAST_UPDATE_DATE` <= DATE_FORMAT(#{lastLoginEnd},'%Y-%m-%d %H:%i:%s')]]> 
	</if> 
	ORDER BY a.`CREATED_DATE` DESC
  </select>
  
  <select id="getEntList" resultType="com.yikuyi.party.contact.vo.EnterpriseVo"  parameterType="com.yikuyi.party.contact.vo.EnterpriseParamVo"  >
	SELECT 
	  p.`PARTY_ID` AS id,
	  g.`GROUP_NAME` AS name,
	  a.`ATTR_VALUE` AS corCategory,
	  b.`ATTR_VALUE` AS industryCategory,
	  c.`ATTR_VALUE` AS otherAttr,
	  d.`ATTR_VALUE` AS webSite,
	  e.`ATTR_VALUE` AS description,
	  CASE WHEN f.`ATTR_VALUE`= '0' THEN '大陆'
	  WHEN f.`ATTR_VALUE`= '1' THEN '香港'
	  WHEN f.`ATTR_VALUE`= '2' THEN '其他'
	  ELSE '' END AS registeAddr,
	  
	  CONCAT(addr.`PROVINCE_GEO_NAME`,addr.`CITY_GEO_NAME`,addr.`COUNTY_GEO_NAME`,addr.`ADDRESS1`) AS address,
	  h.`ASK_FOR_NAME` AS contactUserName, 
	  h.`CONTACT_NUMBER` AS contactUserTel,
	  j.`CONTACT_NUMBER` AS fax,
	  i.`CONTACT_NUMBER` AS contactUserQQ
	FROM
	  PARTY p 
	  INNER JOIN PARTY_GROUP g 
	    ON p.`PARTY_ID` = g.`PARTY_ID` 
	  INNER JOIN PARTY_RELATIONSHIP r 
	    ON p.`PARTY_ID` = r.`PARTY_ID_TO` 
	    AND r.`ROLE_TYPE_ID_FROM` = 'MAIN_ROLE' 
	    AND r.`ROLE_TYPE_ID_TO` = 'CORPORATION'
	    AND (r.`THRU_DATE` > NOW() OR r.THRU_DATE IS NULL)
	  LEFT JOIN USER_LOGIN l 
	    ON r.`PARTY_ID_FROM` = l.`PARTY_ID`
	    AND l.`USER_LOGIN_METHOD` = 'EMAIL'
	  LEFT JOIN PARTY_ATTRIBUTE a 
	    ON p.`PARTY_ID` = a.`PARTY_ID` 
	    AND a.`ATTR_NAME` = 'CORPORATION_CATEGORY_ID' 
	  LEFT JOIN PARTY_ATTRIBUTE b 
	    ON p.`PARTY_ID` = b.`PARTY_ID` 
	    AND b.`ATTR_NAME` = 'INDUSTRY_CATEGORY_ID' 
	  LEFT JOIN PARTY_ATTRIBUTE c 
	    ON p.`PARTY_ID` = c.`PARTY_ID` 
	    AND c.`ATTR_NAME` = 'INDUSTRY_CATEGORY_ID_OTHER' 
	  LEFT JOIN PARTY_ATTRIBUTE d 
	    ON p.`PARTY_ID` = d.`PARTY_ID` 
	    AND d.`ATTR_NAME` = 'WEBSITE_URL' 
	  LEFT JOIN PARTY_ATTRIBUTE e 
	    ON p.`PARTY_ID` = e.`PARTY_ID` 
	    AND e.`ATTR_NAME` = 'PARTY_BRIEF' 
	  LEFT JOIN PARTY_ATTRIBUTE f 
	    ON p.`PARTY_ID` = f.`PARTY_ID` 
	    AND f.`ATTR_NAME` = 'REG_ADDR' 
	  LEFT JOIN PARTY_CONTACT_MECH m 
	    ON p.`PARTY_ID` = m.`PARTY_ID` 
	    AND m.`CONTACT_MECH_PURPOSE_TYPE_ID` = 'REGISTER_LOCATION' 
	    AND (m.`THRU_DATE` > NOW() OR m.THRU_DATE IS NULL)
	  LEFT JOIN POSTAL_ADDRESS addr 
	    ON m.`CONTACT_MECH_ID` = addr.`CONTACT_MECH_ID` 
	  LEFT JOIN TELECOM_NUMBER k 
	    ON m.`CONTACT_MECH_ID` = k.`CONTACT_MECH_ID` 
	    AND k.CONTACT_MECH_TYPE_ID = 'MOBILE' 
	  LEFT JOIN TELECOM_NUMBER h 
	    ON m.`CONTACT_MECH_ID` = h.`CONTACT_MECH_ID` 
	    AND h.CONTACT_MECH_TYPE_ID = 'TELEPHONE' 
	  LEFT JOIN TELECOM_NUMBER i 
	    ON m.`CONTACT_MECH_ID` = i.`CONTACT_MECH_ID` 
	    AND i.CONTACT_MECH_TYPE_ID = 'QQ' 
	  LEFT JOIN TELECOM_NUMBER j 
	    ON m.`CONTACT_MECH_ID` = j.`CONTACT_MECH_ID` 
	    AND j.CONTACT_MECH_TYPE_ID = 'FAX' 
	  WHERE p.`PARTY_TYPE_ID` = 'PARTY_GROUP'
	  AND g.`VERIFY_STATUS_ID` = 'PARTY_VERIFIED'
	<if test="entId != null" >
	   And p.`PARTY_ID`=#{entId}
	</if>
	<if test="mail != null" >
	   And l.`USER_LOGIN_ID`=#{mail}
	</if>
	<if test="name != null" >
	   And g.`GROUP_NAME` LIKE CONCAT(#{name}, '%')
	</if>
	<if test="status != null" >
	   And p.`STATUS_ID`=#{status}
	</if>
	<if test="registerStart != null" >
	   And p.`CREATED_DATE` >= DATE_FORMAT(#{registerStart},'%Y-%m-%d %H:%i:%s')
	</if>
	<if test="registerEnd != null" >
	   <![CDATA[ And p.`CREATED_DATE` <= DATE_FORMAT(#{registerEnd},'%Y-%m-%d %H:%i:%s')]]> 
	</if>
	<if test="lastLoginStart != null" >
		And l.`LAST_UPDATE_DATE` >= DATE_FORMAT(#{lastLoginStart},'%Y-%m-%d %H:%i:%s')
	</if>
	<if test="lastLoginEnd != null" >
		<![CDATA[ And l.`LAST_UPDATE_DATE` <= DATE_FORMAT(#{lastLoginEnd},'%Y-%m-%d %H:%i:%s')]]> 
	</if> 
	ORDER BY p.`CREATED_DATE` DESC
  </select>  
  
   <select id="getPartyByCompanyName" resultMap="BaseResultMap" parameterType="java.lang.String">
     SELECT t.PARTY_ID FROM  `PARTY` t LEFT JOIN `PARTY_GROUP` t1 ON t.`PARTY_ID` = t1.`PARTY_ID` AND t.`PARTY_TYPE_ID`='PARTY_GROUP'
     where t1.PARTY_ID != #{id,jdbcType=VARCHAR}
       <if test="name != null and name != ''" >
          AND t1.`GROUP_NAME` = RTRIM(LTRIM(#{name,jdbcType=VARCHAR}))
       </if>
       
  </select>
  
    <resultMap id="getEnterpriseAccountsList" type="com.yikuyi.party.contact.vo.UserExtendVo" >
    <id column="PARTY_ID" property="id" jdbcType="VARCHAR" />
    <result column="MAIL" property="mail" jdbcType="VARCHAR" />
    <result column="ROLE_TYPE" property="roleType" jdbcType="VARCHAR" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="VARCHAR" />
    <result column="RELATION_STATUS" property="relationStatus" jdbcType="VARCHAR" />
    <result column="REG_TIME" property="regTime" jdbcType="TIMESTAMP" />
    <result column="LAST_LOGIN_TIME" property="lastLoginTime" jdbcType="TIMESTAMP" />
    <result column="LOGIN_COUNT" property="loginCount" jdbcType="VARCHAR" />
  </resultMap>
  <select id="getEnterpriseAccountsList" resultMap="getEnterpriseAccountsList" parameterType="java.lang.String">
	select 
	  d.`PARTY_ID`,
	  c.`USER_LOGIN_ID` AS `MAIL`,
	  a.`ROLE_TYPE_ID_FROM` AS `ROLE_TYPE`,
	  b.`LAST_NAME_LOCAL` AS `NAME`,
	  d.`STATUS_ID` AS `STATUS`,
	  b.`RELATION_STATUS_ID` AS `RELATION_STATUS`,
	  d.`CREATED_DATE` AS `REG_TIME`,
	  c.`LAST_UPDATE_DATE` AS `LAST_LOGIN_TIME`,
	  c.`SUCCEED_LOGINS` AS `LOGIN_COUNT`
	from
	  `PARTY_RELATIONSHIP` a 
	  LEFT JOIN PERSON b 
	    ON a.`PARTY_ID_FROM` = b.`PARTY_ID` 
	  left join USER_LOGIN c 
	    on a.`PARTY_ID_FROM` = c.`PARTY_ID` 
	    and c.`USER_LOGIN_METHOD` = 'EMAIL' 
	  left join PARTY d 
	    on a.`PARTY_ID_FROM` = d.`PARTY_ID` 
	where a.ROLE_TYPE_ID_TO = 'CORPORATION' 
	  and a.ROLE_TYPE_ID_FROM in ('EMPLOYEE', 'MAIN_ROLE') 
	  and a.PARTY_ID_TO = #{0} 
	order by ROLE_TYPE_ID_FROM desc
  </select>
  
</mapper>