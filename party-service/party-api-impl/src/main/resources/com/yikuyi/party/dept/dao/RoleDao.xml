<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yikuyi.party.dept.dao.RoleDao" >
   <resultMap id="BaseResultMap" type="com.yikuyi.party.vo.RoleVo" >
	    <id column="ROLE_TYPE_ID" property="id" jdbcType="VARCHAR" />
	    <result column="DESCRIPTION" property="name" jdbcType="VARCHAR" />
	    <result column="CREATED_DATE" property="createdDate" jdbcType="VARCHAR" />
	    <result column="LAST_UPDATE_DATE" property="lastUpdateDate" jdbcType="VARCHAR" />
	    <result column="CREATOR_ACCOUNT" property="account" jdbcType="VARCHAR" />
	    <collection property="deptVoList" ofType="com.yikuyi.party.vo.DeptVo"> 
	     <result column="PARTY_ID" property="id" jdbcType="VARCHAR"/>
	     <result column="GROUP_NAME" property="name" jdbcType="VARCHAR" />
	    </collection>
   </resultMap>
    
    <resultMap id="BaseResultMapInfo" type="com.yikuyi.party.vo.RoleVo" >
	    <id column="ROLE_TYPE_ID" property="id" jdbcType="VARCHAR" />
	    <result column="DESCRIPTION" property="name" jdbcType="VARCHAR" />
	    <result column="CREATED_DATE" property="createdDate" jdbcType="VARCHAR" />
	    <result column="LAST_UPDATE_DATE" property="lastUpdateDate" jdbcType="VARCHAR" />
	    <result column="CREATOR_ACCOUNT" property="account" jdbcType="VARCHAR" />
	    <collection property="deptVoList" ofType="com.yikuyi.party.vo.DeptVo"> 
	     <result column="PARTY_ID" property="id" jdbcType="VARCHAR"/>
	     <result column="GROUP_NAME" property="name" jdbcType="VARCHAR" />
	    </collection>
	    <collection property="menuList" ofType="java.lang.String"> 
	     <result column="PERMISSION_ID" jdbcType="VARCHAR"/>
	    </collection>
    </resultMap>
    
   
  <insert id="saveRoleType" parameterType="com.yikuyi.party.vo.RoleVo" >
    insert into ROLE_TYPE
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ROLE_TYPE_ID,
      </if>
      <if test="parentTypeId != null" >
        PARENT_TYPE_ID,
      </if>
      <if test="name != null" >
        DESCRIPTION,
      </if>
       <if test="account != null" >
        CREATOR_ACCOUNT,
      </if>
       <if test="creator != null" >
        CREATOR,
      </if>      
      <if test="createdDate != null" >
        CREATED_DATE,
      </if>
      <if test="lastUpdateUser != null" >
        LAST_UPDATE_USER,
      </if>
      <if test="lastUpdateDate != null" >
        LAST_UPDATE_DATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="parentTypeId != null" >
        #{parentTypeId,jdbcType=VARCHAR},
      </if>
       <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
       <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>    
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createdDate != null" >
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateUser != null" >
        #{lastUpdateUser,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateDate != null" >
        #{lastUpdateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  
  <insert id="saveSecurityRolePermission" parameterType="com.yikuyi.party.vo.RoleVo" >
  	INSERT INTO SECURITY_ROLE_PERMISSION (
	  `ROLE_TYPE_ID`,
	  `PERMISSION_ID`,
	  `PARTY_ID`,
	  `CREATOR`,
	  `CREATED_DATE`,
	  `LAST_UPDATE_USER`,
	  `LAST_UPDATE_DATE`
	)
	VALUES                
	 <foreach collection="menuList" item="item" index="index" separator="," >  
        (#{id},#{item},'99999999',#{creator},#{createdDate},#{lastUpdateUser},#{lastUpdateDate})  
    </foreach> 
  </insert>
  
    <insert id="securityRolePermissionSave" parameterType="com.yikuyi.party.vo.RoleVo" >
  	INSERT INTO SECURITY_ROLE_PERMISSION (
	  `ROLE_TYPE_ID`,
	  `PERMISSION_ID`,
	  `PARTY_ID`,
	  `CREATOR`,
	  `CREATED_DATE`,
	  `LAST_UPDATE_USER`,
	  `LAST_UPDATE_DATE`
	)
	VALUES                
	 <foreach collection="roleIdList" item="item" index="index" separator="," >  
        (#{item},#{menuId},#{partyId},#{creator},NOW(),#{lastUpdateUser},NOW())  
    </foreach> 
  </insert>
  
  <update id="updateRoleType" parameterType="com.yikuyi.party.vo.RoleVo">
	  UPDATE 
	  	ROLE_TYPE 
	  SET
	   <if test="parentTypeId != null" >
	  `PARENT_TYPE_ID` = #{parentTypeId},
	  </if>
	   <if test="name != null" >
	  `DESCRIPTION` = #{name},
	  </if>
	  <if test="account != null" >
	  `CREATOR_ACCOUNT` = #{account},
	  </if>
	  <if test="lastUpdateUser != null" >
	  `LAST_UPDATE_USER` = #{lastUpdateUser},
	  </if>
	  <if test="lastUpdateDate != null" >
	  `LAST_UPDATE_DATE` = #{lastUpdateDate}
	  </if> 
	WHERE `ROLE_TYPE_ID` = #{id} 
  </update>
  <delete id="roleDelete">
  	delete 
		from
		  SECURITY_ROLE_PERMISSION 
		where `ROLE_TYPE_ID` = #{id}
  </delete>  
  
  <select id="roleList" resultMap="BaseResultMap">
  	SELECT t1.`ROLE_TYPE_ID`, t1.`DESCRIPTION`,t3.`PARTY_ID`,t3.`GROUP_NAME`,t1.`CREATED_DATE`,t1.`LAST_UPDATE_DATE`,t1.`CREATOR_ACCOUNT`
	FROM 
	ROLE_TYPE t1 LEFT JOIN PARTY_RELATIONSHIP t2 ON t1.`ROLE_TYPE_ID`=t2.`PARTY_ID_FROM` AND t2.`PARTY_RELATIONSHIP_TYPE_ID`='ROLE_DEPT_REL'  
	LEFT JOIN PARTY_GROUP t3 ON t2.`PARTY_ID_TO`=t3.`PARTY_ID`
	
	WHERE (t2.`THRU_DATE` > NOW() OR t2.`THRU_DATE` IS NULL )
	AND t1.PARENT_TYPE_ID='OPERATION_FUNCTION'
	<if test="name!=null">
		AND t1.`DESCRIPTION` LIKE CONCAT(#{name}, '%') 
	</if>
	<if test="deptId!=null">
		AND t3.`PARTY_ID`=#{deptId} 
	</if>
	ORDER BY t1.`LAST_UPDATE_DATE` DESC
  </select>
  
  <select id="roleDetail" resultMap="BaseResultMapInfo">
	SELECT t1.`ROLE_TYPE_ID`, t1.`DESCRIPTION`,t1.`CREATED_DATE`,t1.`LAST_UPDATE_DATE`,t1.`CREATOR_ACCOUNT`,t3.`PARTY_ID`,t3.`GROUP_NAME`,SUBSTRING(t4.`PERMISSION_ID`,11) PERMISSION_ID
	FROM 
	ROLE_TYPE t1 LEFT JOIN PARTY_RELATIONSHIP t2 ON t1.`ROLE_TYPE_ID`=t2.`PARTY_ID_FROM` AND t2.`PARTY_RELATIONSHIP_TYPE_ID`='ROLE_DEPT_REL' 
	LEFT JOIN PARTY_GROUP t3 ON t2.`PARTY_ID_TO`=t3.`PARTY_ID`
	LEFT JOIN `SECURITY_ROLE_PERMISSION` t4 ON t1.`ROLE_TYPE_ID`=t4.`ROLE_TYPE_ID`
	WHERE (t2.`THRU_DATE` > NOW() OR t2.`THRU_DATE` IS NULL )
	AND t1.`ROLE_TYPE_ID`=#{id}
  </select>
  
  
  
  <select id="findRoleVoByDeptId" resultMap="BaseResultMapInfo">
		SELECT t1.`ROLE_TYPE_ID`, t1.`DESCRIPTION`,t1.`CREATED_DATE`,t1.`LAST_UPDATE_DATE`,t1.`CREATOR_ACCOUNT`,t3.`PARTY_ID`,t3.`GROUP_NAME`,SUBSTRING(t4.`PERMISSION_ID`,11) PERMISSION_ID
			FROM 
		ROLE_TYPE t1 LEFT JOIN PARTY_RELATIONSHIP t2 ON t1.`ROLE_TYPE_ID`=t2.`PARTY_ID_FROM` 
		LEFT JOIN PARTY_GROUP t3 ON t2.`PARTY_ID_TO`=t3.`PARTY_ID`
		AND t2.`PARTY_RELATIONSHIP_TYPE_ID`='ROLE_DEPT_REL'
		LEFT JOIN `SECURITY_ROLE_PERMISSION` t4 ON t1.`ROLE_TYPE_ID`=t4.`ROLE_TYPE_ID`
		WHERE (t2.`THRU_DATE` > NOW() OR t2.`THRU_DATE` IS NULL )
		AND t2.`PARTY_ID_TO`= getParentDeptId(#{deptId})
  </select>
  
  
  <delete id="deleteRoleByMenuId">
  		delete 
		from
		  SECURITY_ROLE_PERMISSION 
		where `PERMISSION_ID` = #{id}
  </delete>
</mapper>