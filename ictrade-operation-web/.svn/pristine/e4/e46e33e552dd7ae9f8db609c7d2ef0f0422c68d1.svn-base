/* 询价查询页 */

/*汇款异常原因输入*/
function desLen(){
			var val = $("#description")[0].value;
			$('#des')[0].innerHTML= val.length+'/100';
		}
		
	    function changeSize(count){
	    	showList.list.pageSize = count;
	    	showList.list.pageNum = 1;
	    	$(".condition_inquery")[0].click();
	    }
	    
	    /* search */
	    
	    var getParameters = function(){
        	var arr = ["orderNumber","status","payment","totalPriceBegin","totalPriceEnd","createDateBegin","createDateEnd",
        	           "account","paymentNo","currency","paymentBegin","paymentEnd"],
    		par ={};
    	
	    	for(var i=0; i< arr.length; i++){
	    		par[arr[i]] = decodeURI(getQueryString(arr[i]));
	    	}
	    	return par;
	    }
	    
	    var search = avalon.define({
	        $id: "search",
	        parameter: getParameters(),
	        goSearch:function(){
	        	var wrap = $("#searchFrom");
	        	var inputList = wrap.find("input"),
	        		selectList = wrap.find("select"),
	        		parStr = "?",
	        		par = getQueryString("type"),
	        		parObj = {};
	        	
	        	if(par)
	        		parObj["type"] = par;
	        	
	        	function toUrl(pArr){
	        		for(var k in pArr){
	        			console.log(k)
	        			parStr += k + "=" + pArr[k] +"&";
	        		}
	        	}
	        	$.each(inputList,function(i,input){
	        		var val = input.value;
	        		if(val !== ""){
	        			parObj[input.name] = encodeURI($.trim(input.value));
	        		}
	        	})
	        	console.log(selectList)
	        	$.each(selectList,function(i,select){
	        		var val = "",
	        			selectObj = $(select,"option:selected");
	        		console.log(selectObj.val());
	        		if(selectObj.val()){
	        			parObj[select.name] = select.value;	        			
	        		}
	        	})
	        	
	        	toUrl(parObj);
	        	parStr = parStr.substring(0,parStr.length-1);
	        	
	         	var str = "?"
	        	if(parStr != ""){
	        		str = "&"
	        	}
				
	        	window.location.href=window.location.pathname+parStr+str+"page=1&size="+showList.list.pageSize;//"+showList.list.pageNum+"
	        	
	        }
	    })
	
	 /*属性及函数定义，列表展示 */
	 var showList = avalon.define({
 	    $id: "list",
 	    list: [],
 	    toHtml: function(data){
			if(data=='undefined' || !data){
				return "--";
			}else{
				return data;
			}
		},
 	    paymentSelected: [{
				"value": ykyStatus.paymentStatus.WECHATPAY,
				"optionVal": "微信支付"
			},{
				"value": ykyStatus.paymentStatus.ALIPAY,
				"optionVal": "支付宝"
			},{
				"value": ykyStatus.paymentStatus.UNIONPAY_B2B,
				"optionVal": "在线支付（企业）"   //"企业网银支付"
			},{
				"value": ykyStatus.paymentStatus.UNIONPAY_B2C,
				"optionVal": "在线支付"   //"银联支付"
			},{
				"value": ykyStatus.paymentStatus.EXT_OFFLINE,
				"optionVal": "银行汇款"
			}],
		statusSelected: [{
				"value": ykyStatus.status.WAIT_PAID,
				"optionVal": "未支付"
			},{
				"value": ykyStatus.status.WAIT_APPROVE,
				"optionVal": "待审核"
			},{
				"value": ykyStatus.status.WAIT_SHIP,
				"optionVal": "待发货"
			},{
				"value": ykyStatus.status.WAIT_RECEIVE,
				"optionVal": "已发货"
			},{
				"value": ykyStatus.status.WAIT_CON_PSENT,
				"optionVal": "平台确认中"
			},{
				"value": ykyStatus.status.PSENT_RT_FAIL,
				"optionVal": "平台确认失败"
			},{
				"value": ykyStatus.status.PAY_FAILED,
				"optionVal": "支付失败"
			},{
				"value": ykyStatus.status.COMPLETED,
				"optionVal": "交易完成"
			},{
				"value": ykyStatus.status.CANCELLED,
				"optionVal": "交易关闭"
			},{
                "value": ykyStatus.status.REFUNDED,
                "optionVal": "已退款"
            }],
 	   	isLoading:"数据加载中...",
 	   	isfirst:true,
 	    allchecked: false,
 	   	audited:getQueryString("type"),
        checkAll: function (e) { //多选
           var checked = e.target.checked;
           showList.list.list.forEach(function (el) {
               el.checked = checked;
           })
        },
        checkOne: function (e) { //单个复选框
           var checked = e.target.checked
           if (checked === false) {
        	   showList.allchecked = false
           } else {//avalon已经为数组添加了ecma262v5的一些新方法
        	   showList.allchecked = showList.list.list.every(function (el) {
                   return el.checked
               })
           }
        },
        
      /*onChangSizeClick：改变列表展示的条数
       * index:条数
       *  */
        onChangSizeClick: function (index) {  
			changeSize(index);
		},
		
		/*auditClick:收款成功按钮，或者成功失败按钮
		 * el:循环当中的每一行数据
		 * e：当前事件对象
		 * id:支付号
		 * flag:标志收款成功或者收款失败按钮
		 *  */
 	    auditClick:function(el,e,id,flag){
 	    	var _this = this,
 	    	auditType = 1;
 	    	var _html = "<img class='y_prompt_box'  src='${ctx}/js/lib/layer/skin/default/y_warning.png' />"+
 	    				"<div class='y_prompt_content' ><span class='sp1'>确认收到汇款吗？</span>"+
 	    				"<span>请确认财务部已经收到相应转账汇款再进行本操作</span></div>";
 	    	var _title = " ";
 	    	
 	    	if(!flag){
 	    		_html = "<div class='y_prompt_content_des' >"+
		 	    		"<span class='l'>异常原因：</span>"+
		 	    		"<textarea type='text' class='w340' id='description' name='description'  maxlength='100' onkeyup='desLen();' onblur='validateVal()'></textarea>"+
		 	    		"<span id='des' class='ml10'>0/100</span></div>";
 	    		_title = "汇款异常";
 	    	}
 	    	var l = layer.confirm(_html, {
				offset: "auto",
				btn: ['确      认', '取      消'], //按钮
				title: _title,
				area: ['550px', '280px'],
				move: false,
				skin: "up_skin_class",
				yes:function(){
					var result = 1;
					if($("#des")[0]){   //如果存在输入框
						result = 0;
						if($("#description").val() == ""){
							$("#description").addClass('bred');
							return;
						}
					}
					var reason = "1";
	 	  	    	var des = $("#des")[0];
	 	  	    	if(des){   //如果存在输入框
	 	  	    		reason = $("#description").val();
					}
					$.aAjax({
						//url: ykyUrl.transaction+"/v1/orders/"+id+"/status",+ statusId
						url:  ykyUrl.pay + "/v1/payment?paymentPreferenceId="+id+"&result="+result+"&reason="+reason,
						type:"PUT",
			 	  	    success: function(data){			 	  	  
			 	  	    	layer.close(l);
			 	  	    	location.reload()
			 	  	    },
			 	  	    error:function(e){
			 	  	    	layer.closeAll('loading');
			 	  	    	console.log("系统错误，审批失败，请联系系统管理员："+e);			 	  	    
			 	  	    }
					});
				}
			})
 	    },
 	    /*exportClick：导出转账汇款或者导出全部转账汇款
 	     * status：标志导出转账汇款或者导出全部转账汇款
 	     * */
        exportClick:function(status){
        	var flag = false;
	    	var idList="";	    	
	    	showList.list.list.forEach(function (el) {
	           if(el.checked || status != ""){
	        	   if(el.orderStatus == "WAIT_CON_PSENT"){	        		   
		        	   idList+=el.id+","
	        	   }else{
	        		   flag =  true;
	        	   }
	           }
	        })
	    	idList = idList.slice(0,-1);
	    	
	    	var _html = "";
	    	
	    	if(idList=="" && status == ""){
	    		if(flag){
	    			_html = "选择项中包含非银行汇款类型订单，请重新选择";
	    		}else{	    			
		    		_html = "请选择需要导出的订单";
	    		}
	    	}else if(flag){	    		
    			_html = "选择项中包含非银行汇款类型订单，请重新选择";
	    	}
	    	
	    	if((idList=="") || flag){
	    		 layer.alert(_html,{
		    		offset: "auto",
					btn: false, //按钮
					title: " ",
					area: ['350px', '150px'],
					move: false,
					skin: "up_skin_class"
		    	})
		    	//layer.msg("请检查数据，存在不能导出的数据");
		    	 
	    		return false;
	    	}
	    	
	    	var tempData = "";
	    	
			if(status == "all"){  // 导出全部转账汇款
				var d = window.location.search
				if(d != ""){
					tempData = "?"+d.split("?")[1];
				}
        	}else{
        		tempData = "?ids="+idList;
        	}
	    	
			window.location.href = ykyUrl.transaction+"/v1/bills" + tempData;
			
	    }
 	})

 	var queryPage = 0,
 		querySize = 0;
	    
	    queryPage = showList.list.pageNum || 1
	    querySize = showList.list.pageSize || 10 ;
	   
 	/*if(!showList.list.pageNum){
 		queryPage = 1;
 	}else{
 		queryPage = showList.list.pageNum
 	}
 	if(!showList.list.pageSize){
 		querySize = 10;
 	}else{
 		querySize = showList.list.pageSize;
 	}*/
 	
 	var queryPage = getQueryString("page"),
 	querySize = getQueryString("size"),
	listPage = queryPage ? queryPage : 1,
	listSize = querySize ? querySize : 10;
 	
	listUrl = ykyUrl.transaction+"/v1/orders/search";
 	 
	var tempData = "";
	if(window.location.search.indexOf("?") != -1){
		tempData = "?"+window.location.search.split("?")[1];
	}else{
		tempData = "?page="+listPage+"&size="+listSize;
	}
	/* 请求商品列表数据 */
 	 $.aAjax({
	     url: listUrl+tempData,
	     type:"GET",
	     success: function(data) {
	    	 //var ck = {checked: false};
	    	 for(var i = 0; i< data.list.length; i++){
	    		 data.list[i].checked = false;
	    	 }
	    	 if( data.list.length == 0)
		    	 	showList.isLoading = "暂无数据";
	    	 
	    	 showList.list=data;
	    	 showList.isfirst = false;
	    	 
	    	 setPageOption(data);
	    	 loadPage(window.location.pathname+GetRequestWithout(window.location.search,"page"));
	    	 
	     },
	     error:function(e){
  	    	layer.closeAll('loading');
	  	    console.log("系统错误，审批失败，请联系系统管理员："+e);
		}
	})
	
	//收款失败，输入框必填
  	function validateVal(){
  		if($("#description").val() == ""){
  			$("#description").addClass('bred');
  		}else{
  			$("#description").removeClass('bred');
  		}
  	}
	 


  	$(function(){
  		  			
  		//日期控件
  		var start = {
			elem: '#createDateBegin',
			format: 'YYYY-MM-DD hh:mm:ss',
			// min: laydate.now(),    //设定最小日期为当前日期
			istime: true, //是否显示时间
			istoday: false,
			isclear: false, //是否显示清空
			//选择好日期的回调
			choose: function(dates) {
				$(this.elem).trigger("blur");
				var startTime = $('#createDateBegin').val(),
				 	endTime = $('#createDateEnd').val(),
				 	arr1 = startTime.split('-'),
				 	sdate = new Date(arr1[0], parseInt(arr1[1] - 1), arr1[2]),
				 	arr2 = endTime.split('-'),
				 	edate = new Date(arr2[0], parseInt(arr2[1] - 1), arr2[2]);
				if(sdate > edate) {
					layer.tips('开始时间不能大于结束时间', '#createDateEnd', {
						tips: 1,
						time: 1000,
					});
					$('#createDateBegin').val('');
				};
			}
		};
		var end = {
			elem: '#createDateEnd',
			format: 'YYYY-MM-DD hh:mm:ss',			
			istime: true, //是否显示时间
			istoday: false,
			isclear: false, //是否显示清空
			//选择好日期的回调
			choose: function(dates) {
				$(this.elem).trigger("blur");
				var startTime = $('#createDateBegin').val(),
					endTime = $('#createDateEnd').val(),
					arr1 = startTime.split('-'),
					sdate = new Date(arr1[0], parseInt(arr1[1] - 1), arr1[2]),
					arr2 = endTime.split('-'),
					edate = new Date(arr2[0], parseInt(arr2[1] - 1), arr2[2]);
				if(sdate > edate) {
					layer.tips('开始时间不能大于结束时间', '#createDateEnd', {
						tips: 1,
						time: 1000,
					});
					$('#createDateEnd').val('');
				};
			}
		};
  		$("#createDateBegin,.cc1").on("click", function() {
			laydate(start);
		});	
		$("#createDateEnd,.cc2").on("click", function() {
			laydate(end);
		});

		var start2 = {
				elem: '#paymentBegin',
				format: 'YYYY-MM-DD hh:mm:ss',
				// min: laydate.now(),    //设定最小日期为当前日期
				istime: true, //是否显示时间
				istoday: false,
				isclear: false, //是否显示清空
				//选择好日期的回调
				choose: function(dates) {
					$(this.elem).trigger("blur");
					var startTime = $('#paymentBegin').val(),
					 	endTime = $('#createDateEnd').val(),
					 	arr1 = startTime.split('-'),
					 	sdate = new Date(arr1[0], parseInt(arr1[1] - 1), arr1[2]),
					 	arr2 = endTime.split('-'),
					 	edate = new Date(arr2[0], parseInt(arr2[1] - 1), arr2[2]);
					if(sdate > edate) {
						layer.tips('开始时间不能大于结束时间', '#createDateEnd', {
							tips: 1,
							time: 1000,
						});
						$('#paymentBegin').val('');
					};
				}
			};
			var end2 = {
				elem: '#paymentEnd',
				format: 'YYYY-MM-DD hh:mm:ss',
				// min: laydate.now(),    //设定最小日期为当前日期
				istime: true, //是否显示时间
				istoday: false,
				isclear: false, //是否显示清空
				//选择好日期的回调
				choose: function(dates) {
					$(this.elem).trigger("blur");
					var startTime = $('#paymentBegin').val(),
					 	endTime = $('#paymentEnd').val(),
					 	arr1 = startTime.split('-'),
					 	sdate = new Date(arr1[0], parseInt(arr1[1] - 1), arr1[2]),
					 	arr2 = endTime.split('-'),
					 	edate = new Date(arr2[0], parseInt(arr2[1] - 1), arr2[2]);
					if(sdate > edate) {
						layer.tips('开始时间不能大于结束时间', '#paymentEnd', {
							tips: 1,
							time: 1000,
						});
						$('#paymentEnd').val('');
					};
				}
			};
	  		$("#paymentBegin,.cc3").on("click", function() {
				laydate(start2);
			});
		
			$("#paymentEnd,.cc4").on("click", function() {
				laydate(end2);
			});			
  		
  		$("#payment,#status,#currency").selectmenu()
  		.selectmenu( "menuWidget" )
  	    .addClass( "overflow" );  		
  	});
  	
  