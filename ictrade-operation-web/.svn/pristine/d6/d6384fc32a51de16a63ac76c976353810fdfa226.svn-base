/**
 * 部门列表
 * create by roy.he@yikuyi.com
 * time: 2017-05-08 11:30
 */
var database = ykyUrl.party + '/v1/dept';
var zTreeObj, zNodes, treeObj;
var activeMenuId = getQueryString("activeMenuId");

var deepCopy = function(source) {
	var result = {};
	for (var key in source) {
		result[key] = typeof source[key] === 'object' ? deepCopy(source[key]) :
			source[key];
	}
	return result;
}

var setting = { //zTree配置
	data: {
		key: {
			name: "name"
		},
		simpleData: {
			enable: true,
			idKey: "id",
			pIdKey: "parentId",
			rootPId: -1
		}
	},
	edit: {
		enable: true,
		showRemoveBtn: false, //是否显示删除按钮
		showRenameBtn: false, //是否显示编辑名称按钮
		drag: {
			isCopy: false, //是否允许复制节点
			isMove: true, //是否允许移动节点
			prev: true,
			next: true,
			inner: false //是否允许成为目标节点的子节点
		}
	},
	callback: {
		onClick: zTreeOnClick, //点击事件回调
		beforeDrag: zTreeBeforeDrag, //被拖拽之前的事件回调
		beforeDrop: zTreeBeforeDrop, //拽操作结束之前的事件回调
		onDrop: zTreeOnDrop //拖拽操作结束的事件回调
	}
};
var pathList;
/**
 * 面包屑数据填充
 * @param  {[array]} list [部门列表]
 * @return {[string]}      [部门名称]
 */
function getPathList(list) { //面包屑数据填充
	if (pathList[0]) {
		$("#pathName0").text(pathList[0].name);
	} else {
		$("#pathName0").text('');
	}

	if (pathList[1]) {
		$("#pathName1").text(pathList[1].name);
		$("#pathName1").prev().removeClass("dn");
	} else {
		$("#pathName1").text("");
		$("#pathName1").prev().addClass("dn");
	}
	if (pathList[2]) {
		$("#pathName2").text(pathList[2].name);
		$("#pathName2").prev().removeClass("dn");
	} else {
		$("#pathName2").text("");
		$("#pathName2").prev().addClass("dn");
	}
	if (pathList[3]) {
		$("#pathName3").text(pathList[3].name);
		$("#pathName3").prev().removeClass("dn");
	} else {
		$("#pathName3").text("");
		$("#pathName3").prev().addClass("dn");
	}
}

function zTreeOnClick(event, treeId, treeNode, clickFlag) { //点击事件回调
	$("#menuName").blur();
	maintain.menuData = menuTep;
	maintain.editMenuDetail = [];
	maintain.clickMenu(treeNode.id, treeNode.level, treeNode.name);
	maintain.editStatusTip = true;
	pathList = treeNode.getPath();
	getPathList(pathList);
	//treeObj.expandNode(treeNode)
};

function zTreeBeforeDrag(treeId, treeNodes) { //被拖拽之前的事件回调
	return false;
}

function zTreeBeforeDrop(treeId, treeNodes, targetNode, moveType) { //拽操作结束之前的事件回调
	return false;
}

function zTreeOnDrop(event, treeId, treeNodes, targetNode, moveType) { //拖拽操作结束的事件回调
	return false;
};



var menuTep = {
	"id": "",
	"name": "",
	"orderSeq": "1",
	"menuUrl": "",
	"menuStatus": "",
	"menuTypeId": "HELP_CENTER",
	"styleTypeId": "",
	"parentId": "",
	"menuLogoUrl": "i_user"
};

var maintain = avalon.define({
	$id: "list",
	dataList: [],
	childrenList: [],
	contentList: [],
	activeMenu: [],
	menuData: {},
	editMenuDetail: [],
	newContentBtn: false,
	editStatusTip: false,
	emptyValid: false,
	parentName: '',
	clickMenu: function(id, level, name) { //选中菜单
		maintain.childrenList = [];
		maintain.contentList = [];
		maintain.parentName = name;
		$.each(this.dataList, function(idx, ele) {
				if (ele.parentId == id) {
					ele.level = Number(level) + 1;
					maintain.childrenList.push(ele)
				}
				if (ele.id == id) {
					ele.level = level;
					maintain.activeMenu = ele;
				}
			})
			/* 获取文案内容列表 */
		if (maintain.childrenList.length == 0 && level > 1 && maintain.activeMenu.styleTypeId ==
			"") {
			$.aAjax({
				url: ykyUrl.party + '/v1/news',
				type: 'GET',
				success: function(data) {
					//var list = JSON.parse(data);
					maintain.contentList = data.list;
				},
				error: function(data) {
					console.log("error");
				}
			})
		}
	},
	editMenu: function(ele) { //新增、编辑菜单信息
		$("#menuName").blur();
		if (ele) {
			$("#menuName").focus();
			maintain.editMenuDetail = ele;
			maintain.focusNewMenu(ele);
		} else {
			maintain.editMenuDetail = [];
			$("#menuName").focus();
			maintain.focusNewMenu();
		}
		if (maintain.activeMenu.styleTypeId === "SLIDER") {
			//checkBtn();
		}
	},
	focusNewMenu: function(ele) {
		if (ele.name) { //编辑
			$("#menuName").focus();
			maintain.editStatusTip = false;
			maintain.emptyValid = false;
			maintain.menuData.id = ele.id;
			maintain.menuData.name = ele.name;
			maintain.menuData.orderSeq = ele.orderSeq;
			maintain.menuData.menuStatus = ele.menuStatus;
			maintain.menuData.styleTypeId = ele.styleTypeId;
			maintain.menuData.parentId = ele.parentId ? ele.parentId : maintain.activeMenu
				.id;
			maintain.menuData.menuLogoUrl = ele.menuLogoUrl;
		} else if (maintain.editMenuDetail.name) {
			$("#menuName").focus();
			maintain.editStatusTip = false;
			maintain.emptyValid = false;
			maintain.menuData.id = maintain.editMenuDetail.id;
			maintain.menuData.name = maintain.editMenuDetail.name;
			maintain.menuData.orderSeq = maintain.editMenuDetail.orderSeq;
			maintain.menuData.menuStatus = maintain.editMenuDetail.menuStatus;
			maintain.menuData.styleTypeId = maintain.editMenuDetail.styleTypeId;
			maintain.menuData.parentId = maintain.editMenuDetail.parentId ? maintain.editMenuDetail
				.parentId : maintain.activeMenu.id;
			maintain.menuData.menuLogoUrl = maintain.editMenuDetail.menuLogoUrl;
		} else { //新增
			$("#menuName").focus();
			maintain.editStatusTip = true;
			maintain.emptyValid = false;
			maintain.menuData.id = "";
			maintain.menuData.name = "";
			maintain.menuData.orderSeq = maintain.childrenList.length == 0 ? 1 :
				Number(maintain.childrenList[maintain.childrenList.length - 1].orderSeq) +
				1;
			maintain.menuData.menuStatus = 'ACTIVE';
			maintain.menuData.styleTypeId = "";
			maintain.menuData.parentId = maintain.activeMenu.id;
		}
	},
	saveData: function() { //保存菜单
		maintain.menuData.name = $.trim(maintain.menuData.name);
		var postObj = {
			parentId: maintain.menuData.parentId,
			name: maintain.menuData.name
		};
		if (maintain.menuData.name) {
			maintain.editStatusTip = false;
			var flag = maintain.menuData.id ? false : true;
			if (maintain.menuData.id)
				postObj.id = maintain.menuData.id;

			$.aAjax({
				url: database,
				type: flag ? 'POST' : 'PUT',
				data: JSON.stringify(postObj),
				success: function(data) {
					if (maintain.activeMenu.id) {
						location.href = location.origin + location.pathname +
							'?activeMenuId=' + maintain.activeMenu.id;
					} else {
						location.href = location.origin + location.pathname;
					}
				},
				error: function(data) {
					console.log("error");
				}
			})
		} else {
			maintain.emptyValid = true;
		}
	},
	//	deleteMenu: function(id) { //删除菜单
	//		var menuNode = treeObj.getNodeByParam('id', id);
	//		if (menuNode.children) {
	//			layer.alert("该部门下已有子部门，无法删除。请先删除部门下的所有子部门才能删除此部门。", {
	//				offset: "auto",
	//				btn: ['确      认'], //按钮
	//				title: " ",
	//				area: 'auto',
	//				maxWidth: '500px',
	//				move: false,
	//				skin: "up_skin_class",
	//				closeBtn: false,
	//			})
	//		} else {
	//			layer.alert("确认是否删除？", {
	//				offset: "auto",
	//				btn: ['确      认', '取      消'], //按钮
	//				title: " ",
	//				area: 'auto',
	//				maxWidth: '500px',
	//				move: false,
	//				skin: "up_skin_class",
	//				closeBtn: false,
	//				yes: function() {
	//					console.log("删除成功")
	//					$.aAjax({
	//						url: database + '/' + id,
	//						type: "DELETE",
	//						success: function(data) {
	//							if(maintain.activeMenu.id){
	//								 location.href =  location.origin + location.pathname+'?activeMenuId='+ maintain.activeMenu.id;
	//							 }else{
	//								 location.href =  location.origin + location.pathname;
	//							 }
	//						},
	//						error: function(data) {
	//							console.log("error");
	//						}
	//					})
	//				}
	//			})
	//		}
	//	}
})
maintain.menuData = menuTep;
$.aAjax({
	url: database + '/list',
	type: 'GET',
	success: function(data) {
		zNodes = data;
		zTreeObj = $.fn.zTree.init($("#treeDemo"), setting, zNodes);
		treeObj = $.fn.zTree.getZTreeObj("treeDemo");
		var nodes = treeObj.getNodes();
		maintain.dataList = data;
		if (nodes.length > 0 && !activeMenuId) {
			treeObj.selectNode(nodes[0]); //选中默认节点
			treeObj.expandNode(nodes[0]); //展开默认节点
			pathList = treeObj.getSelectedNodes()[0].getPath();
			getPathList(pathList);
			maintain.clickMenu(nodes[0].id, nodes[0].level, nodes[0].name);
		} else {
			$.each(zNodes, function(i, e) {
				if (e.id == activeMenuId) {
					var a_nodes = treeObj.getNodeByParam('id', activeMenuId);
					treeObj.selectNode(a_nodes); //选中指定节点
					treeObj.expandNode(a_nodes); //展开指定节点
					pathList = treeObj.getSelectedNodes()[0].getPath();
					getPathList(pathList);
					maintain.clickMenu(a_nodes.id, a_nodes.level, a_nodes.name);
				}
			})
		}
		//$(".load_complete").removeClass("dn");
	},
	error: function(data) {
		console.log('error');
	}
});
