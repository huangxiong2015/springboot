<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.yikuyi</groupId>
	<artifactId>ictrade-operation-web</artifactId>
	<packaging>war</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<name>ictrade-operation-web Maven Webapp</name>
	<url>http://maven.apache.org</url>
	<properties>
		<m2eclipse.wtp.contextRoot>/ictrade-operation-web</m2eclipse.wtp.contextRoot>
		<dep.ykyframework.version>1.0.0-SNAPSHOT</dep.ykyframework.version>
		<dep.ykyframework.all.version>1.1.0-SNAPSHOT</dep.ykyframework.all.version>
		<dep.ictrade-config.version>1.3.3-SNAPSHOT</dep.ictrade-config.version>
		<dep.party-api-client.version>1.3.2-SNAPSHOT</dep.party-api-client.version>
		<dep.spring.version>4.2.6.RELEASE</dep.spring.version>
		<dep.shiro.version>1.2.4</dep.shiro.version> <!-- shiro依赖包 -->

		<dep.spring-security.version>4.1.0.RELEASE</dep.spring-security.version>
		<dep.spring-session.version>1.2.1.RELEASE</dep.spring-session.version>
		<dep.mybatis.version>3.2.8</dep.mybatis.version>
		<dep.mybatis-spring.version>1.2.3</dep.mybatis-spring.version>
		<dep.wink.version>1.4</dep.wink.version>
		<dep.jaxb-api.version>2.2.12</dep.jaxb-api.version> <!-- wink 依赖的是 2.2 -->
		<dep.jaxb-impl.version>2.2.11</dep.jaxb-impl.version> <!-- wink 依赖的是 2.2.1.1 -->
		<dep.mysql-jdbc.version>5.1.37</dep.mysql-jdbc.version>
		<dep.jackson.version>2.4.0</dep.jackson.version>
		<dep.slf4j.version>1.7.12</dep.slf4j.version>
		<dep.logback.version>1.1.5</dep.logback.version>

		<!-- Plugin Versions -->
		<maven-compiler-plugin.version>3.1</maven-compiler-plugin.version>
		<maven-war-plugin.version>2.3</maven-war-plugin.version>
		<maven-replacer-plugin.version>1.5.3</maven-replacer-plugin.version>

		<!-- Project configuration -->
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.build.timestamp.format>yyyy-MM-dd HH:mm:ss</maven.build.timestamp.format>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<env.nexus.domain>https://develop.yikuyi.com:28443</env.nexus.domain> <!-- 私服库地址 -->
	</properties>

	<description>本工程是一个springmvc web工程，用于介绍spring mvc的用法，以及一些约定俗成的配置和方法</description>

	<distributionManagement>
		<repository>
			<id>nexus-releases</id>
			<url>${env.nexus.domain}/nexus/content/repositories/releases</url>
		</repository>
		<snapshotRepository>
			<id>nexus-snapshots</id>
			<url>${env.nexus.domain}/nexus/content/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>



	<dependencies>
		<dependency>
			<groupId>com.yikuyi</groupId>
			<artifactId>ictrade-config</artifactId>
			<version>${dep.ictrade-config.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${dep.spring.version}</version>
		</dependency>
		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-core</artifactId>
			<version>${dep.shiro.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-ehcache</artifactId>
			<version>${dep.shiro.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-spring</artifactId>
			<version>${dep.shiro.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-web</artifactId>
			<version>${dep.shiro.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-cas</artifactId>
			<version>${dep.shiro.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-aspectj</artifactId>
			<version>${dep.shiro.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3.1</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${dep.spring.version}</version>
		</dependency>

		<dependency>
			<artifactId>spring-context-support</artifactId>
			<groupId>org.springframework</groupId>
			<version>${dep.spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.session</groupId>
			<artifactId>spring-session</artifactId>
			<version>${dep.spring-session.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.session</groupId>
			<artifactId>spring-session-data-redis</artifactId>
			<version>${dep.spring-session.version}</version>
		</dependency>

		<dependency>
			<groupId>com.ykyframework</groupId>
			<artifactId>framework-web-cas-client</artifactId>
			<version>${dep.ykyframework.version}</version>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>19.0</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${dep.spring-security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${dep.spring-security.version}</version>
		</dependency>
		
		
			<!-- 2.6.6 is spring-webmvc 4.2.6 version default -->
		 <dependency>  
            <groupId>com.fasterxml.jackson.core</groupId>  
            <artifactId>jackson-core</artifactId>  
            <version>2.6.6</version>  
        </dependency>  
        <dependency>  
            <groupId>com.fasterxml.jackson.core</groupId>  
            <artifactId>jackson-databind</artifactId>  
            <version>2.6.6</version>  
        </dependency>  
        <dependency>  
            <groupId>com.fasterxml.jackson.core</groupId>  
            <artifactId>jackson-annotations</artifactId>  
            <version>2.6.6</version>  
        </dependency> 
        
	    <!-- logstash 日志集成 -->  
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${dep.logback.version}</version>
		</dependency>
		
		  <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
            <version>4.7</version>
        </dependency>
        <dependency>
            <groupId>de.idealo.logback</groupId>
            <artifactId>logback-redis</artifactId>
            <version>0.9.3</version>
        </dependency>
        <!-- The org.codehaus.janino:commons-compiler:3.0.6 dependency -->
        <!-- will be automatically pulled in by Maven's transitivity rules -->
        <dependency>
          <groupId>org.codehaus.janino</groupId>
          <artifactId>janino</artifactId>
          <version>3.0.6</version>
        </dependency>
        
        <dependency>
			<groupId>com.yikuyi</groupId>
			<artifactId>party-api-client</artifactId>
			<version>${dep.party-api-client.version}</version>
		</dependency>
        
        <dependency>
			<groupId>com.ykyframework</groupId>
			<artifactId>framework-all</artifactId>
			<version>${dep.ykyframework.all.version}</version>
		</dependency>
	</dependencies>



	<build>
		<finalName>ictrade-operation-web</finalName>
		 
		 <resources>
            <resource>                        
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                     <include>**/*</include>
                </includes>
            </resource>
          </resources>
		
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.6</version>
					<executions>
						<execution>
							<goals>
								<goal>test-jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<source>${maven.compiler.source}</source> <!-- 源代码使用的开发版本 -->
						<target>${maven.compiler.target}</target> <!-- 需要生成的目标class文件的编译版本 -->
						<!-- 忽略 js 错误警告 -->
						<jswarn>false</jswarn>
						<excludes>
							<exclude>**/*.bak</exclude>
						</excludes>

						<!-- 这下面的是可选项 -->
						<meminitial>128m</meminitial>
						<maxmem>512m</maxmem>
						<showDeprecation>true</showDeprecation>
						<compilerArgument>-Xlint:unchecked,deprecation,fallthrough,finally</compilerArgument>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>${maven-war-plugin.version}</version>
				</plugin>

				<plugin>
					<groupId>com.google.code.maven-replacer-plugin</groupId>
					<artifactId>replacer</artifactId>
					<version>${maven-replacer-plugin.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<warSourceExcludes>html/**</warSourceExcludes>
					<useCache>true</useCache>
					<packagingExcludes>WEB-INF/classes/logback-test.xml</packagingExcludes>
<!-- 					<warSourceExcludes>css/**,js/**/*.js</warSourceExcludes> -->
                    <webResources>
                    	<!-- 使用maven profile 替换web.xml中的spring profile -->
                        <resource>
                            <!-- 元配置文件的目录，相对于pom.xml文件的路径 -->
                            <directory>src/main/webapp</directory>
                            <!-- 是否过滤文件，也就是是否启动auto-config的功能 -->
                            <filtering>true</filtering>
                            <includes>
                            	<include>WEB-INF/web.xml</include>
                            </includes>
                        </resource>

                    </webResources>
				</configuration>
				<executions>
					<execution>
						<id>prepare-war</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>exploded</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>1.4</version>
				<executions>
					<execution>
						<phase>prepare-package</phase>
						<goals>
							<goal>create-timestamp</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<timestampFormat>yyMMddHHmmss</timestampFormat>
					<items>
						<item>timestamp</item>
					</items>
				</configuration>
			</plugin>


			<!-- maven-replacer-plugin的使用 http://www.aichengxu.com/other/2704742.htm -->
			<plugin>
                <groupId>com.google.code.maven-replacer-plugin</groupId>
                <artifactId>replacer</artifactId>
                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>replace</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
					<basedir>${project.build.directory}/${project.artifactId}</basedir>
					<includes>
						<include>**/*.jsp</include>
						<include>**/*.css</include>
					</includes>                    
                    <regex>true</regex>
                    <replacements>
                        <!-- 替换页面中的 css, 增加版本戳 -->
                        <replacement>
                            <token>
                                <![CDATA[<\s*link\s+.*href\s*=\s*"\s*(.+)\.css\s*".*(/>|></link>)]]>
                            </token>
                            <value>
                                <![CDATA[<link rel="stylesheet" type="text/css" href="$1.css?v=${timestamp}"/>]]>
                            </value>
                        </replacement>
                        
                        <!-- 替换页面中的 js, 增加版本戳 -->
                        <replacement>
                            <token>
                                <![CDATA[<\s*script\s+.*src\s*=\s*"\s*(.+)\.js\s*".*(/>|></script>)]]>
                            </token>
                            <value>
                                <![CDATA[<script type="text/javascript" src="$1.js?v=${timestamp}"></script>]]>
                            </value>
                        </replacement>
                        
                        <!-- 替换 css里引入的图片, 增加版本戳 -->
                        <replacement>
                            <token>
                                <![CDATA[url\s*\(\s*(.+\.(png|jpg|jpeg|gif))\s*\)]]>
                            </token>
                            <value>
                                <![CDATA[url($1?v=${timestamp})]]>
                            </value>
                        </replacement>
                        
                        <!-- 替换 css里import的css, 增加版本戳-->
                        <replacement>
                            <token>
                                <![CDATA[@import\s*url\(\s*\"(.+\.css)\"\s*\)]]>
                            </token>
                            <value>
                                <![CDATA[@import url(\"$1?v=${timestamp}\")]]>
                            </value>
                        </replacement>
                    </replacements>
                    <regexFlags>
                        <regexFlag>CASE_INSENSITIVE</regexFlag>
                        <regexFlag>MULTILINE</regexFlag>
<!--                         <regexFlag>DOTALL</regexFlag> -->
                    </regexFlags>
                </configuration>
            </plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>dev</id>
			<properties>
				<env.type>dev</env.type>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>sit</id>
			<properties>
				<env.type>sit</env.type>
			</properties>
		</profile>
		<profile>
			<id>sit1</id>
			<properties>
				<env.type>sit1</env.type>
			</properties>
		</profile>
		<profile>
			<id>uat</id>
			<properties>
				<env.type>uat</env.type>
			</properties>
		</profile>
		<profile>
			<id>hz-uat</id>
			<properties>
				<env.type>hz-uat</env.type>
			</properties>
		</profile>
		<profile>
			<id>perf</id>
			<properties>
				<env.type>perf</env.type>
			</properties>
		</profile>
		<profile>
			<id>prod</id>
			<properties>
				<env.type>prod</env.type>
			</properties>
		</profile>
		<profile>
			<id>sonar</id>
			<properties>
				<env.type>dev</env.type>
				<sonar.host.url>http://192.168.1.254:9000/sonarqube</sonar.host.url>
				<sonar.jacoco.reportMissing.force.zero>true</sonar.jacoco.reportMissing.force.zero>
				<argLine>-Xmx1024m</argLine>
				<sonar.exclusions>**/css/**/*.js,**/js/**/*.js,**/assets/**/*.js</sonar.exclusions>
                <sonar.test.exclusions>**/test/*</sonar.test.exclusions>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>sonar-maven-plugin</artifactId>
						<version>2.7.1</version>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<!-- Minimal supported version is 2.4 -->
						<version>2.13</version>
						<configuration>
							<testFailureIgnore>true</testFailureIgnore>
							<runOrder>random</runOrder>
							<properties>
								<property>
									<name>listener</name>
									<value>org.sonar.java.jacoco.JUnitListener</value>
								</property>
							</properties>
						</configuration>
					</plugin>
				</plugins>
			</build>

			<dependencies>
				<dependency>
					<groupId>org.sonarsource.java</groupId>
					<artifactId>sonar-jacoco-listeners</artifactId>
					<version>3.8</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>
	</profiles>

</project>
