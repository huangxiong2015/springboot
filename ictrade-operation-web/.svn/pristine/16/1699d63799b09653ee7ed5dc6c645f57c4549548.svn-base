/**
 * Created by yansha on 2017/7/26.
 */
/**
 * letter-select组件  调用： <letter-select
 :keyname="keyname"
 :validate="validate"
 :options="options"
 :id="id"
 :option-id="optionId"
 :option-name="optionName"
 :multiple="multiple"
 :options="options"
 @get-selected="getSelected"
 ></letter-select>
 * @param keyname 字段名
 * @param validate 检验规则，非必填
 * @param api   获取数据接口，与options二选一
 * @param options   静态选项数据data，与api二选一
 * @param optionId  选项值
 * @param optionName 选项文本
 * @param selected   [] 默认选中，非必填
 * @param id 输入框ID，必填
 * @param placeholder 占位提示，非必填
 * @method get-selected 方法，返回选中值
 * @method multiple   是否复选
 * @since 2017-07-26
 * @author yansha@yikuyi.com
 */

Vue.component('letter-select',{
    template:`<div class="form-group">
        <div class="checkVal"  :title="keyname"  > 
            <input type="hidden" :id="id" :name="name"  />
            <div class="pinyin-box">
	            <div class="pinyin-h">
		            <label :for="id" class="pinyin-title"> {{keyname}} <span v-if="validate&&validate.required" class="text-red">*</span></label>
		            <span class="search-box"><input type="text" v-model="searchText" :placeholder="placeholder" /></span>
		        </div>
		        <div class="pinyin-t">
		            <span><a href="javascript:void(0);" v-on:mouseover="selects()" :class="{'hover':retHover('')}">全部</a></span>
		            <span><a href="javascript:void(0);" v-on:mouseover="retObject('A')" :class="{'hover':retHover('A')}">A</a></span>
		            <span><a href="javascript:void(0);"  v-on:mouseover="retObject('B')" :class="{'hover':retHover('B')}">B</a></span>
		            <span><a href="javascript:void(0);"  v-on:mouseover="retObject('C')" :class="{'hover':retHover('C')}">C</a></span>
		            <span><a href="javascript:void(0);" v-on:mouseover="retObject('D')" :class="{'hover':retHover('D')}">D</a></span>
		            <span><a href="javascript:void(0);" v-on:mouseover="retObject('E')" :class="{'hover':retHover('E')}">E</a></span>
		            <span><a href="javascript:void(0);" v-on:mouseover="retObject('F')" :class="{'hover':retHover('F')}">F</a></span>
		            <span><a href="javascript:void(0);" v-on:mouseover="retObject('G')" :class="{'hover':retHover('G')}">G</a></span>
		            <span><a href="javascript:void(0);" v-on:mouseover="retObject('H')" :class="{'hover':retHover('H')}">H</a></span>
		            <span><a href="javascript:void(0);"  v-on:mouseover="retObject('I')" :class="{'hover':retHover('I')}">I</a></span>
		            <span><a href="javascript:void(0);"  v-on:mouseover="retObject('J')" :class="{'hover':retHover('J')}">J</a></span>
		            <span><a href="javascript:void(0);"  v-on:mouseover="retObject('K')" :class="{'hover':retHover('K')}">K</a></span>
		            <span><a href="javascript:void(0);"  v-on:mouseover="retObject('L')" :class="{'hover':retHover('L')}">L</a></span>
		            <span><a href="javascript:void(0);"  v-on:mouseover="retObject('M')" :class="{'hover':retHover('M')}">M</a></span>
		            <span><a href="javascript:void(0);"  v-on:mouseover="retObject('N')" :class="{'hover':retHover('N')}">N</a></span>
		            <span><a href="javascript:void(0);"  v-on:mouseover="retObject('O')" :class="{'hover':retHover('O')}">O</a></span>
		            <span><a href="javascript:void(0);"  v-on:mouseover="retObject('P')" :class="{'hover':retHover('P')}">P</a></span>
		            <span><a href="javascript:void(0);"  v-on:mouseover="retObject('Q')" :class="{'hover':retHover('Q')}">Q</a></span>
		            <span><a href="javascript:void(0);"  v-on:mouseover="retObject('R')" :class="{'hover':retHover('R')}" >R</a></span>
		            <span><a href="javascript:void(0);"  v-on:mouseover="retObject('S')" :class="{'hover':retHover('S')}">S</a></span>
		            <span><a href="javascript:void(0);"  v-on:mouseover="retObject('T')" :class="{'hover':retHover('T')}">T</a></span>
		            <span><a href="javascript:void(0);"  v-on:mouseover="retObject('U')" :class="{'hover':retHover('U')}">U</a></span>
		            <span><a href="javascript:void(0);"  v-on:mouseover="retObject('V')" :class="{'hover':retHover('V')}">V</a></span>
		            <span><a href="javascript:void(0);"  v-on:mouseover="retObject('W')" :class="{'hover':retHover('W')}">W</a></span>
		            <span><a href="javascript:void(0);"  v-on:mouseover="retObject('X')" :class="{'hover':retHover('X')}">X</a></span>
		            <span><a href="javascript:void(0);"  v-on:mouseover="retObject('Y')" :class="{'hover':retHover('Y')}" >Y</a></span>
		            <span><a href="javascript:void(0);"  v-on:mouseover="retObject('Z')" :class="{'hover':retHover('Z')}">Z</a></span> 
		            <span><a href="javascript:void(0);"  v-on:mouseover="retObject('other')" :class="{'hover':retHover('other')}">其他</a></span> 
		            
		        </div>
                <div class="pinyin-c">
                    <div class="con">  
                            <span v-for="el in filteredOption"><a href="#" @click="getSelected(el)" :class="{'active':retActive(el)}"> {{el[optionName]}}</a> </span> 
                    </div>
                </div>
            </div>
        </div>
    </div>`,
    props:{
        keyname : '',
        validate : Object,
        api:String,
        options: Array,
        id:'',
        name:'',
        optionId: '',
        optionName: '',
        selected:[Object, Array],
        multiple:Boolean,
        placeholder:{
            type:String,
            default:'搜索'
        }
    },
    data(){
        return{
            style:'STYLE_FIRST_LETTER',
            retData:{},
            retobj:[],
            selecteds: this.selected ? this.selected :[],
            active: false,
            char:'',
            dts : this.options ? this.options : [],
            searchText:''
        }
    },
    watch:{
        selected: function (val) {
            this.selecteds=val;
        },
        dts: function (val) {
            this.retobj= val;
            this._filter(val);
        }
    },
    computed:{
        filteredOption () {
            if (this.retobj&&this.searchText) {
                return this.retobj.filter(option => {
                    return option[this.optionName].match(new RegExp(this.searchText, 'i'))
                })
            } else {
                return this.retobj
            }
        }
    },
    mounted(){
        if(this.api){
            this.loadtype();
        }else{
            this.retobj= this.dts;
            this._filter(this.dts);
        }
    },
    methods:{
        loadtype : function() {
            var that=this;
            httpGet(that, that.api, {} , function (res , err) {//页面加载前调用方法
                if(res){
                    that.dts = res;
                }
            });
        },
        getSelected: function (obj) {
            var sels=[];
            if(this.multiple===true){
                if(_.findIndex(this.selecteds, obj)>-1){
                    sels = _.dropWhile(this.selecteds, obj);
                }else{
                    sels = _.unionWith(this.selecteds, [obj], _.isEqual);
                }
                this.selecteds= sels;
                this.$emit('get-selected', sels);
            }else{
                this.selecteds= obj;
                this.$emit('get-selected', obj);
            }
        },
        selects: function () {
            this.retobj= this.dts;
            this.char='';
        },
        retObject: function (py) {
            var dts= this.retData;
            this.retobj= dts[py.toLowerCase()];
            this.char= py.toLowerCase();
        },
        _filter:function (dts) {
            var optionName=this.optionName
            for(var i in dts) {
                var py= pinyin(dts[i][optionName], {
                    style: pinyin[this.style]
                });
                if(py[0]){
                    var str= py[0].join();
                    if(str.length>1){
                        str= str[0].toLowerCase();
                    }
                    var Regx  = /^[A-Za-z]+$/;
                    if(!Regx.test(str)){
                        str='other';
                    }
                    dts[i]['py'] = str;
                }
            }
            this.retData = _.groupBy(dts, 'py');
        },
        retActive: function (el) {
            var active=false;
            if(this.multiple===true){
                if(_.findIndex(this.selecteds, el)>-1) {
                    active=true
                }
            }else{
                if(this.selecteds[this.optionId]===el[this.optionId]){
                    active=true
                }
            }
            return active;
        },
        retHover: function (str) {
            var active=false;
            if(this.char === str.toLowerCase()) {
                active=true
            }
            return active;
        }
    }
})